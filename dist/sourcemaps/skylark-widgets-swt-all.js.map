{"version":3,"sources":["skylark-widgets-swt-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","swt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","isShiftHeld","files","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","onchange","webkitEntries","webkitdirectory","picker","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","eval","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","ui","bs3","bsTransitionEnd","Collapse","DEFAULTS","$element","$trigger","transitioning","$parent","getParent","addAriaAndCollapsedClass","hasWidth","activesData","actives","startEvent","collapse","scrollSize","TRANSITION_DURATION","isOpen","VERSION","Panel","toggler","$toggle","$body","$this","collpasePlugin","expand","full","unfull","toogleFull","close","panel_dom","minimize","Accordion","panel","panels","panelEl","_panels","_post","addPanel","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","[object Object]","$el","$fa_icon_left","$fa_icon_right","super","iconleft","iconright","Carousel","pause","keyboard","selectors","controls","playPause","indicators","slides","$indicators","paused","sliding","$active","$items","embeded","cycle","slide","slideIndex","to","which","getItemIndex","getItemForDirection","direction","activeIndex","willWrap","delta","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","indicatorTemplate","slideTemplate","templates","_bs_carousel","carousel","slideAction","createIndicator","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","getElementsByTagName","backgroundImage","addIndicator","indicatorContainer","list","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","addSlide","resetSlides","_Toggler","isChecked","uncheck","CheckBox","chk","lbl","label","chkSelector","lblSelector","$chk","$lbl","evt","$containerToggle","$label","$toggleContainer","setDisabledState","backdrop","Dropdown","isActive","clearMenus","ComboBox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","$dropMenu","$li","substr","$input","$button","dropdown","$inputGroupBtn","itemclicked","inputchanged","menuShown","setDefaultSelection","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","selectedItem","notFound","selectByText","innerText","selectByValue","selectBySelector","selectByIndex","synthetic","IS_NAVIGATIONAL","$selected","previousKeyPress","extra","TextBox","multiline","subtype","_dom","_sync","Listing","multiSelect","multiTier","mode","levels","hasChildren","tree","expandIcon","collapseIcon","treeIcon","itemGroup","accordion","checkable","icon","itemSelector","_$items","veItem","multiTierMode","hasChildrenSelector","childrenSelector","iconSelector","textSelector","itemTemplate","treeIconTemplate","treeIconSelector","expandIconClass","collapseIconClass","togglerSelector","findItem","valueOrIdx","selectOneItem","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$numeric","checkCanAction","$elm","numeric","pageNo","totalPageNoBtns","min","begin","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","_vbar","increase","tick","finish","Radio","$radio","$container","ignoreVisibilityCheck","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","$repeater","$icon","buttonclicked","clearPending","activeSearch","search","searchText","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","fromCharCode","itemChanged","newWidth","sizer","Boolean","Tabular","buttonClasses","removeLast","moveUp","moveDown","rowDrag","sectionClasses","caption","subPanel","footer","hideButtons","_showEmptyMessage","skipWidthCalculation","tbWrap","_tbWrap","$emptyCell","_i18n","rowEmpty","_finalColSpan","_calculateColumnWidth","$tbWhole","$scroller","tbHeadRow","tbColGp","_rowOrder","tbBodyRow","marginThreshold","modal","colLimit","z","headCellWidth","bodyCellWidth","_createGridButton","param","uiIcon","genButton","showLabel","_sortSequence","startIndex","tbWhole","hideRowNumColumn","idPrefix","_emptyGrid","_uniqueIndex","_saveSetting","_gridRowDragged","isMoveUp","uniqueIndex","tbRowIndex","afterRowDragged","_checkGridAndGetSettings","noMsg","$grid","alert","_systemMessages","notInit","getValueMultiGrid","_insertRow","numOfRowOrRowArray","rowIndex","callerUniqueIndex","tbRow","tbCell","addedRows","parentIndex","tbBody","tbSubRow","reachMaxRow","oldHeight","oldScroll","numOfRow","loadData","maintainScroll","maxRowsAllowed","useSubPanel","_sectionClasses","rowSpan","invisible","cellCss","ctrlName","ctrlId","nameFormatter","customBuilder","ctrlOptions","lastGroupName","lastGroupElem","group","Option","arrayOpt","eqIndex","substring","selectmenu","uiOption","textAlign","datepicker","spinner","autocomplete","ctrlAttr","ctrlProp","ctrlCss","ctrlClass","uiTooltip","tooltip","onClick","caller","appendGrid","onChange","getRowIndex","setCtrlValue","_hideLastColumn","_visibleCount","rowButtonsInFront","customGridButtons","rowUniqueIndex","insertRow","_buttonClasses","_removeRow","moveUpRow","moveDownRow","rowDragging","customRowButtons","buttonCfg","uiButton","atTheFront","makeCustomRowButton","colSpan","subPanelBuilder","afterRowInserted","afterRowAppended","maxNumRowsReached","newHeight","force","beforeRowRemove","afterRowRemoved","_loadData","records","isInit","insertResult","rowDataLoaded","_isDataLoaded","initData","dataLoaded","noColumnInfo","tbHead","tbFoot","elemNotTable","tbHeadCellRowNum","tbHeadCellRowButton","_defaultInitOptions","_defaultCallbackContainer","_wrapperId","_calculateWidth","i18n","_defaultTextResources","_defaultButtonClasses","_defaultSectionClasses","_defaultHideButtons","Date","getTime","pendingSkipCol","columnOpt","_defaultColumnOptions","resizable","displayCss","headerSpan","displayTooltip","handles","childnodes","captionTooltip","customFooterButtons","makeCustomBottomButton","sortable","axis","containment","handle","helper","org","helperSelect","orgSelect","lastIndexOf","originalPosition","appendRow","initRows","isReady","isDataLoaded","insertUniqueIndex","removeRow","emptyGrid","trTarget","trSwap","trAdtTarget","swapSeq","oldIndex","findRowIndex","afterRowSwapped","trAdtSwap","showColumn","colIndex","hideColumn","isColumnInvisible","getRowCount","getUniqueIndex","getRowValue","loopIndex","getAllValue","objectMode","rowValue","rowCountName","getCtrlValue","getCellCtrl","getCellCtrlByUniqueIndex","getRowOrder","getColumns","isRowEmpty","removeEmptyRows","maxBodyHeight","autoColumnWidth","subPanelGetter","emptyCriteria","customGetter","customSetter","notSupportMethod","exButton","btnClass","btnCss","btnAttr","rowData","keyName","suffix","adtData","newData","columnName","currentValue","defaultValue","Tab","$ul","$previous","hideEvent","showEvent","$target","activate","TabStrip","tabpane","droptabs","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","dropdownLabel","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","visibleTabsWidth","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","toolbarHeight","_this","opts","editor","editable","os","mobile","placeholderEl","addToolItem","itemWidget","addSeparator"],"mappings":"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","file":"../skylark-widgets-swt-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute(name);\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data, data.data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData, data);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-widgets-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar swt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(swt, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn skylark.attach(\"widgets.swt\",swt);\r\n\r\n});\r\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-swt/Widget',[\r\n  \"skylark-widgets-base/Widget\"\r\n],function(Widget){\r\n  return Widget;\r\n});\r\n\ndefine('skylark-bootstrap3/bs3',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\"\n],function(skylark,langx,browser,eventer,noder,geom,$){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tbs3 = ui.bs3 = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(bs3, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn bs3;\n});\n\ndefine('skylark-bootstrap3/transition',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,bs3){\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  eventer.special.bsTransitionEnd = eventer.special.transitionEnd;\n});\n\ndefine('skylark-bootstrap3/collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    _construct : function(element,options) {\n      options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(element,options);\n\n      this.$element      = $(element)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse(\"hide\");\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = eventer.create('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false)\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse,\"collapse\");\n\n  return Collapse;\n\n});\n\ndefine('skylark-widgets-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-widgets-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-widgets-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-bootstrap3/carousel',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n    /* ========================================================================\n     * Bootstrap: carousel.js v3.3.7\n     * http://getbootstrap.com/javascript/#carousel\n     * ========================================================================\n     * Copyright 2011-2016 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n    'use strict';\n\n    // CAROUSEL CLASS DEFINITION\n    // =========================\n\n    var Carousel = bs3.Carousel = plugins.Plugin.inherit({\n        klassName: \"Carousel\",\n\n        pluginName: \"bs3.carousel\",\n\n        options : {\n            interval: 5000,\n            pause: 'hover',\n            wrap: true,\n            keyboard: true,\n\n            selectors :{\n                controls : {\n                 // The class for the \"toggle\" control:\n                  toggle: '.toggle',\n                  // The class for the \"prev\" control:\n                  prev: '.prev',\n                  // The class for the \"next\" control:\n                  next: '.next',\n                  // The class for the \"close\" control:\n                  close: '.close',\n                  // The class for the \"play-pause\" toggle control:\n                  playPause: '.play-pause'\n                },\n                indicators : {\n                    container : \".carousel-indicators\"  \n                },\n                slides : {\n                    container : \"\",\n                    item : \".item\" \n                }\n            }\n\n\n        },\n\n        _construct: function(element, options) {\n            options = langx.mixin({}, $(element).data(), options);\n            //this.options = options\n            this.overrided(element,options);\n\n            this.$element = $(element)\n            this.$indicators = this.$element.find(this.options.selectors.indicators.container); //'.carousel-indicators'\n            this.paused = null\n            this.sliding = null\n            this.interval = null\n            this.$active = null\n            this.$items = null\n\n            var self = this;\n            if (!this.options.embeded) {\n                this.options.keyboard && this.$element.on('keydown.bs.carousel', langx.proxy(this.keydown, this))\n\n                this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n                    .on('mouseenter.bs3.carousel', langx.proxy(this.pause, this))\n                    .on('mouseleave.bs3.carousel', langx.proxy(this.cycle, this));\n\n                this.$element.on(\"click.bs3.carousel.data-api\", \"[data-slide],[data-slide-to]\", function(e) {\n                    var $this = $(this),\n                        slide = $this.attr('data-slide'),\n                        slideIndex = $this.attr('data-slide-to');\n\n                    if (slide == \"prev\") {\n                        self.prev();\n                    } else if (slide == \"next\") {\n                        self.next();\n                    } else  if (slideIndex) {\n                        self.to(slideIndex);\n                    }\n                    e.preventDefault();\n                });\n            }\n        },\n\n        keydown : function(e) {\n            if (/input|textarea/i.test(e.target.tagName)) return\n            switch (e.which) {\n                case 37:\n                    this.prev();\n                    break\n                case 39:\n                    this.next();\n                    break\n                default:\n                    return\n            }\n\n            e.preventDefault()\n        },\n\n        cycle : function(e) {\n            e || (this.paused = false)\n\n            this.interval && clearInterval(this.interval)\n\n            this.options.interval &&\n                !this.paused &&\n                (this.interval = setInterval(langx.proxy(this.next, this), this.options.interval))\n\n            return this\n        },\n\n        getItemIndex : function(item) {\n            this.$items = item.parent().children(this.options.selectors.slides.item);//'.item' \n            return this.$items.index(item || this.$active)\n        },\n\n        getItemForDirection : function(direction, active) {\n            var activeIndex = this.getItemIndex(active)\n            var willWrap = (direction == 'prev' && activeIndex === 0) ||\n                (direction == 'next' && activeIndex == (this.$items.length - 1))\n            if (willWrap && !this.options.wrap) return active\n            var delta = direction == 'prev' ? -1 : 1\n            var itemIndex = (activeIndex + delta) % this.$items.length\n            return this.$items.eq(itemIndex)\n        },\n\n        to : function(pos) {\n            var that = this\n            var activeIndex = this.getItemIndex(this.$active = this.$element.find(this.options.selectors.slides.item+\".active\"));//'.item.active'\n\n            if (pos > (this.$items.length - 1) || pos < 0) return\n\n            if (this.sliding) return this.$element.one('slid.bs.carousel', function() { that.to(pos) }) // yes, \"slid\"\n            if (activeIndex == pos) return this.pause().cycle()\n\n            return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n        },\n\n        pause : function(e) {\n            e || (this.paused = true)\n\n            if (this.$element.find(this.options.selectors.controls.next + \",\"+ this.options.selectors.controls.prev).length && browser.support.transition) { //.next,.prev\n                this.$element.trigger(browser.support.transition.end)\n                this.cycle(true)\n            }\n\n            this.interval = clearInterval(this.interval)\n\n            return this\n        },\n\n        next : function() {\n            if (this.sliding) return\n            return this.slide('next')\n        },\n\n        prev : function() {\n            if (this.sliding) return\n            return this.slide('prev')\n        },\n\n        slide : function(type, next) {\n            var $active = this.$element.find(this.options.selectors.slides.item+\".active\");//'.item.active'\n            var $next = next || this.getItemForDirection(type, $active)\n            var isCycling = this.interval\n            var direction = type == 'next' ? 'left' : 'right'\n            var that = this\n\n            if ($next.hasClass('active')) return (this.sliding = false)\n\n            var relatedTarget = $next[0]\n            var slideEvent = eventer.create('slide.bs.carousel', {\n                relatedTarget: relatedTarget,\n                direction: direction\n            })\n            this.$element.trigger(slideEvent)\n            if (slideEvent.isDefaultPrevented()) return\n\n            this.sliding = true\n\n            isCycling && this.pause()\n\n            if (this.$indicators.length) {\n                this.$indicators.find('.active').removeClass('active')\n                var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n                $nextIndicator && $nextIndicator.addClass('active')\n            }\n\n            var slidEvent = eventer.create('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n            if (browser.support.transition && this.$element.hasClass('slide')) {\n                $next.addClass(type)\n                $next[0].offsetWidth // force reflow\n                $active.addClass(direction)\n                $next.addClass(direction)\n                $active\n                    .one('transitionEnd', function() {\n                        $next.removeClass([type, direction].join(' ')).addClass('active')\n                        $active.removeClass(['active', direction].join(' '))\n                        that.sliding = false\n                        setTimeout(function() {\n                            that.$element.trigger(slidEvent)\n                        }, 0)\n                    })\n                    .emulateTransitionEnd()\n            } else {\n                $active.removeClass('active')\n                $next.addClass('active')\n                this.sliding = false\n                this.$element.trigger(slidEvent)\n            }\n\n            isCycling && this.cycle()\n\n            return this\n        },\n\n    });\n\n    // var Carousel = function (element, options) {\n    // }\n\n    Carousel.VERSION = '3.3.7'\n\n    Carousel.TRANSITION_DURATION = 600\n\n\n\n\n    // CAROUSEL PLUGIN DEFINITION\n    // ==========================\n    /*\n    function Plugin(option) {\n        return this.each(function() {\n            var $this = $(this)\n            var wgt = $this.data('bs.carousel')\n            var options = langx.mixin({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n            var action = typeof option == 'string' ? option : options.slide\n\n            if (!wgt) {\n                $this.data('bs.carousel', (wgt = new Carousel(this, options)));\n            }\n            if (typeof option == 'number') {\n                wgt.to(option);\n            } else if (action) {\n                wgt[action]()\n            } else if (options.interval) {\n                wgt.pause().cycle();\n            }\n        })\n    }\n    */\n    plugins.register(Carousel,\"carousel\",function(options){\n        //this -> plugin instance\n        var action = typeof options == 'string' ? options : options.slide\n        if (typeof options == 'number') {\n            this.to(options);\n        } else if (action) {\n            this[action]()\n        } else if (options.interval) {\n            this.pause().cycle();\n        }        \n    });\n\n    return Carousel;\n\n});\ndefine('skylark-widgets-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-widgets-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-widgets-swt/CheckBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var CheckBox =  _Toggler.inherit({\r\n    klassName: \"CheckBox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.CheckBox = CheckBox;\r\n});\r\n\ndefine('skylark-bootstrap3/dropdown',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle   = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = bs3.Dropdown = plugins.Plugin.inherit({\n    klassName: \"Dropdown\",\n\n    pluginName : \"bs3.dropdown\",\n\n    _construct : function(element,options) {\n      var $el = this.$element = $(element);\n      $el.on('click.bs.dropdown', this.toggle);\n      $el.on('keydown.bs.dropdown', '[data-toggle=\"dropdown\"],.dropdown-menu',this.keydown);\n    },\n\n    toggle : function (e) {\n      var $this = $(this)\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n          // if mobile we use a backdrop because click events don't delegate\n          $(document.createElement('div'))\n            .addClass('dropdown-backdrop')\n            .insertAfter($(this))\n            .on('click', clearMenus)\n        }\n\n        var relatedTarget = { relatedTarget: this }\n        $parent.trigger(e = eventer.create('show.bs.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) return\n\n        $this\n          .trigger('focus')\n          .attr('aria-expanded', 'true')\n\n        $parent\n          .toggleClass('open')\n          .trigger(eventer.create('shown.bs.dropdown', relatedTarget))\n      }\n\n      return false\n    },\n\n    keydown : function (e) {\n      if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n      var $this = $(this)\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      if (!isActive && e.which != 27 || isActive && e.which == 27) {\n        if (e.which == 27) $parent.find(toggle).trigger('focus')\n        return $this.trigger('click')\n      }\n\n      var desc = ' li:not(.disabled):visible a'\n      var $items = $parent.find('.dropdown-menu' + desc)\n\n      if (!$items.length) return\n\n      var index = $items.index(e.target)\n\n      if (e.which == 38 && index > 0)                 index--         // up\n      if (e.which == 40 && index < $items.length - 1) index++         // down\n      if (!~index)                                    index = 0\n\n      $items.eq(index).trigger('focus')\n    }\n\n  });\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && noder.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = eventer.create('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger(eventer.create('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n\n  /*\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin;\n  $.fn.dropdown.Constructor = Dropdown;\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n\n  return $.fn.dropdown;\n  */\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() });\n\n  plugins.register(Dropdown,\"dropdown\");\n\n  return Dropdown;\n\n});\n\ndefine('skylark-widgets-swt/ComboBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-widgets-swt/TextBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar TextBox =  swt.TextBox = Widget.inherit({\r\n\t\tklassName: \"TextBox\",\r\n\r\n    pluginName: \"lark.textbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn TextBox;\r\n});\r\n\r\n\n define('skylark-widgets-swt/Listing',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var Listing = Widget.inherit({\r\n        klassName : \"Listing\",\r\n\r\n        pluginName : \"lark.listing\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n        \t//multiTier : false,\r\n\r\n          multiTier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popup\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\"\r\n            },\r\n            tree : {\r\n              classes : {\r\n                expandIcon: 'glyphicon-plus',    // \"glyphicon-chevron-down\", 'glyphicon-folder-open'\r\n                collapseIcon: 'glyphicon-minus', // \"glyphicon-chevron-right\", 'glyphicon-folder-close'\r\n                children : \"\"                              // \"list-group children\"\r\n              },\r\n              templates : {\r\n                treeIcon : \"<i class=\\\"glyphicon\\\"></i>\",\r\n                itemGroup: \"\"\r\n\r\n              },\r\n              selectors : {\r\n                treeIcon : \" > i\"\r\n              }\r\n            },\r\n\r\n            accordion : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            }\r\n          },\r\n\r\n        \ttoggle : false,\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                multiTierMode = this.options.multiTier.mode,\r\n                hasChildrenSelector = this.options.multiTier.selectors.hasChildren,\r\n                childrenSelector = this.options.multiTier.selectors.children,\r\n                iconSelector = this.options.item.selectors.icon,\r\n                textSelector = this.options.item.selectors.text,\r\n                itemTemplate = this.options.item.template,                \r\n                obj = this;\r\n\r\n\r\n            if (multiTierMode) {\r\n              if (multiTierMode == \"tree\") {\r\n                   var treeIconTemplate = this.options.multiTier.tree.templates.treeIcon,\r\n                       treeIconSelector = this.options.multiTier.tree.selectors.treeIcon,\r\n                       expandIconClass = this.options.multiTier.tree.classes.expandIcon,\r\n                       collapseIconClass = this.options.multiTier.tree.classes.collapseIcon;\r\n\r\n                   this._$items.each(function(){\r\n                     if($(this).is(hasChildrenSelector)) {\r\n                        var children = $(this).find(childrenSelector);\r\n                        $(children).remove();\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(treeIconSelector).addClass(expandIconClass).on(\"click\" + \".\" + self.pluginName, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            $(this).toggleClass(expandIconClass).toggleClass(collapseIconClass);\r\n\r\n                            $(this).closest(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                            if ($toggle) {\r\n                                $(this).closest(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                            }\r\n                        });\r\n\r\n                        $(this).find(iconSelector).addClass('glyphicon-folder-open');\r\n                        $(this).find(textSelector).text(text);\r\n                        $(this).append(children);\r\n\r\n\r\n\r\n                      }  else {\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(iconSelector).addClass('glyphicon-file');\r\n                        $(this).find(textSelector).text(text);\r\n                    }\r\n\r\n                   });\r\n              } else if (multiTierMode == \"accordion\") {\r\n                var togglerSelector = self.options.multiTier.accordion.selectors.toggler;\r\n\r\n                this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                    e.preventDefault();\r\n\r\n                    $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).collapse(\"toggle\");\r\n\r\n                    if ($toggle) {\r\n                        $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").collapse(\"hide\");\r\n                    }\r\n                });\r\n              }\r\n\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n\r\n              \r\n            }   \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return swt.Listing = Listing;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-widgets-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-widgets-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-widgets-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-widgets-swt/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = Widget.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n\treturn \tswt.SearchBox = SearchBox;\n});\n\ndefine('skylark-widgets-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-widgets-swt/Tabular',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    var Tabular = Widget.inherit({\r\n        klassName : \"Tabular\",\r\n\r\n        pluginName : \"lark.tabular\",\r\n\r\n        options : {\r\n            buttonClasses : { \r\n                append: null, \r\n                removeLast: null, \r\n                insert: null, \r\n                remove: null, \r\n                moveUp: null, \r\n                moveDown: null, \r\n                rowDrag: null \r\n            },\r\n            sectionClasses : { \r\n                caption: null, \r\n                header: null, \r\n                body: null, \r\n                subPanel: null, \r\n                footer: null \r\n            },\r\n            hideButtons : { \r\n                append: false, \r\n                removeLast: false, \r\n                insert: false, \r\n                remove: false, \r\n                moveUp: false, \r\n                moveDown: false \r\n            }\r\n\r\n        },\r\n\r\n        _showEmptyMessage : function (settings, skipWidthCalculation) {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $emptyCell = $('<td></td>').text(settings._i18n.rowEmpty).attr('colspan', settings._finalColSpan);\r\n            $('table.body tbody', tbWrap).append($('<tr></tr>').addClass('empty').append($emptyCell));\r\n\r\n            /*\r\n            if (!skipWidthCalculation && settings.maxBodyHeight > 0) {\r\n                // Check scrolling enabled\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    // Set the width of empty message cell to the thead width\r\n                    $emptyCell.width($('table.head', tbWrap).width() - 4);\r\n                }\r\n            }\r\n            */\r\n        },  \r\n\r\n        _calculateColumnWidth : function () {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $tbWhole = $('table.body', tbWrap);\r\n            var $scroller = $('div.scroller', tbWrap);\r\n            var settings = $tbWhole.data('appendGrid');\r\n            var tbHeadRow = $('table.head tr.columnHead', tbWrap)[0];\r\n            var tbColGp = $('table.body colgroup', tbWrap)[0];\r\n            // Check any rows within the grid\r\n            if (settings._rowOrder.length > 0) {\r\n                // Reset the table/column width\r\n                $('td', tbHeadRow).width('auto');\r\n                $('col', tbColGp).width('auto');\r\n                $tbWhole.width('auto');\r\n                $scroller.width('auto');\r\n                // Check the total number of columns\r\n                var tbBodyRow = $('tbody tr', $tbWhole)[0];\r\n                var marginThreshold = -2;\r\n                if ($.fn.modal) {\r\n                    // If bootstrap is loaded, cell margin was reset\r\n                    marginThreshold = 1;\r\n                }\r\n                var colLimit = Math.min(tbHeadRow.childNodes.length, tbBodyRow.childNodes.length);\r\n                for (var z = 0; z < colLimit; z++) {\r\n                    var headCellWidth = tbHeadRow.childNodes[z].clientWidth + 1;\r\n                    var bodyCellWidth = tbBodyRow.childNodes[z].clientWidth + marginThreshold;\r\n                    if (bodyCellWidth > headCellWidth) {\r\n                        tbHeadRow.childNodes[z].style.width = bodyCellWidth + 'px';\r\n                    } else {\r\n                        tbColGp.childNodes[z].style.width = headCellWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                $('table.body,table.foot', tbWrap).width($('table.head').width());\r\n            }\r\n            // Set the width of footer row\r\n            $('table.foot', tbWrap).width($tbWhole.width());\r\n            // Check the scroll panel width\r\n            $scroller.width($tbWhole.width() + $scroller[0].offsetWidth - $scroller[0].clientWidth + 1);\r\n        },\r\n\r\n\r\n        _createGridButton : function (param, uiIcon) {\r\n            // Generate the standard grid action button based on its parameter.\r\n            var genButton = null;\r\n            if (param) {\r\n                if (langx.isFunction(param)) {\r\n                    // Generate button if it is a function.\r\n                    genButton = $(param());\r\n                } else if (param.nodeType) {\r\n                    // Clone the button if it is a DOM element.\r\n                    genButton = $(param).clone();\r\n                } else if (param.icon || param.label) {\r\n                    // Generate jQuery UI Button if it is a plain object with `icon` or `label` property.\r\n                    genButton = $('<button/>').attr({ type: 'button' });\r\n                    genButton.plugin(\"lark.button\",param);\r\n                }\r\n            }\r\n            if (!genButton) {\r\n                // Use default setting (jQuery UI Button) if button is not created.\r\n                genButton = $('<button/>').attr({ type: 'button' });\r\n                genButton.plugin(\"lark.button\",{ icon: uiIcon, showLabel: false });\r\n            }\r\n            return genButton;\r\n        },\r\n\r\n        _sortSequence : function (startIndex) {\r\n            var tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (!settings.hideRowNumColumn) {\r\n                for (var z = startIndex; z < settings._rowOrder.length; z++) {\r\n                    $('#' + settings.idPrefix + '_Row_' + settings._rowOrder[z] + ' td.first', tbWhole).text(z + 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        _emptyGrid : function () {\r\n            var tbWhole = this._elm;\r\n\r\n            // Load settings\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Remove rows\r\n            $('tbody', tbWhole).empty();\r\n            settings._rowOrder.length = 0;\r\n            settings._uniqueIndex = 0;\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Add empty row\r\n            this._showEmptyMessage(settings);\r\n        },        \r\n\r\n        _gridRowDragged : function (isMoveUp, uniqueIndex, tbRowIndex) {\r\n            var tbWhole = this._elm;\r\n\r\n            // Get setting\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Find the start sorting index\r\n            var startIndex = -1;\r\n            for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                if (settings._rowOrder[z] == uniqueIndex) {\r\n                    if (isMoveUp) {\r\n                        startIndex = tbRowIndex;\r\n                        settings._rowOrder.splice(z, 1);\r\n                        settings._rowOrder.splice(tbRowIndex, 0, uniqueIndex);\r\n                    } else {\r\n                        startIndex = z;\r\n                        settings._rowOrder.splice(tbRowIndex + 1, 0, uniqueIndex);\r\n                        settings._rowOrder.splice(z, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // Do re-order\r\n            this._sortSequence( startIndex);\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n\r\n            // Trigger event\r\n            if (langx.isFunction(settings.afterRowDragged)) {\r\n                settings.afterRowDragged(tbWhole, tbRowIndex, uniqueIndex);\r\n            }\r\n        },\r\n\r\n       _saveSetting : function (settings) {\r\n            var tbWhole = this._elm;\r\n\r\n            $(tbWhole).data('appendGrid', settings);\r\n            $('#' + settings.idPrefix + '_rowOrder', tbWhole).val(settings._rowOrder.join());\r\n        },\r\n\r\n\r\n        _checkGridAndGetSettings : function (noMsg) {\r\n            // Check the jQuery grid object is initialized and return its settings\r\n\r\n            var settings = null,\r\n                $grid = $(this._elm);\r\n\r\n            if ($grid.length == 1) {\r\n                settings = $grid.data('appendGrid');\r\n                if (!settings && !noMsg) {\r\n                    alert(_systemMessages.notInit);\r\n                }\r\n            } else if (!noMsg) {\r\n                alert(_systemMessages.getValueMultiGrid);\r\n            }\r\n            return settings;\r\n        },\r\n\r\n        _insertRow : function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            // Define variables\r\n            var self = this,\r\n                tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var addedRows = [], parentIndex = null, uniqueIndex, ctrl, hidden = [];\r\n            var tbHead = tbWhole.getElementsByTagName('thead')[0];\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            var tbRow, tbSubRow = null, tbCell, reachMaxRow = false, calColWidth = false;\r\n            var oldHeight = 0, oldScroll = 0;\r\n            /*\r\n            if (settings.maxBodyHeight > 0) {\r\n                tbHead = $('#' + settings._wrapperId + ' table thead')[0];\r\n            }\r\n            */\r\n            // Check number of row to be inserted\r\n            var numOfRow = numOfRowOrRowArray, loadData = false;\r\n            if (langx.isArray(numOfRowOrRowArray)) {\r\n                numOfRow = numOfRowOrRowArray.length;\r\n                loadData = true;\r\n            }\r\n            // Check parent row\r\n            if (langx.isNumeric(callerUniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == callerUniqueIndex) {\r\n                        rowIndex = z;\r\n                        if (z != 0) parentIndex = z - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (langx.isNumeric(rowIndex)) {\r\n                if (rowIndex >= settings._rowOrder.length) {\r\n                    rowIndex = null;\r\n                } else {\r\n                    parentIndex = rowIndex - 1;\r\n                }\r\n            }\r\n            else if (settings._rowOrder.length != 0) {\r\n                rowIndex = null;\r\n                parentIndex = settings._rowOrder.length - 1;\r\n            }\r\n            // Store old grid height\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                oldHeight = $(tbWhole).height();\r\n                oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n            }\r\n            // Remove empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                $('tr.empty', tbWhole).remove();\r\n                calColWidth = true;\r\n            }\r\n            // Add total number of row\r\n            for (var z = 0; z < numOfRow; z++) {\r\n                // Check maximum number of rows\r\n                if (0 < settings.maxRowsAllowed && settings._rowOrder.length >= settings.maxRowsAllowed) {\r\n                    reachMaxRow = true;\r\n                    break;\r\n                }\r\n                // Update variables\r\n                settings._uniqueIndex++;\r\n                uniqueIndex = settings._uniqueIndex;\r\n                hidden.length = 0;\r\n                // Check row insert index\r\n                if (langx.isNumeric(rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 0, uniqueIndex);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(tbSubRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    addedRows.push(rowIndex);\r\n                }\r\n                else {\r\n                    settings._rowOrder.push(uniqueIndex);\r\n                    tbBody.appendChild(tbRow = document.createElement('tr'));\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.appendChild(tbSubRow = document.createElement('tr'));\r\n                    }\r\n                    addedRows.push(settings._rowOrder.length - 1);\r\n                }\r\n                tbRow.id = settings.idPrefix + '_Row_' + uniqueIndex;\r\n                if (settings._sectionClasses.body) {\r\n                    tbRow.className = settings._sectionClasses.body;\r\n                }\r\n                $(tbRow).data('appendGrid', uniqueIndex);\r\n                // Config on the sub panel row\r\n                if (tbSubRow != null) {\r\n                    tbSubRow.id = settings.idPrefix + '_SubRow_' + uniqueIndex;\r\n                    $(tbSubRow).data('appendGrid', uniqueIndex);\r\n                    if (settings._sectionClasses.subPanel) {\r\n                        tbSubRow.className = settings._sectionClasses.subPanel;\r\n                    }\r\n                }\r\n                // Add row number\r\n                if (!settings.hideRowNumColumn) {\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    $(tbCell).addClass('ui-widget-content first').text(settings._rowOrder.length);\r\n                    if (settings.useSubPanel) tbCell.rowSpan = 2;\r\n                }\r\n                // Process on each columns\r\n                for (var y = 0; y < settings.columns.length; y++) {\r\n                    // Skip hidden\r\n                    if (settings.columns[y].type == 'hidden') {\r\n                        hidden.push(y);\r\n                        continue;\r\n                    }\r\n                    // Check column invisble\r\n                    var className = 'ui-widget-content';\r\n                    if (settings.columns[y].invisible) className += ' invisible';\r\n                    // Insert cell\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.id = settings.idPrefix + '_' + settings.columns[y].name + '_td_' + uniqueIndex;\r\n                    tbCell.className = className;\r\n                    if (settings.columns[y].cellCss != null) $(tbCell).css(settings.columns[y].cellCss);\r\n                    // Prepare control id and name\r\n                    var ctrlId = settings.idPrefix + '_' + settings.columns[y].name + '_' + uniqueIndex, ctrlName;\r\n                    if (langx.isFunction(settings.nameFormatter)) {\r\n                        ctrlName = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                    } else {\r\n                        ctrlName = ctrlId;\r\n                    }\r\n                    // Check control type\r\n                    ctrl = null;\r\n                    if (settings.columns[y].type == 'custom') {\r\n                        if (langx.isFunction(settings.columns[y].customBuilder)) {\r\n                            ctrl = settings.columns[y].customBuilder(tbCell, settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        }\r\n                    } else if (settings.columns[y].type == 'select' || settings.columns[y].type == 'ui-selectmenu') {\r\n                        ctrl = document.createElement('select');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        // Build option list\r\n                        if (langx.isArray(settings.columns[y].ctrlOptions)) {\r\n                            // For array type option list\r\n                            if (settings.columns[y].ctrlOptions.length > 0) {\r\n                                if (langx.isPlainObject(settings.columns[y].ctrlOptions[0])) {\r\n                                    // Check to generate optGroup or not\r\n                                    var lastGroupName = null, lastGroupElem = null;\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].group)) {\r\n                                            if (lastGroupName != settings.columns[y].ctrlOptions[x].group) {\r\n                                                lastGroupName = settings.columns[y].ctrlOptions[x].group;\r\n                                                lastGroupElem = document.createElement('optgroup');\r\n                                                lastGroupElem.label = lastGroupName;\r\n                                                ctrl.appendChild(lastGroupElem);\r\n                                            }\r\n                                        } else {\r\n                                            lastGroupElem = null;\r\n                                        }\r\n                                        var option = $('<option/>').val(settings.columns[y].ctrlOptions[x].value).text(settings.columns[y].ctrlOptions[x].label);\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].title)) {\r\n                                            option.attr('title', settings.columns[y].ctrlOptions[x].title);\r\n                                        }\r\n                                        if (null == lastGroupElem) {\r\n                                            option.appendTo(ctrl);\r\n                                        }\r\n                                        else {\r\n                                            option.appendTo(lastGroupElem);\r\n                                        }\r\n                                        // ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x].label, settings.columns[y].ctrlOptions[x].value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], settings.columns[y].ctrlOptions[x]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (langx.isPlainObject(settings.columns[y].ctrlOptions)) {\r\n                            // For plain object type option list\r\n                            for (var x in settings.columns[y].ctrlOptions) {\r\n                                ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], x);\r\n                            }\r\n                        } else if (typeof (settings.columns[y].ctrlOptions) == 'string') {\r\n                            // For string type option list\r\n                            var arrayOpt = settings.columns[y].ctrlOptions.split(';');\r\n                            for (var x = 0; x < arrayOpt.length; x++) {\r\n                                var eqIndex = arrayOpt[x].indexOf(':');\r\n                                if (-1 == eqIndex) {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x], arrayOpt[x]);\r\n                                } else {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x].substring(eqIndex + 1, arrayOpt[x].length), arrayOpt[x].substring(0, eqIndex));\r\n                                }\r\n                            }\r\n                        } else if (langx.isFunction(settings.columns[y].ctrlOptions)) {\r\n                            settings.columns[y].ctrlOptions(ctrl);\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-selectmenu') {\r\n                            $(ctrl).selectmenu(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    else if (settings.columns[y].type == 'checkbox') {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'checkbox';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        ctrl.value = 1;\r\n                        tbCell.appendChild(ctrl);\r\n                        tbCell.style.textAlign = 'center';\r\n                    }\r\n                    else if (settings.columns[y].type == 'textarea') {\r\n                        ctrl = document.createElement('textarea');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else if (-1 != settings.columns[y].type.search(/^(color|date|datetime|datetime\\-local|email|month|number|range|search|tel|time|url|week)$/)) {\r\n                        ctrl = document.createElement('input');\r\n                        try {\r\n                            ctrl.type = settings.columns[y].type;\r\n                        }\r\n                        catch (err) { /* Not supported type */ }\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else {\r\n                        // Generate text input\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'text';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-datepicker') {\r\n                            $(ctrl).datepicker(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-spinner') {\r\n                            $(ctrl).spinner(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-autocomplete') {\r\n                            $(ctrl).autocomplete(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    // Add extra control properties\r\n                    if (settings.columns[y].type != 'custom') {\r\n                        // Add control attributes as needed\r\n                        if (settings.columns[y].ctrlAttr != null) $(ctrl).attr(settings.columns[y].ctrlAttr);\r\n                        // Add control properties as needed\r\n                        if (settings.columns[y].ctrlProp != null) $(ctrl).prop(settings.columns[y].ctrlProp);\r\n                        // Add control CSS as needed\r\n                        if (settings.columns[y].ctrlCss != null) $(ctrl).css(settings.columns[y].ctrlCss);\r\n                        // Add control class as needed\r\n                        if (settings.columns[y].ctrlClass != null) $(ctrl).addClass(settings.columns[y].ctrlClass);\r\n                        // Add jQuery UI tooltip as needed\r\n                        if (settings.columns[y].uiTooltip) $(ctrl).tooltip(settings.columns[y].uiTooltip);\r\n                        // Add control events as needed\r\n                        if (langx.isFunction(settings.columns[y].onClick)) {\r\n                            $(ctrl).click({ caller: tbWhole, callback: settings.columns[y].onClick, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).appendGrid('getRowIndex', evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                        if (langx.isFunction(settings.columns[y].onChange)) {\r\n                            $(ctrl).change({ caller: tbWhole, callback: settings.columns[y].onChange, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).plugin(\"lark.tabular\").getRowIndex(evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                    }\r\n                    if (loadData) {\r\n                        // Load data if needed\r\n                        setCtrlValue(settings, y, uniqueIndex, numOfRowOrRowArray[z][settings.columns[y].name]);\r\n                    } else if (!isEmpty(settings.columns[y].value)) {\r\n                        // Set default value\r\n                        setCtrlValue(settings, y, uniqueIndex, settings.columns[y].value);\r\n                    }\r\n                }\r\n                // Add button cell if needed\r\n                if (!settings._hideLastColumn || settings.columns.length > settings._visibleCount) {\r\n                    if (!settings.rowButtonsInFront) {\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    } else if (!settings.hideRowNumColumn) {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.childNodes[1]);\r\n                    } else {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.firstChild);\r\n                    }\r\n                    tbCell.className = 'ui-widget-content last';\r\n                    tbCell.id = settings.idPrefix + '_last_td_' + uniqueIndex;\r\n                    if (settings._hideLastColumn) tbCell.style.display = 'none';\r\n                    // Add standard buttons\r\n                    if (!settings.hideButtons.insert) {\r\n                        var button = this._createGridButton(settings.customGridButtons.insert, 'ui-icon-arrowreturnthick-1-w')\r\n                            .attr({ id: settings.idPrefix + '_Insert_' + uniqueIndex, title: settings._i18n.insert, tabindex: -1 })\r\n                            .addClass('insert').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").insertRow(1, null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault(settings._buttonClasses.insert);\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.insert)) button.addClass(settings._buttonClasses.insert);\r\n                    }\r\n                    if (!settings.hideButtons.remove) {\r\n                        var button = this._createGridButton(settings.customGridButtons.remove, 'ui-icon-trash')\r\n                            .attr({ id: settings.idPrefix + '_Delete_' + uniqueIndex, title: settings._i18n.remove, tabindex: -1 })\r\n                            .addClass('remove').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                self._removeRow( null, rowUniqueIndex, false);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.remove)) button.addClass(settings._buttonClasses.remove);\r\n                    }\r\n                    if (!settings.hideButtons.moveUp) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveUp, 'ui-icon-arrowthick-1-n')\r\n                            .attr({ id: settings.idPrefix + '_MoveUp_' + uniqueIndex, title: settings._i18n.moveUp, tabindex: -1 })\r\n                            .addClass('moveUp').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveUpRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveUp)) button.addClass(settings._buttonClasses.moveUp);\r\n                    }\r\n                    if (!settings.hideButtons.moveDown) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveDown, 'ui-icon-arrowthick-1-s')\r\n                            .attr({ id: settings.idPrefix + '_MoveDown_' + uniqueIndex, title: settings._i18n.moveDown, tabindex: -1 })\r\n                            .addClass('moveDown').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveDownRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveDown)) button.addClass(settings._buttonClasses.moveDown);\r\n                    }\r\n                    // Handle row dragging\r\n                    if (settings.rowDragging) {\r\n                        var button = $('<div/>').addClass('rowDrag ui-state-default ui-corner-all')\r\n                            .attr('title', settings._i18n.rowDrag).append($('<div/>').addClass('ui-icon ui-icon-caret-2-n-s').append($('<span/>').addClass('ui-button-text').text('Drag')))\r\n                            .appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.rowDrag)) button.addClass(settings._buttonClasses.rowDrag);\r\n                    }\r\n                    // Add hidden\r\n                    for (var y = 0; y < hidden.length; y++) {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.id = settings.idPrefix + '_' + settings.columns[hidden[y]].name + '_' + uniqueIndex;\r\n                        if (langx.isFunction(settings.nameFormatter)) {\r\n                            ctrl.name = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        } else {\r\n                            ctrl.name = ctrl.id;\r\n                        }\r\n                        ctrl.type = 'hidden';\r\n\r\n                        if (loadData) {\r\n                            // Load data if needed\r\n                            ctrl.value = numOfRowOrRowArray[z][settings.columns[hidden[y]].name];\r\n                        } else if (!isEmpty(settings.columns[hidden[y]].value)) {\r\n                            // Set default value\r\n                            ctrl.value = settings.columns[hidden[y]].value;\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    // Add extra buttons\r\n                    if (settings.customRowButtons && settings.customRowButtons.length) {\r\n                        // Add front buttons\r\n                        for (var y = settings.customRowButtons.length - 1; y >= 0; y--) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                                $(tbCell).prepend(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                        // Add end buttons\r\n                        for (var y = 0; y < settings.customRowButtons.length; y++) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                                $(tbCell).append(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // Create sub panel\r\n                if (settings.useSubPanel) {\r\n                    tbSubRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.className = 'ui-widget-content';\r\n                    tbCell.colSpan = settings._visibleCount + (settings._hideLastColumn ? 0 : 1);\r\n                    if (langx.isFunction(settings.subPanelBuilder)) {\r\n                        settings.subPanelBuilder(tbCell, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            // Check if re-calculate column width is required\r\n            /*\r\n            if (0 < settings.maxBodyHeight && settings._calculateWidth && !calColWidth) {\r\n                var scroll = $('#' + settings._wrapperId + '>div.scroller')[0];\r\n                if (scroll.scrollHeight > scroll.offsetHeight) {\r\n                    calColWidth = true;\r\n                    settings._calculateWidth = false;\r\n                }\r\n            }\r\n            */\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Calculate column width\r\n            /*\r\n            if (calColWidth && settings.autoColumnWidth && settings.maxBodyHeight > 0) {\r\n                this._calculateColumnWidth();\r\n            }\r\n            */\r\n            // Trigger events\r\n            if (langx.isNumeric(rowIndex)) {\r\n                if (langx.isFunction(settings.afterRowInserted)) {\r\n                    settings.afterRowInserted(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            else {\r\n                if (langx.isFunction(settings.afterRowAppended)) {\r\n                    settings.afterRowAppended(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            if (reachMaxRow && langx.isFunction(settings.maxNumRowsReached)) {\r\n                settings.maxNumRowsReached();\r\n            }\r\n            // Scroll the page when append row\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                // Try to maintain the height so that user no need to scroll every time when row added\r\n                var newHeight = $(tbWhole).height();\r\n                $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n            }\r\n            // Return added rows' uniqueIndex\r\n            return { addedRows: addedRows, parentIndex: parentIndex, rowIndex: rowIndex };\r\n        },\r\n\r\n        _removeRow : function (rowIndex, uniqueIndex, force) {\r\n            var tbWhole = this._elm;\r\n\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            if (langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        rowIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (langx.isNumeric(rowIndex)) {\r\n                // Remove middle row\r\n                if (force || typeof (settings.beforeRowRemove) != 'function' || settings.beforeRowRemove(tbWhole, rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 1);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Sort sequence\r\n                    this._sortSequence( rowIndex);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, rowIndex);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Store old window scroll value\r\n                var oldHeight = 0, oldScroll = 0;\r\n                if (settings.maintainScroll) {\r\n                    oldHeight = $(tbWhole).height();\r\n                    oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n                }\r\n                // Remove last row\r\n                if (force || !langx.isFunction(settings.beforeRowRemove) || settings.beforeRowRemove(tbWhole, settings._rowOrder.length - 1)) {\r\n                    uniqueIndex = settings._rowOrder.pop();\r\n                    tbBody.removeChild(tbBody.lastChild);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.lastChild);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, null);\r\n                    }\r\n                }\r\n                // Scroll the page when append row\r\n                if (settings.maintainScroll) {\r\n                    // Try to maintain the height so that user no need to scroll every time when row added\r\n                    var newHeight = $(tbWhole).height();\r\n                    $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n                }\r\n            }\r\n            // Add empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings);\r\n            }\r\n        },\r\n\r\n        _loadData : function (records, isInit) {\r\n            var tbWhole = this._elm;\r\n            var tbBody, tbRow, tbCell, uniqueIndex, insertResult;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (settings) {\r\n                // Clear existing content\r\n                tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                $(tbBody).empty();\r\n                settings._rowOrder.length = 0;\r\n                settings._uniqueIndex = 0;\r\n                // Check any records\r\n                if (records != null && records.length) {\r\n                    // Add rows\r\n                    insertResult = this._insertRow(records.length, null, null);\r\n                    // Set data\r\n                    for (var r = 0; r < insertResult.addedRows.length; r++) {\r\n                        for (var c = 0; c < settings.columns.length; c++) {\r\n                            setCtrlValue(settings, c, settings._rowOrder[r], records[r][settings.columns[c].name]);\r\n                        }\r\n                        if (langx.isFunction(settings.rowDataLoaded)) {\r\n                            settings.rowDataLoaded(tbWhole, records[r], r, settings._rowOrder[r]);\r\n                        }\r\n                    }\r\n                }\r\n                // Save setting\r\n                settings._isDataLoaded = true;\r\n                if (isInit) settings.initData = null;\r\n                $(tbWhole).data('appendGrid', settings);\r\n                // Trigger data loaded event\r\n                if (langx.isFunction(settings.dataLoaded)) {\r\n                    settings.dataLoaded(tbWhole, records);\r\n                }\r\n            }\r\n        },\r\n\r\n        _init: function () {\r\n            var options = this.options,\r\n                self = this;\r\n            // Check mandatory paramters included\r\n            if (!langx.isArray(options.columns) || options.columns.length == 0) {\r\n                alert(_systemMessages.noColumnInfo);\r\n            }\r\n            // Check target element is table or not\r\n            var tbWhole = this._elm, tbWrap, tbHead, tbBody, tbFoot, tbColGp, tbRow, tbCell;\r\n            if (isEmpty(tbWhole.tagName) || tbWhole.tagName != 'TABLE') {\r\n                alert(_systemMessages.elemNotTable);\r\n            }\r\n            // Generate settings\r\n            var settings = langx.extend({}, _defaultInitOptions, _defaultCallbackContainer, options);\r\n            // Add internal settings\r\n            langx.extend(settings, {\r\n                // The UniqueIndex accumulate counter\r\n                _uniqueIndex: 0,\r\n                // The row order array\r\n                _rowOrder: [],\r\n                // Indicate data is loaded or not\r\n                _isDataLoaded: false,\r\n                // Visible column count for internal calculation\r\n                _visibleCount: 0,\r\n                // Total colSpan count after excluding `hideRowNumColumn` and not generating last column\r\n                _finalColSpan: 0,\r\n                // Indicate to hide last column or not\r\n                _hideLastColumn: false,\r\n                // The element ID of the `appendGrid` wrapper\r\n                _wrapperId: null,\r\n                // \r\n                _calculateWidth: true\r\n            });\r\n            // Labels or messages used in grid\r\n            if (langx.isPlainObject(options.i18n))\r\n                settings._i18n = langx.extend({}, _defaultTextResources, options.i18n);\r\n            else\r\n                settings._i18n = langx.extend({}, _defaultTextResources);\r\n            // The extra class names for buttons\r\n            if (langx.isPlainObject(options.buttonClasses))\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses, options.buttonClasses);\r\n            else\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses);\r\n            // The extra class names for sections\r\n            if (langx.isPlainObject(options.sectionClasses))\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses, options.sectionClasses);\r\n            else\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses);\r\n            // Make sure the `hideButtons` setting defined\r\n            if (langx.isPlainObject(options.hideButtons))\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons, options.hideButtons);\r\n            else\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons);\r\n            // Check `idPrefix` is defined\r\n            if (isEmpty(settings.idPrefix)) {\r\n                // Check table ID defined\r\n                if (isEmpty(tbWhole.id) || tbWhole.id == '') {\r\n                    // Generate an ID using current time\r\n                    settings.idPrefix = 'ag' + new Date().getTime();\r\n                }\r\n                else {\r\n                    settings.idPrefix = tbWhole.id;\r\n                }\r\n            }\r\n            // Check custom grid button parameters\r\n            if (!langx.isPlainObject(settings.customGridButtons)) {\r\n                settings.customGridButtons = {};\r\n            }\r\n            // Check rowDragging and useSubPanel option\r\n            if (settings.useSubPanel && settings.rowDragging) {\r\n                settings.rowDragging = false;\r\n            }\r\n            // Create thead and tbody\r\n            tbHead = document.createElement('thead');\r\n            tbHead.className = 'ui-widget-header';\r\n            tbBody = document.createElement('tbody');\r\n            tbBody.className = 'ui-widget-content';\r\n            tbFoot = document.createElement('tfoot');\r\n            tbFoot.className = 'ui-widget-header';\r\n            tbColGp = document.createElement('colgroup');\r\n            // Prepare the table element\r\n            settings._wrapperId = settings.idPrefix + '-wrapper';\r\n            tbWrap = this._tbWrap = document.createElement('div');\r\n            $(tbWrap).attr('id', settings._wrapperId).addClass('appendGrid').insertAfter(tbWhole);\r\n            $(tbWhole).empty().addClass('ui-widget').appendTo(tbWrap);\r\n            // Check if content scrolling is enabled\r\n            /*\r\n            if (settings.maxBodyHeight > 0) {\r\n                // Seperate the thead and tfoot from source table\r\n                $('<table></table>').addClass('ui-widget head').append(tbHead).prependTo(tbWrap);\r\n                $(tbWhole).addClass('body').wrap($('<div></div>').addClass('scroller').css('max-height', settings.maxBodyHeight)).append(tbColGp, tbBody);\r\n                $('<table></table>').addClass('ui-widget foot').append(tbFoot).appendTo(tbWrap);\r\n            } else {\r\n                // Add thead, tbody and tfoot to the same table\r\n                $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\r\n            }\r\n            */\r\n            // Add thead, tbody and tfoot to the same table\r\n            $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\r\n\r\n            // Handle header row\r\n            var tbHeadCellRowNum, tbHeadCellRowButton;\r\n            tbHead.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.header) {\r\n                tbRow.className = 'columnHead ' + settings._sectionClasses.header;\r\n            } else {\r\n                tbRow.className = 'columnHead';\r\n            }\r\n            if (!settings.hideRowNumColumn) {\r\n                tbRow.appendChild(tbHeadCellRowNum = document.createElement('td'));\r\n                tbHeadCellRowNum.className = 'ui-widget-header first';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Prepare column information and add column header\r\n            var pendingSkipCol = 0;\r\n            for (var z = 0; z < settings.columns.length; z++) {\r\n                // Assign default setting\r\n                var columnOpt = langx.extend({}, _defaultColumnOptions, settings.columns[z]);\r\n                settings.columns[z] = columnOpt;\r\n                // Skip hidden\r\n                if (settings.columns[z].type != 'hidden') {\r\n                    // Check column is invisible\r\n                    if (!settings.columns[z].invisible) {\r\n                        settings._visibleCount++;\r\n                    }\r\n                    // Check skip header colSpan\r\n                    if (pendingSkipCol == 0) {\r\n                        var className = 'ui-widget-header';\r\n                        if (settings.columns[z].invisible) className += ' invisible';\r\n                        if (settings.columns[z].resizable) className += ' resizable';\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                        tbCell.id = settings.idPrefix + '_' + settings.columns[z].name + '_td_head';\r\n                        tbCell.className = className;\r\n                        if (settings.columns[z].displayCss) $(tbCell).css(settings.columns[z].displayCss);\r\n                        if (settings.columns[z].headerSpan > 1) {\r\n                            $(tbCell).attr('colSpan', settings.columns[z].headerSpan);\r\n                            pendingSkipCol = settings.columns[z].headerSpan - 1;\r\n                        }\r\n                        // Add tooltip\r\n                        if (langx.isPlainObject(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).tooltip(settings.columns[z].displayTooltip);\r\n                        }\r\n                        else if (!isEmpty(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).attr('title', settings.columns[z].displayTooltip).tooltip();\r\n                        }\r\n                        // Check to set display text or generate by function\r\n                        if (langx.isFunction(settings.columns[z].display)) {\r\n                            settings.columns[z].display(tbCell);\r\n                        } else if (!isEmpty(settings.columns[z].display)) {\r\n                            $(tbCell).text(settings.columns[z].display);\r\n                        }\r\n                        // Add column group for scrolling\r\n                        tbColGp.appendChild(document.createElement('col'));\r\n                    } else {\r\n                        pendingSkipCol--;\r\n                    }\r\n                }\r\n            }\r\n            // Enable columns resizable\r\n            if ($.fn.resizable ) {\r\n                $('td.resizable', tbHead).resizable({ handles: 'e' });\r\n            }\r\n            // Check to hide last column or not\r\n            if (settings.hideButtons.insert && settings.hideButtons.remove\r\n                    && settings.hideButtons.moveUp && settings.hideButtons.moveDown\r\n                    && (!langx.isArray(settings.customRowButtons) || settings.customRowButtons.length == 0)) {\r\n                settings._hideLastColumn = true;\r\n            }\r\n            // Calculate the `_finalColSpan` value\r\n            settings._finalColSpan = settings._visibleCount;\r\n            if (!settings.hideRowNumColumn) settings._finalColSpan++;\r\n            if (!settings._hideLastColumn) settings._finalColSpan++;\r\n            // Generate last column header if needed\r\n            if (!settings._hideLastColumn) {\r\n                if (settings.rowButtonsInFront) {\r\n                    if (settings.hideRowNumColumn) {\r\n                        // Insert a cell at the front\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.firstChild);\r\n                    } else {\r\n                        // Span the first cell that across row number and row button cells\r\n                        // tbHeadCellRowNum.colSpan = 2;\r\n                        // tbHeadCellRowButton = tbHeadCellRowNum;\r\n\r\n                        // Insert a cell as the second column\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.childnodes[1]);\r\n                    }\r\n                } else {\r\n                    tbRow.appendChild(tbHeadCellRowButton = document.createElement('td'));\r\n                }\r\n                tbHeadCellRowButton.className = 'ui-widget-header last';\r\n                tbHeadCellRowButton.id = settings.idPrefix + '_last_td_head';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Add caption when defined\r\n            if (settings.caption) {\r\n                tbHead.insertBefore(tbRow = document.createElement('tr'), tbHead.firstChild);\r\n                if (settings._sectionClasses.caption) {\r\n                    tbRow.className = settings._sectionClasses.caption;\r\n                }\r\n                tbRow.appendChild(tbCell = document.createElement('td'));\r\n                tbCell.id = settings.idPrefix + '_caption_td';\r\n                tbCell.className = 'ui-state-active caption';\r\n                tbCell.colSpan = settings._finalColSpan;\r\n                // Add tooltip\r\n                if (langx.isPlainObject(settings.captionTooltip)) {\r\n                    $(tbCell).tooltip(settings.captionTooltip);\r\n                } else if (!isEmpty(settings.captionTooltip)) {\r\n                    $(tbCell).attr('title', settings.captionTooltip).tooltip();\r\n                }\r\n                // Check to set display text or generate by function\r\n                if (langx.isFunction(settings.caption)) {\r\n                    settings.caption(tbCell);\r\n                } else {\r\n                    $(tbCell).text(settings.caption);\r\n                }\r\n            }\r\n            // Handle footer row\r\n            tbFoot.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.footer) {\r\n                tbRow.className = settings._sectionClasses.footer;\r\n            }\r\n            tbRow.appendChild(tbCell = document.createElement('td'));\r\n            tbCell.id = settings.idPrefix + '_footer_td';\r\n            tbCell.colSpan = settings._finalColSpan;\r\n            $('<input/>').attr({\r\n                type: 'hidden',\r\n                id: settings.idPrefix + '_rowOrder',\r\n                name: settings.idPrefix + '_rowOrder'\r\n            }).appendTo(tbCell);\r\n            // Make row invisible if all buttons are hidden\r\n            if (settings.hideButtons.append && settings.hideButtons.removeLast\r\n                    && (!langx.isArray(settings.customFooterButtons) || settings.customFooterButtons.length == 0)) {\r\n                tbRow.style.display = 'none';\r\n            } else {\r\n                if (!settings.hideButtons.append) {\r\n                    var button = this._createGridButton(settings.customGridButtons.append, 'ui-icon-plusthick')\r\n                    .attr({ title: settings._i18n.append }).addClass('append')\r\n                    .click(function (evt) {\r\n                        self._insertRow(1, null, null);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.append)) button.addClass(settings._buttonClasses.append);\r\n                }\r\n                if (!settings.hideButtons.removeLast) {\r\n                    var button = this._createGridButton(settings.customGridButtons.removeLast, 'ui-icon-closethick')\r\n                    .attr({ title: settings._i18n.removeLast }).addClass('removeLast')\r\n                    .click(function (evt) {\r\n                        self._removeRow( null, this.value, false);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.removeLast)) button.addClass(settings._buttonClasses.removeLast);\r\n                }\r\n                if (settings.customFooterButtons && settings.customFooterButtons.length) {\r\n                    // Add front buttons\r\n                    for (var y = settings.customFooterButtons.length - 1; y >= 0; y--) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                            $(tbCell).prepend(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                    // Add end buttons\r\n                    for (var y = 0; y < settings.customFooterButtons.length; y++) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                            $(tbCell).append(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Enable dragging\r\n            if (settings.rowDragging) {\r\n                $(tbBody).sortable({\r\n                    axis: 'y',\r\n                    containment: tbWhole,\r\n                    handle: '.rowDrag',\r\n                    helper: function (e, tr) {\r\n                        var org = tr.children();\r\n                        var helper = tr.clone();\r\n                        // Fix the cell width of cloned table cell\r\n                        helper.children().each(function (index) {\r\n                            $(this).width(org.eq(index).width());\r\n                            // Set the value of drop down list when drag (Issue #18)\r\n                            var helperSelect = $('select', this);\r\n                            if (helperSelect.length > 0) {\r\n                                for (var y = 0; y < helperSelect.length; y++) {\r\n                                    var orgSelect = org.eq(index).find('select');\r\n                                    if (orgSelect.length > y) {\r\n                                        helperSelect[y].value = orgSelect[y].value;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        return helper;\r\n                    },\r\n                    update: function (event, ui) {\r\n                        var uniqueIndex = ui.item[0].id.substring(ui.item[0].id.lastIndexOf('_') + 1);\r\n                        var tbRowIndex = ui.item[0].rowIndex - $('tr', tbHead).length;\r\n                        self._gridRowDragged(ui.originalPosition.top > ui.position.top, uniqueIndex, tbRowIndex);\r\n                    }\r\n                });\r\n            }\r\n            // Save options\r\n            $(tbWhole).data('appendGrid', settings);\r\n            if (langx.isArray(options.initData)) {\r\n                // Load data if initData is array\r\n                this._loadData(options.initData, true);\r\n            } else {\r\n                // Add empty rows\r\n                //$(tbWhole).appendGrid('appendRow', settings.initRows);\r\n                this.appendRow(settings.initRows);\r\n            }\r\n            // Show no rows in grid\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings, true);\r\n            }\r\n\r\n            /*\r\n            // Calculate column width\r\n            if (settings.maxBodyHeight > 0) {\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    $('table.foot', tbWrap).width($(tbWhole).width());\r\n                }\r\n            }\r\n            */\r\n        },\r\n\r\n        isReady: function () {\r\n            // Check the appendGrid is initialized or not\r\n            var settings = this._checkGridAndGetSettings( true);\r\n            if (settings) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isDataLoaded: function () {\r\n            // Check the grid data is loaded by `load` method or `initData` parameter or not\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._isDataLoaded;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        load: function (records) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if (records != null && records.length > 0) {\r\n                    this._loadData(records, false);\r\n                } else {\r\n                    this._emptyGrid();\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        appendRow: function (numOfRowOrRowArray) {\r\n            return this.insertRow(numOfRowOrRowArray);\r\n        },\r\n\r\n        insertRow: function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if ((langx.isArray(numOfRowOrRowArray) && numOfRowOrRowArray.length > 0) || (langx.isNumeric(numOfRowOrRowArray) && numOfRowOrRowArray > 0)) {\r\n                    // Define variables\r\n                    var tbWhole = this[0];\r\n                    insertResult = this._insertRow(numOfRowOrRowArray, rowIndex, callerUniqueIndex);\r\n                    // Reorder sequence as needed\r\n                    if (langx.isNumeric(rowIndex) || langx.isNumeric(callerUniqueIndex)) {\r\n                        // Sort sequence\r\n                        this._sortSequence( insertResult.rowIndex);\r\n                        // Move focus\r\n                        var insertUniqueIndex = settings._rowOrder[insertResult.addedRows[0]];\r\n                        $('#' + settings.idPrefix + '_Insert_' + insertUniqueIndex, tbWhole).focus();\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && settings._rowOrder.length > 0) {\r\n                this._removeRow(rowIndex, uniqueIndex, true);\r\n            }\r\n            return this;\r\n        },\r\n        emptyGrid: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                this._emptyGrid();\r\n            }\r\n            return target;\r\n        },\r\n        moveUpRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtTarget, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex > 0 && rowIndex < settings._rowOrder.length) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex > 0) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex - 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtTarget = document.getElementById(settings.idPrefix + '_SubRow_' + uniqueIndex, tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(trAdtTarget);\r\n                    }\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trTarget, trSwap);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtTarget, trSwap);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex - 1];\r\n                    settings._rowOrder[oldIndex - 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveUp', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveUp', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex - 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        moveDownRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtSwap, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length - 1) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex != settings._rowOrder.length - 1) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtSwap = document.getElementById(settings.idPrefix + '_SubRow_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trSwap);\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trSwap, trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtSwap, trTarget);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex + 1];\r\n                    settings._rowOrder[oldIndex + 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveDown', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveDown', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex + 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        showColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and show the column if it is invisible only\r\n                if (colIndex != -1 && settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount++;\r\n                    settings._finalColSpan++;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Remove invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').removeClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).removeClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = false;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        hideColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and hide the column if it is visible only\r\n                if (colIndex != -1 && !settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount--;\r\n                    settings._finalColSpan--;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Add invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').addClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).addClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = true;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        isColumnInvisible: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        return settings.columns[z].invisible;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowCount: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._rowOrder.length;\r\n            }\r\n            return null;\r\n        },\r\n        getUniqueIndex: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(rowIndex) && rowIndex < settings._rowOrder.length) {\r\n                return settings._rowOrder[rowIndex];\r\n            }\r\n            return null;\r\n        },\r\n        getRowIndex: function (uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        return z;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowValue: function (rowIndex, uniqueIndex, loopIndex) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                }\r\n                if (!isEmpty(uniqueIndex)) {\r\n                    result = getRowValue(settings, uniqueIndex, loopIndex);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getAllValue: function (objectMode) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                // Prepare result based on objectMode setting\r\n                result = objectMode ? {} : [];\r\n                // Process on each rows\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (objectMode) {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z], z);\r\n                        langx.extend(result, rowValue)\r\n                    } else {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z]);\r\n                        result.push(rowValue);\r\n                    }\r\n                }\r\n                if (objectMode) {\r\n                    result[settings.rowCountName] = settings._rowOrder.length;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getCtrlValue: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCtrlValue(settings, z, settings._rowOrder[rowIndex]);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        setCtrlValue: function (name, rowIndex, value) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        setCtrlValue(settings, z, settings._rowOrder[rowIndex], value);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        getCellCtrl: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                var uniqueIndex = settings._rowOrder[rowIndex];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getCellCtrlByUniqueIndex: function (name, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowOrder: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of `Row Order` array\r\n                return settings._rowOrder.slice();\r\n            }\r\n            return null;\r\n        },\r\n        getColumns: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of the columns array\r\n                return settings.columns.slice();\r\n            }\r\n            return null;\r\n        },\r\n        isRowEmpty: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return isRowEmpty(settings, rowIndex);\r\n            }\r\n            return null;\r\n        },\r\n        removeEmptyRows: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                var tbWhole = this[0];\r\n                for (var z = settings._rowOrder.length; z >= 0; z--) {\r\n                    if (isRowEmpty(settings, z)) {\r\n                        // Remove itself\r\n                        this._removeRow( null, settings._rowOrder[z], true);\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n    });\r\n    // The default initial options.\r\n    var _defaultInitOptions = {\r\n        // The text as table caption, set null to disable caption generation.\r\n        caption: null,\r\n        // Tooltip for caption.\r\n        captionTooltip: null,\r\n        // The total number of empty rows generated when init the grid. This will be ignored if `initData` is assigned.\r\n        initRows: 3,\r\n        // The maximum number of rows allowed in this grid.\r\n        maxRowsAllowed: 0,\r\n        // An array of data to be filled after initialized the grid.\r\n        initData: null,\r\n        // Array of column options.\r\n        columns: null,\r\n        // Labels or messages used in grid.\r\n        i18n: null,\r\n        // The ID prefix of controls generated inside the grid. Table ID will be used if not defined.\r\n        idPrefix: null,\r\n        // Enable row dragging by using jQuery UI sortable on grid rows.\r\n        rowDragging: false,\r\n        // Hide the buttons at the end of rows or bottom of grid.\r\n        hideButtons: null,\r\n        // Hide the row number column.\r\n        hideRowNumColumn: false,\r\n        // Generate row buttom column in the front of input columns.\r\n        rowButtonsInFront: false,\r\n        // The variable name of row count used for object mode of getAllValue\r\n        rowCountName: '_RowCount',\r\n        // The extra class names for buttons.\r\n        buttonClasses: null,\r\n        // The extra class names for table sections.\r\n        sectionClasses: null,\r\n        // Custom the standard grid buttons.\r\n        customGridButtons: null,\r\n        // Adding extra button(s) at the end of rows.\r\n        customRowButtons: null,\r\n        // Adding extra button(s) at the bottom of grid.\r\n        customFooterButtons: null,\r\n        // Use the sub panel or not\r\n        useSubPanel: false,\r\n        // Maintain the scroll position after appended or removed last row.\r\n        maintainScroll: false,\r\n        // The maximum height of grid content, scroll bar will be display when the height is greater than this value.\r\n        maxBodyHeight: 0,\r\n        // Auto calculate the column width when scroll bar on table body is in use.\r\n        autoColumnWidth: true\r\n    };\r\n    var _defaultCallbackContainer = {\r\n        // The callback function for format the HTML name of generated controls.\r\n        nameFormatter: null,\r\n        // The callback function to be triggered after all data loaded to grid.\r\n        dataLoaded: null,\r\n        // The callback function to be triggered after data loaded to a row.\r\n        rowDataLoaded: null,\r\n        // The callback function to be triggered after new row appended.\r\n        afterRowAppended: null,\r\n        // The callback function to be triggered after new row inserted.\r\n        afterRowInserted: null,\r\n        // The callback function to be triggered after grid row swapped.\r\n        afterRowSwapped: null,\r\n        // The callback function to be triggered before grid row remove.\r\n        beforeRowRemove: null,\r\n        // The callback function to be triggered after grid row removed.\r\n        afterRowRemoved: null,\r\n        // The callback function to be triggered after grid row dragged.\r\n        afterRowDragged: null,\r\n        // The callback function for generating sub panel content.\r\n        subPanelBuilder: null,\r\n        // The callback function for getting values from sub panel. Used for `getAllValue` method.\r\n        subPanelGetter: null,\r\n        // The callback function to be triggered when row(s) is/are adding to grid but the maximum number of rows allowed is reached.\r\n        maxNumRowsReached: null\r\n    };\r\n    // Default column options.\r\n    var _defaultColumnOptions = {\r\n        // Type of column control.\r\n        type: 'text',\r\n        // Name of column.\r\n        name: null,\r\n        // Default value.\r\n        value: null,\r\n        // Display text on the header section.\r\n        display: null,\r\n        // Extra CSS setting to be added to display text.\r\n        displayCss: null,\r\n        // Tooltip for column head.\r\n        displayTooltip: null,\r\n        // The `colspan` setting on the column header.\r\n        headerSpan: 1,\r\n        // Extra CSS setting to be added to the control container table cell.\r\n        cellCss: null,\r\n        // Extra attributes to be added to the control.\r\n        ctrlAttr: null,\r\n        // Extra properties to be added to the control.\r\n        ctrlProp: null,\r\n        // Extra CSS to be added to the control.\r\n        ctrlCss: null,\r\n        // Extra name of class to be added to the control.\r\n        ctrlClass: null,\r\n        // The available option for building `select` type control.\r\n        ctrlOptions: null,\r\n        // Options for initalize jQuery UI widget.\r\n        uiOption: null,\r\n        // Options for initalize jQuery UI tooltip.\r\n        uiTooltip: null,\r\n        // Let column resizable by using jQuery UI Resizable Interaction.\r\n        resizable: false,\r\n        // Show or hide column after initialized.\r\n        invisible: false,\r\n        // The value to compare for indentify this column value is empty.\r\n        emptyCriteria: null,\r\n        // Callback function to build custom type control.\r\n        customBuilder: null,\r\n        // Callback function to get control value.\r\n        customGetter: null,\r\n        // Callback function to set control value.\r\n        customSetter: null,\r\n        // The `OnClick` event callback of control.\r\n        onClick: null,\r\n        // The `OnChange` event callback of control.\r\n        onChange: null\r\n    };\r\n    var _systemMessages = {\r\n        noColumnInfo: 'Cannot initial grid without column information!',\r\n        elemNotTable: 'Cannot initial grid on element other than TABLE!',\r\n        notInit: '`appendGrid` does not initialized',\r\n        getValueMultiGrid: 'Cannot get values on multiple grid',\r\n        notSupportMethod: 'Method is not supported by `appendGrid`: '\r\n    };\r\n    var _defaultTextResources = {\r\n        append: 'Append Row',\r\n        removeLast: 'Remove Last Row',\r\n        insert: 'Insert Row Above',\r\n        remove: 'Remove Current Row',\r\n        moveUp: 'Move Up',\r\n        moveDown: 'Move Down',\r\n        rowDrag: 'Sort Row',\r\n        rowEmpty: 'This Grid Is Empty'\r\n    };\r\n    var _defaultButtonClasses = { append: null, removeLast: null, insert: null, remove: null, moveUp: null, moveDown: null, rowDrag: null };\r\n    var _defaultSectionClasses = { caption: null, header: null, body: null, subPanel: null, footer: null };\r\n    var _defaultHideButtons = { append: false, removeLast: false, insert: false, remove: false, moveUp: false, moveDown: false };\r\n\r\n\r\n    function makeCustomBottomButton(tbWhole, buttonCfg) {\r\n        var exButton = $('<button/>').attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole }, buttonCfg.click);\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n    function makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex) {\r\n        var exButton = $('<button/>').val(uniqueIndex).attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole, uniqueIndex: uniqueIndex }, function (evt) {\r\n            var rowData = $(evt.data.tbWhole).plugin(\"lark.tabular\").getRowValue(null, evt.data.uniqueIndex);\r\n            buttonCfg.click(evt, evt.data.uniqueIndex, rowData);\r\n        });\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n\r\n\r\n\r\n\r\n    function findRowIndex(uniqueIndex, settings) {\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function isEmpty(value) {\r\n        return typeof (value) == 'undefined' || value == null;\r\n    }\r\n    function getObjValue(obj, key) {\r\n        if (!isEmpty(obj) && langx.isPlainObject(obj) && !isEmpty(obj[key])) {\r\n            return obj[key];\r\n        }\r\n        return null;\r\n    }\r\n    function getRowIndex(settings, uniqueIndex) {\r\n        var rowIndex = null;\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return rowIndex;\r\n    }\r\n    function getRowValue(settings, uniqueIndex, loopIndex) {\r\n        var result = {}, keyName = null, suffix = (isEmpty(loopIndex) ? '' : '_' + loopIndex);\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            keyName = settings.columns[z].name + suffix;\r\n            result[keyName] = getCtrlValue(settings, z, uniqueIndex);\r\n        }\r\n        // Merge control values from sub panel if getter method defined\r\n        if (settings.useSubPanel && langx.isFunction(settings.subPanelGetter)) {\r\n            var adtData = settings.subPanelGetter(uniqueIndex);\r\n            if (langx.isPlainObject(adtData)) {\r\n                if (suffix == '') {\r\n                    // Extend to row data directly for array mode\r\n                    langx.extend(result, adtData);\r\n                } else {\r\n                    // For returning values in object mode, add suffix to all keys\r\n                    var newData = {};\r\n                    for (var key in adtData) {\r\n                        newData[key + suffix] = adtData[key];\r\n                    }\r\n                    langx.extend(result, newData);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function getCtrlValue(settings, colIndex, uniqueIndex) {\r\n        var type = settings.columns[colIndex].type, columnName = settings.columns[colIndex].name;\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customGetter)) {\r\n                return settings.columns[colIndex].customGetter(settings.idPrefix, columnName, uniqueIndex);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            var ctrl = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (ctrl == null) {\r\n                return null;\r\n            }\r\n            else if (type == 'checkbox') {\r\n                return ctrl.checked ? 1 : 0;\r\n            } else {\r\n                return $(ctrl).val();\r\n            }\r\n        }\r\n    }\r\n    function getCellCtrl(type, idPrefix, columnName, uniqueIndex) {\r\n        return document.getElementById(idPrefix + '_' + columnName + '_' + uniqueIndex);\r\n    }\r\n    function setCtrlValue(settings, colIndex, uniqueIndex, data) {\r\n        var type = settings.columns[colIndex].type;\r\n        var columnName = settings.columns[colIndex].name;\r\n        // Handle values by type\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customSetter)) {\r\n                settings.columns[colIndex].customSetter(settings.idPrefix, columnName, uniqueIndex, data);\r\n            } else {\r\n                // `customSetter` is not a function?? Skip handling...\r\n            }\r\n        } else {\r\n            var element = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (type == 'checkbox') {\r\n                element.checked = (data != null && data != 0);\r\n            } else if (type == 'ui-selectmenu') {\r\n                element.value = (data == null ? '' : data);\r\n                $(element).selectmenu('refresh');\r\n            }\r\n            else {\r\n                $(element).val(data == null ? '' : data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function isRowEmpty(settings, rowIndex) {\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            var uniqueIndex = settings._rowOrder[rowIndex];\r\n            var currentValue = getCtrlValue(settings, z, uniqueIndex);\r\n            // Check the empty criteria is function\r\n            if (langx.isFunction(settings.columns[z].emptyCriteria)) {\r\n                if (!settings.columns[z].emptyCriteria(currentValue)) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                // Find the default value\r\n                var defaultValue = null;\r\n                if (!isEmpty(settings.columns[z].emptyCriteria)) {\r\n                    defaultValue = settings.columns[z].emptyCriteria;\r\n                } else {\r\n                    // Check default value based on its type\r\n                    if (settings.columns[z].type == 'checkbox') {\r\n                        defaultValue = 0;\r\n                    } else if (settings.columns[z].type == 'select' || settings.columns[z].type == 'ui-selectmenu') {\r\n                        var options = getCellCtrl(settings.columns[z].type, settings.idPrefix, settings.columns[z].name, uniqueIndex).options;\r\n                        if (options.length > 0) {\r\n                            defaultValue = options[0].value;\r\n                        } else {\r\n                            defaultValue = '';\r\n                        }\r\n                    } else {\r\n                        defaultValue = '';\r\n                    }\r\n                }\r\n                // Compare with the default value\r\n                if (currentValue != defaultValue) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /*\r\n    /// <summary>\r\n    /// Initialize append grid or calling its methods.\r\n    /// </summary>\r\n    $.fn.appendGrid = function (params) {\r\n        if (_methods[params]) {\r\n            return _methods[params].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof (params) === 'object' || !params) {\r\n            return _methods.init.apply(this, arguments);\r\n        } else {\r\n            alert(_systemMessages.notSupportMethod + params);\r\n        }\r\n    };\r\n    */\r\n\r\n    return Tabular ;\r\n});\r\n\ndefine('skylark-bootstrap3/tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab = bs3.Tab = plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"bs3.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  /*\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this,option)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n  return $.fn.tab;\n  */\n\n  plugins.register(Tab,\"tab\");\n\n  return Tab;\n});\n\ndefine('skylark-widgets-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          },\r\n\r\n          droptabs : {\r\n            selectors : {\r\n              dropdown : \"li.droptabs\",\r\n              dropdownMenu    : \"ul.dropdown-menu\",\r\n              dropdownTabs    : \"li\",\r\n              dropdownCaret   : \"b.caret\",\r\n              visibleTabs     : \">li:not(.dropdown)\",\r\n            },\r\n            auto              : true,\r\n            pullDropdownRight : true,\r\n\r\n\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        arrange : function () {\r\n\r\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\r\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\r\n\r\n              $container = this.$header;\r\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\r\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\r\n          var dropdownLabel = $('>a', dropdown).clone();\r\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\r\n\r\n          // We only want the default label, strip the caret out\r\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\r\n\r\n          if (this.options.droptabs.pullDropdownRight) {\r\n            $(dropdown).addClass('pull-right');\r\n          }\r\n\r\n          var $dropdownTabs = function () {\r\n            return $(dropdownTabsSelector, dropdownMenu);\r\n          }\r\n\r\n          var $visibleTabs = function () {\r\n            return $(visibleTabsSelector, $container);\r\n          }\r\n\r\n          function getFirstHiddenElementWidth() {\r\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getHiddenElementWidth(elem) {\r\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getDropdownLabel() {\r\n            var labelText = 'Dropdown';\r\n            if ($(dropdown).hasClass('active')) {\r\n              labelText = $('>li.active>a', dropdownMenu).html();\r\n            } else if (dropdownLabel.html().length > 0) {\r\n              labelText = dropdownLabel.html();\r\n            }\r\n\r\n            labelText = $.trim(labelText);\r\n\r\n            if (labelText.length > 10) {\r\n              labelText = labelText.substring(0, 10) + '...';\r\n            }\r\n\r\n            return labelText;\r\n          }\r\n\r\n          function renderDropdownLabel() {\r\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\r\n          }\r\n\r\n          function manageActive(elem) {\r\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\r\n            $('a', $(elem)).on('show.bs.tab', function (e) {\r\n              $(e.relatedTarget).parent().removeClass('active');\r\n            })\r\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\r\n              renderDropdownLabel();\r\n            })\r\n\r\n          }\r\n\r\n          function checkDropdownSelection() {\r\n            if ($($dropdownTabs()).filter('.active').length > 0) {\r\n              $(dropdown).addClass('active');\r\n            } else {\r\n              $(dropdown).removeClass('active');\r\n            }\r\n\r\n            renderDropdownLabel();\r\n          }\r\n\r\n\r\n          var visibleTabsWidth = function () {\r\n            var visibleTabsWidth = 0;\r\n            $($visibleTabs()).each(function( index ) {\r\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\r\n            });\r\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\r\n            return visibleTabsWidth;\r\n          }\r\n\r\n          var availableSpace = function () {\r\n            return $container.outerWidth()-visibleTabsWidth();\r\n          }\r\n\r\n          if (availableSpace()<0) {//we will hide tabs here\r\n            var x = availableSpace();\r\n            $($visibleTabs().get().reverse()).each(function( index ){\r\n              if (!($(this).hasClass('always-visible'))){\r\n                  $(this).prependTo(dropdownMenu);\r\n                  x=x+$(this).outerWidth();\r\n              }\r\n              if (x>=0) {return false;}\r\n            });\r\n          }\r\n\r\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\r\n            var x = availableSpace();\r\n            $($dropdownTabs()).each(function( index ){\r\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\r\n                $(this).appendTo($container);\r\n                x = x-$(this).outerWidth();\r\n              } else {return false;}\r\n             });\r\n\r\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\r\n              // If not pulling-right, keep the dropdown at the end of the container.\r\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\r\n            }\r\n          }\r\n\r\n          if ($dropdownTabs().length <= 0) {\r\n            dropdown.hide();\r\n          } else {\r\n            dropdown.show();\r\n          }\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    return swt.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-widgets-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Widget\"\r\n],function(langx,$,Widget){ \r\n\r\n\r\n\r\n  var Toolbar = Widget.inherit({\r\n    pluginName : \"lark.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"lark-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-widgets-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./CheckBox\",\r\n    \"./ComboBox\",\r\n    \"./TextBox\",\r\n    \"./Listing\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SearchBox\",\r\n    \"./SelectList\",\r\n    \"./Tabular\",\r\n    \"./TabStrip\",\r\n    \"./TextBox\",\r\n    \"./Toolbar\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-widgets-swt', ['skylark-widgets-swt/main'], function (main) { return main; });\n\n"]}