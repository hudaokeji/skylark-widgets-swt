{"version":3,"sources":["skylark-widgets-swt-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","dom","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","chkName","enhancePlaceContent","placing","neddsFlattern","append","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","$1","container","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","removeAttr","removeAttribute","removeData","removeProp","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","head","getElementsByTagName","scriptsByUrl","scriptElementsById","rscriptType","scripter","preservedScriptAttributes","nonce","noModule","code","loadJavaScript","loadedCallback","errorCallback","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteJavaScript","scripts","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","isShiftHeld","VisualElement","_elm","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonCtor","addon","optionsAttr","options1","widgetClass","_refresh","_startup","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","bs3","bsTransitionEnd","Collapse","DEFAULTS","$element","$trigger","transitioning","$parent","getParent","addAriaAndCollapsedClass","hasWidth","activesData","actives","startEvent","collapse","scrollSize","TRANSITION_DURATION","isOpen","VERSION","swt","Panel","toggler","$toggle","$body","$this","collpasePlugin","expand","full","unfull","toogleFull","close","panel_dom","minimize","Accordion","panel","panels","panelEl","_panels","addPanel","$newPanel","$template","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","[object Object]","$el","$fa_icon_left","$fa_icon_right","super","iconleft","iconright","Carousel","pause","keyboard","selectors","controls","playPause","indicators","slides","$indicators","paused","sliding","$active","$items","embeded","cycle","slide","slideIndex","to","which","getItemIndex","getItemForDirection","direction","activeIndex","willWrap","delta","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","indicatorTemplate","slideTemplate","templates","_bs_carousel","carousel","slideAction","createIndicator","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","title","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","backgroundImage","addIndicator","indicatorContainer","list","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","addSlide","resetSlides","_Toggler","isChecked","uncheck","CheckBox","chk","lbl","label","chkSelector","lblSelector","$chk","$lbl","$containerToggle","$label","$toggleContainer","setDisabledState","backdrop","Dropdown","isActive","clearMenus","ComboBox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","$dropMenu","$li","substr","$input","$button","dropdown","$inputGroupBtn","itemclicked","inputchanged","menuShown","setDefaultSelection","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","selectedItem","notFound","selectByText","innerText","selectByValue","selectBySelector","selectByIndex","synthetic","IS_NAVIGATIONAL","$selected","previousKeyPress","extra","TextBox","multiline","subtype","_dom","_sync","Listing","multiSelect","multiTier","mode","levels","hasChildren","tree","expandIcon","collapseIcon","treeIcon","itemGroup","accordion","checkable","icon","itemSelector","_$items","veItem","multiTierMode","hasChildrenSelector","childrenSelector","iconSelector","textSelector","itemTemplate","treeIconTemplate","treeIconSelector","expandIconClass","collapseIconClass","togglerSelector","findItem","valueOrIdx","selectOneItem","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$numeric","checkCanAction","$elm","numeric","pageNo","totalPageNoBtns","min","begin","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","_vbar","increase","tick","Radio","$radio","$container","ignoreVisibilityCheck","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","$repeater","$icon","buttonclicked","clearPending","activeSearch","search","searchText","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","fromCharCode","itemChanged","newWidth","sizer","Boolean","Tabular","buttonClasses","removeLast","moveUp","moveDown","rowDrag","sectionClasses","caption","subPanel","footer","hideButtons","_showEmptyMessage","skipWidthCalculation","tbWrap","_tbWrap","$emptyCell","_i18n","rowEmpty","_finalColSpan","maxBodyHeight","autoColumnWidth","_calculateColumnWidth","$tbWhole","$scroller","tbHeadRow","tbColGp","_rowOrder","tbBodyRow","marginThreshold","modal","colLimit","z","headCellWidth","bodyCellWidth","_createGridButton","uiIcon","genButton","showLabel","_sortSequence","startIndex","tbWhole","hideRowNumColumn","idPrefix","_emptyGrid","_uniqueIndex","_saveSetting","_gridRowDragged","isMoveUp","uniqueIndex","tbRowIndex","afterRowDragged","_checkGridAndGetSettings","noMsg","$grid","alert","_systemMessages","notInit","getValueMultiGrid","_insertRow","numOfRowOrRowArray","rowIndex","callerUniqueIndex","tbRow","tbCell","addedRows","parentIndex","tbBody","tbSubRow","reachMaxRow","calColWidth","oldHeight","oldScroll","_wrapperId","numOfRow","loadData","maintainScroll","maxRowsAllowed","useSubPanel","_sectionClasses","rowSpan","invisible","cellCss","ctrlName","ctrlId","nameFormatter","customBuilder","ctrlOptions","lastGroupName","lastGroupElem","group","Option","arrayOpt","eqIndex","substring","selectmenu","uiOption","textAlign","datepicker","spinner","autocomplete","ctrlAttr","ctrlProp","ctrlCss","ctrlClass","uiTooltip","tooltip","onClick","caller","appendGrid","onChange","getRowIndex","setCtrlValue","_hideLastColumn","_visibleCount","rowButtonsInFront","customGridButtons","rowUniqueIndex","insertRow","_buttonClasses","_removeRow","moveUpRow","moveDownRow","rowDragging","customRowButtons","buttonCfg","uiButton","atTheFront","makeCustomRowButton","colSpan","subPanelBuilder","_calculateWidth","afterRowInserted","afterRowAppended","maxNumRowsReached","newHeight","force","beforeRowRemove","afterRowRemoved","_loadData","records","isInit","insertResult","rowDataLoaded","_isDataLoaded","initData","dataLoaded","noColumnInfo","tbHead","tbFoot","elemNotTable","tbHeadCellRowNum","tbHeadCellRowButton","_defaultInitOptions","_defaultCallbackContainer","i18n","_defaultTextResources","_defaultButtonClasses","_defaultSectionClasses","_defaultHideButtons","pendingSkipCol","columnOpt","_defaultColumnOptions","resizable","displayCss","headerSpan","displayTooltip","handles","childnodes","captionTooltip","customFooterButtons","makeCustomBottomButton","sortable","axis","containment","handle","helper","org","helperSelect","orgSelect","lastIndexOf","originalPosition","appendRow","initRows","isReady","isDataLoaded","insertUniqueIndex","removeRow","emptyGrid","trTarget","trSwap","trAdtTarget","swapSeq","oldIndex","findRowIndex","afterRowSwapped","trAdtSwap","showColumn","colIndex","hideColumn","isColumnInvisible","getRowCount","getUniqueIndex","getRowValue","loopIndex","getAllValue","objectMode","rowValue","rowCountName","getCtrlValue","getCellCtrl","getCellCtrlByUniqueIndex","getRowOrder","getColumns","isRowEmpty","removeEmptyRows","subPanelGetter","emptyCriteria","customGetter","customSetter","notSupportMethod","exButton","btnClass","btnCss","btnAttr","rowData","keyName","suffix","adtData","newData","columnName","currentValue","defaultValue","Tab","$ul","$previous","hideEvent","showEvent","$target","activate","TabStrip","tabpane","$header","$tabs","$content","$tabpanes","tabEl","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","toolbarHeight","_this","opts","editor","editable","os","mobile","placeholderEl","addToolItem","itemWidget","addSeparator"],"mappings":"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","file":"../skylark-widgets-swt-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"langx.Evented\",Evented);\r\n\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\treturn Evented;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx-xhr/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn skylark.attach(\"langx.Xhr\",Xhr);\t\r\n});\ndefine('skylark-langx-xhr/main',[\r\n\t\"./Xhr\"\r\n],function(Xhr){\r\n\treturn Xhr;\r\n});\ndefine('skylark-langx-xhr', ['skylark-langx-xhr/main'], function (main) { return main; });\n\ndefine('skylark-langx/Xhr',[\r\n    \"skylark-langx-xhr\"\r\n],function(xhr){\r\n    return xhr;\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\"\r\n],function(styler){\r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-data/main',[\r\n\t\"./data\"\r\n],function(data){\r\n\treturn data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n\t\"./eventer\"\r\n],function(eventer){\r\n\treturn eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n\t\"./geom\"\r\n],function(geom){\r\n\treturn geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\"\r\n],function(fx){\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\"\r\n],function(scripter){\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx,scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-widgets-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.attach(\"domx.elmx\", elmx);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            } else  if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonCtor = addons[categoryName][addonName];\r\n\r\n                  this.addon(addonCtor);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n\r\n\r\n        }\r\n\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-swt/Widget',[\r\n  \"skylark-widgets-base/Widget\"\r\n],function(Widget){\r\n  return Widget;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"dom\",{});\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"skylark-domx-browser\"\r\n], function(dom,browser) {\r\n    \"use strict\";\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"skylark-domx-eventer\"\r\n], function(dom, eventer) {\r\n \r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"skylark-domx-noder\"\r\n], function(dom, noder) {\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"skylark-domx-geom\"\r\n], function(dom, geom) {\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"skylark-domx-query\"\r\n], function(dom, query) {\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"skylark-domx-plugins\"\r\n], function(dom, plugins) {\r\n    \"use strict\";\r\n\r\n\r\n    return dom.plugins = plugins;\r\n});\ndefine('skylark-bootstrap3/bs3',[\n  \"skylark-utils-dom/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\"\n],function(skylark,langx,browser,eventer,noder,geom,$){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tbs3 = ui.bs3 = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(bs3, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn bs3;\n});\n\ndefine('skylark-bootstrap3/transition',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,bs3){\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  eventer.special.bsTransitionEnd = eventer.special.transitionEnd;\n});\n\ndefine('skylark-bootstrap3/collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-utils-dom/browser\",\n    \"skylark-utils-dom/eventer\",\n    \"skylark-utils-dom/noder\",\n    \"skylark-utils-dom/geom\",\n    \"skylark-utils-dom/query\",\n    \"skylark-utils-dom/plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    _construct : function(element,options) {\n      options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(element,options);\n\n      this.$element      = $(element)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse(\"hide\");\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = eventer.create('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false)\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse,\"collapse\");\n\n  return Collapse;\n\n});\n\ndefine('skylark-widgets-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-widgets-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-widgets-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-bootstrap3/carousel',[\n    \"skylark-langx/langx\",\n    \"skylark-utils-dom/browser\",\n    \"skylark-utils-dom/eventer\",\n    \"skylark-utils-dom/noder\",\n    \"skylark-utils-dom/geom\",\n    \"skylark-utils-dom/query\",\n    \"skylark-utils-dom/plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n    /* ========================================================================\n     * Bootstrap: carousel.js v3.3.7\n     * http://getbootstrap.com/javascript/#carousel\n     * ========================================================================\n     * Copyright 2011-2016 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n    'use strict';\n\n    // CAROUSEL CLASS DEFINITION\n    // =========================\n\n    var Carousel = bs3.Carousel = plugins.Plugin.inherit({\n        klassName: \"Carousel\",\n\n        pluginName: \"bs3.carousel\",\n\n        options : {\n            interval: 5000,\n            pause: 'hover',\n            wrap: true,\n            keyboard: true,\n\n            selectors :{\n                controls : {\n                 // The class for the \"toggle\" control:\n                  toggle: '.toggle',\n                  // The class for the \"prev\" control:\n                  prev: '.prev',\n                  // The class for the \"next\" control:\n                  next: '.next',\n                  // The class for the \"close\" control:\n                  close: '.close',\n                  // The class for the \"play-pause\" toggle control:\n                  playPause: '.play-pause'\n                },\n                indicators : {\n                    container : \".carousel-indicators\"  \n                },\n                slides : {\n                    container : \"\",\n                    item : \".item\" \n                }\n            }\n\n\n        },\n\n        _construct: function(element, options) {\n            options = langx.mixin({}, $(element).data(), options);\n            //this.options = options\n            this.overrided(element,options);\n\n            this.$element = $(element)\n            this.$indicators = this.$element.find(this.options.selectors.indicators.container); //'.carousel-indicators'\n            this.paused = null\n            this.sliding = null\n            this.interval = null\n            this.$active = null\n            this.$items = null\n\n            var self = this;\n            if (!this.options.embeded) {\n                this.options.keyboard && this.$element.on('keydown.bs.carousel', langx.proxy(this.keydown, this))\n\n                this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n                    .on('mouseenter.bs3.carousel', langx.proxy(this.pause, this))\n                    .on('mouseleave.bs3.carousel', langx.proxy(this.cycle, this));\n\n                this.$element.on(\"click.bs3.carousel.data-api\", \"[data-slide],[data-slide-to]\", function(e) {\n                    var $this = $(this),\n                        slide = $this.attr('data-slide'),\n                        slideIndex = $this.attr('data-slide-to');\n\n                    if (slide == \"prev\") {\n                        self.prev();\n                    } else if (slide == \"next\") {\n                        self.next();\n                    } else  if (slideIndex) {\n                        self.to(slideIndex);\n                    }\n                    e.preventDefault();\n                });\n            }\n        },\n\n        keydown : function(e) {\n            if (/input|textarea/i.test(e.target.tagName)) return\n            switch (e.which) {\n                case 37:\n                    this.prev();\n                    break\n                case 39:\n                    this.next();\n                    break\n                default:\n                    return\n            }\n\n            e.preventDefault()\n        },\n\n        cycle : function(e) {\n            e || (this.paused = false)\n\n            this.interval && clearInterval(this.interval)\n\n            this.options.interval &&\n                !this.paused &&\n                (this.interval = setInterval(langx.proxy(this.next, this), this.options.interval))\n\n            return this\n        },\n\n        getItemIndex : function(item) {\n            this.$items = item.parent().children(this.options.selectors.slides.item);//'.item' \n            return this.$items.index(item || this.$active)\n        },\n\n        getItemForDirection : function(direction, active) {\n            var activeIndex = this.getItemIndex(active)\n            var willWrap = (direction == 'prev' && activeIndex === 0) ||\n                (direction == 'next' && activeIndex == (this.$items.length - 1))\n            if (willWrap && !this.options.wrap) return active\n            var delta = direction == 'prev' ? -1 : 1\n            var itemIndex = (activeIndex + delta) % this.$items.length\n            return this.$items.eq(itemIndex)\n        },\n\n        to : function(pos) {\n            var that = this\n            var activeIndex = this.getItemIndex(this.$active = this.$element.find(this.options.selectors.slides.item+\".active\"));//'.item.active'\n\n            if (pos > (this.$items.length - 1) || pos < 0) return\n\n            if (this.sliding) return this.$element.one('slid.bs.carousel', function() { that.to(pos) }) // yes, \"slid\"\n            if (activeIndex == pos) return this.pause().cycle()\n\n            return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n        },\n\n        pause : function(e) {\n            e || (this.paused = true)\n\n            if (this.$element.find(this.options.selectors.controls.next + \",\"+ this.options.selectors.controls.prev).length && browser.support.transition) { //.next,.prev\n                this.$element.trigger(browser.support.transition.end)\n                this.cycle(true)\n            }\n\n            this.interval = clearInterval(this.interval)\n\n            return this\n        },\n\n        next : function() {\n            if (this.sliding) return\n            return this.slide('next')\n        },\n\n        prev : function() {\n            if (this.sliding) return\n            return this.slide('prev')\n        },\n\n        slide : function(type, next) {\n            var $active = this.$element.find(this.options.selectors.slides.item+\".active\");//'.item.active'\n            var $next = next || this.getItemForDirection(type, $active)\n            var isCycling = this.interval\n            var direction = type == 'next' ? 'left' : 'right'\n            var that = this\n\n            if ($next.hasClass('active')) return (this.sliding = false)\n\n            var relatedTarget = $next[0]\n            var slideEvent = eventer.create('slide.bs.carousel', {\n                relatedTarget: relatedTarget,\n                direction: direction\n            })\n            this.$element.trigger(slideEvent)\n            if (slideEvent.isDefaultPrevented()) return\n\n            this.sliding = true\n\n            isCycling && this.pause()\n\n            if (this.$indicators.length) {\n                this.$indicators.find('.active').removeClass('active')\n                var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n                $nextIndicator && $nextIndicator.addClass('active')\n            }\n\n            var slidEvent = eventer.create('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n            if (browser.support.transition && this.$element.hasClass('slide')) {\n                $next.addClass(type)\n                $next[0].offsetWidth // force reflow\n                $active.addClass(direction)\n                $next.addClass(direction)\n                $active\n                    .one('transitionEnd', function() {\n                        $next.removeClass([type, direction].join(' ')).addClass('active')\n                        $active.removeClass(['active', direction].join(' '))\n                        that.sliding = false\n                        setTimeout(function() {\n                            that.$element.trigger(slidEvent)\n                        }, 0)\n                    })\n                    .emulateTransitionEnd()\n            } else {\n                $active.removeClass('active')\n                $next.addClass('active')\n                this.sliding = false\n                this.$element.trigger(slidEvent)\n            }\n\n            isCycling && this.cycle()\n\n            return this\n        },\n\n    });\n\n    // var Carousel = function (element, options) {\n    // }\n\n    Carousel.VERSION = '3.3.7'\n\n    Carousel.TRANSITION_DURATION = 600\n\n\n\n\n    // CAROUSEL PLUGIN DEFINITION\n    // ==========================\n    /*\n    function Plugin(option) {\n        return this.each(function() {\n            var $this = $(this)\n            var wgt = $this.data('bs.carousel')\n            var options = langx.mixin({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n            var action = typeof option == 'string' ? option : options.slide\n\n            if (!wgt) {\n                $this.data('bs.carousel', (wgt = new Carousel(this, options)));\n            }\n            if (typeof option == 'number') {\n                wgt.to(option);\n            } else if (action) {\n                wgt[action]()\n            } else if (options.interval) {\n                wgt.pause().cycle();\n            }\n        })\n    }\n    */\n    plugins.register(Carousel,\"carousel\",function(options){\n        //this -> plugin instance\n        var action = typeof options == 'string' ? options : options.slide\n        if (typeof options == 'number') {\n            this.to(options);\n        } else if (action) {\n            this[action]()\n        } else if (options.interval) {\n            this.pause().cycle();\n        }        \n    });\n\n    return Carousel;\n\n});\ndefine('skylark-widgets-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-widgets-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-widgets-swt/CheckBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var CheckBox =  _Toggler.inherit({\r\n    klassName: \"CheckBox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.CheckBox = CheckBox;\r\n});\r\n\ndefine('skylark-bootstrap3/dropdown',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"skylark-utils-dom/plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle   = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = bs3.Dropdown = plugins.Plugin.inherit({\n    klassName: \"Dropdown\",\n\n    pluginName : \"bs3.dropdown\",\n\n    _construct : function(element,options) {\n      var $el = this.$element = $(element);\n      $el.on('click.bs.dropdown', this.toggle);\n      $el.on('keydown.bs.dropdown', '[data-toggle=\"dropdown\"],.dropdown-menu',this.keydown);\n    },\n\n    toggle : function (e) {\n      var $this = $(this)\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n          // if mobile we use a backdrop because click events don't delegate\n          $(document.createElement('div'))\n            .addClass('dropdown-backdrop')\n            .insertAfter($(this))\n            .on('click', clearMenus)\n        }\n\n        var relatedTarget = { relatedTarget: this }\n        $parent.trigger(e = eventer.create('show.bs.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) return\n\n        $this\n          .trigger('focus')\n          .attr('aria-expanded', 'true')\n\n        $parent\n          .toggleClass('open')\n          .trigger(eventer.create('shown.bs.dropdown', relatedTarget))\n      }\n\n      return false\n    },\n\n    keydown : function (e) {\n      if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n      var $this = $(this)\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      if (!isActive && e.which != 27 || isActive && e.which == 27) {\n        if (e.which == 27) $parent.find(toggle).trigger('focus')\n        return $this.trigger('click')\n      }\n\n      var desc = ' li:not(.disabled):visible a'\n      var $items = $parent.find('.dropdown-menu' + desc)\n\n      if (!$items.length) return\n\n      var index = $items.index(e.target)\n\n      if (e.which == 38 && index > 0)                 index--         // up\n      if (e.which == 40 && index < $items.length - 1) index++         // down\n      if (!~index)                                    index = 0\n\n      $items.eq(index).trigger('focus')\n    }\n\n  });\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && noder.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = eventer.create('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger(eventer.create('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n\n  /*\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin;\n  $.fn.dropdown.Constructor = Dropdown;\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n\n  return $.fn.dropdown;\n  */\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() });\n\n  plugins.register(Dropdown,\"dropdown\");\n\n  return Dropdown;\n\n});\n\ndefine('skylark-widgets-swt/ComboBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-widgets-swt/TextBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar TextBox =  swt.TextBox = Widget.inherit({\r\n\t\tklassName: \"TextBox\",\r\n\r\n    pluginName: \"lark.textbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn TextBox;\r\n});\r\n\r\n\n define('skylark-widgets-swt/Listing',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var Listing = Widget.inherit({\r\n        klassName : \"Listing\",\r\n\r\n        pluginName : \"lark.listing\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n        \t//multiTier : false,\r\n\r\n          multiTier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popup\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\"\r\n            },\r\n            tree : {\r\n              classes : {\r\n                expandIcon: 'glyphicon-plus',    // \"glyphicon-chevron-down\", 'glyphicon-folder-open'\r\n                collapseIcon: 'glyphicon-minus', // \"glyphicon-chevron-right\", 'glyphicon-folder-close'\r\n                children : \"\"                              // \"list-group children\"\r\n              },\r\n              templates : {\r\n                treeIcon : \"<i class=\\\"glyphicon\\\"></i>\",\r\n                itemGroup: \"\"\r\n\r\n              },\r\n              selectors : {\r\n                treeIcon : \" > i\"\r\n              }\r\n            },\r\n\r\n            accordion : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            }\r\n          },\r\n\r\n        \ttoggle : false,\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                multiTierMode = this.options.multiTier.mode,\r\n                hasChildrenSelector = this.options.multiTier.selectors.hasChildren,\r\n                childrenSelector = this.options.multiTier.selectors.children,\r\n                iconSelector = this.options.item.selectors.icon,\r\n                textSelector = this.options.item.selectors.text,\r\n                itemTemplate = this.options.item.template,                \r\n                obj = this;\r\n\r\n\r\n            if (multiTierMode) {\r\n              if (multiTierMode == \"tree\") {\r\n                   var treeIconTemplate = this.options.multiTier.tree.templates.treeIcon,\r\n                       treeIconSelector = this.options.multiTier.tree.selectors.treeIcon,\r\n                       expandIconClass = this.options.multiTier.tree.classes.expandIcon,\r\n                       collapseIconClass = this.options.multiTier.tree.classes.collapseIcon;\r\n\r\n                   this._$items.each(function(){\r\n                     if($(this).is(hasChildrenSelector)) {\r\n                        var children = $(this).find(childrenSelector);\r\n                        $(children).remove();\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(treeIconSelector).addClass(expandIconClass).on(\"click\" + \".\" + self.pluginName, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            $(this).toggleClass(expandIconClass).toggleClass(collapseIconClass);\r\n\r\n                            $(this).closest(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                            if ($toggle) {\r\n                                $(this).closest(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                            }\r\n                        });\r\n\r\n                        $(this).find(iconSelector).addClass('glyphicon-folder-open');\r\n                        $(this).find(textSelector).text(text);\r\n                        $(this).append(children);\r\n\r\n\r\n\r\n                      }  else {\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(iconSelector).addClass('glyphicon-file');\r\n                        $(this).find(textSelector).text(text);\r\n                    }\r\n\r\n                   });\r\n              } else if (multiTierMode == \"accordion\") {\r\n                var togglerSelector = self.options.multiTier.accordion.selectors.toggler;\r\n\r\n                this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                    e.preventDefault();\r\n\r\n                    $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).collapse(\"toggle\");\r\n\r\n                    if ($toggle) {\r\n                        $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").collapse(\"hide\");\r\n                    }\r\n                });\r\n              }\r\n\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n\r\n              \r\n            }   \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return swt.Listing = Listing;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-widgets-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-widgets-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-widgets-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-widgets-swt/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = Widget.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n\treturn \tswt.SearchBox = SearchBox;\n});\n\ndefine('skylark-widgets-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-widgets-swt/Tabular',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    var Tabular = Widget.inherit({\r\n        klassName : \"Tabular\",\r\n\r\n        pluginName : \"lark.tabular\",\r\n\r\n        options : {\r\n            buttonClasses : { \r\n                append: null, \r\n                removeLast: null, \r\n                insert: null, \r\n                remove: null, \r\n                moveUp: null, \r\n                moveDown: null, \r\n                rowDrag: null \r\n            },\r\n            sectionClasses : { \r\n                caption: null, \r\n                header: null, \r\n                body: null, \r\n                subPanel: null, \r\n                footer: null \r\n            },\r\n            hideButtons : { \r\n                append: false, \r\n                removeLast: false, \r\n                insert: false, \r\n                remove: false, \r\n                moveUp: false, \r\n                moveDown: false \r\n            }\r\n\r\n        },\r\n\r\n        _showEmptyMessage : function (settings, skipWidthCalculation) {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $emptyCell = $('<td></td>').text(settings._i18n.rowEmpty).attr('colspan', settings._finalColSpan);\r\n            $('table.body tbody', tbWrap).append($('<tr></tr>').addClass('empty').append($emptyCell));\r\n            if (!skipWidthCalculation && settings.maxBodyHeight > 0) {\r\n                // Check scrolling enabled\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    // Set the width of empty message cell to the thead width\r\n                    $emptyCell.width($('table.head', tbWrap).width() - 4);\r\n                }\r\n            }\r\n        },  \r\n\r\n        _calculateColumnWidth : function () {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $tbWhole = $('table.body', tbWrap);\r\n            var $scroller = $('div.scroller', tbWrap);\r\n            var settings = $tbWhole.data('appendGrid');\r\n            var tbHeadRow = $('table.head tr.columnHead', tbWrap)[0];\r\n            var tbColGp = $('table.body colgroup', tbWrap)[0];\r\n            // Check any rows within the grid\r\n            if (settings._rowOrder.length > 0) {\r\n                // Reset the table/column width\r\n                $('td', tbHeadRow).width('auto');\r\n                $('col', tbColGp).width('auto');\r\n                $tbWhole.width('auto');\r\n                $scroller.width('auto');\r\n                // Check the total number of columns\r\n                var tbBodyRow = $('tbody tr', $tbWhole)[0];\r\n                var marginThreshold = -2;\r\n                if ($.fn.modal) {\r\n                    // If bootstrap is loaded, cell margin was reset\r\n                    marginThreshold = 1;\r\n                }\r\n                var colLimit = Math.min(tbHeadRow.childNodes.length, tbBodyRow.childNodes.length);\r\n                for (var z = 0; z < colLimit; z++) {\r\n                    var headCellWidth = tbHeadRow.childNodes[z].clientWidth + 1;\r\n                    var bodyCellWidth = tbBodyRow.childNodes[z].clientWidth + marginThreshold;\r\n                    if (bodyCellWidth > headCellWidth) {\r\n                        tbHeadRow.childNodes[z].style.width = bodyCellWidth + 'px';\r\n                    } else {\r\n                        tbColGp.childNodes[z].style.width = headCellWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                $('table.body,table.foot', tbWrap).width($('table.head').width());\r\n            }\r\n            // Set the width of footer row\r\n            $('table.foot', tbWrap).width($tbWhole.width());\r\n            // Check the scroll panel width\r\n            $scroller.width($tbWhole.width() + $scroller[0].offsetWidth - $scroller[0].clientWidth + 1);\r\n        },\r\n\r\n\r\n        _createGridButton : function (param, uiIcon) {\r\n            // Generate the standard grid action button based on its parameter.\r\n            var genButton = null;\r\n            if (param) {\r\n                if (langx.isFunction(param)) {\r\n                    // Generate button if it is a function.\r\n                    genButton = $(param());\r\n                } else if (param.nodeType) {\r\n                    // Clone the button if it is a DOM element.\r\n                    genButton = $(param).clone();\r\n                } else if (param.icon || param.label) {\r\n                    // Generate jQuery UI Button if it is a plain object with `icon` or `label` property.\r\n                    genButton = $('<button/>').attr({ type: 'button' });\r\n                    genButton.plugin(\"lark.button\",param);\r\n                }\r\n            }\r\n            if (!genButton) {\r\n                // Use default setting (jQuery UI Button) if button is not created.\r\n                genButton = $('<button/>').attr({ type: 'button' });\r\n                genButton.plugin(\"lark.button\",{ icon: uiIcon, showLabel: false });\r\n            }\r\n            return genButton;\r\n        },\r\n\r\n        _sortSequence : function (startIndex) {\r\n            var tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (!settings.hideRowNumColumn) {\r\n                for (var z = startIndex; z < settings._rowOrder.length; z++) {\r\n                    $('#' + settings.idPrefix + '_Row_' + settings._rowOrder[z] + ' td.first', tbWhole).text(z + 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        _emptyGrid : function () {\r\n            var tbWhole = this._elm;\r\n\r\n            // Load settings\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Remove rows\r\n            $('tbody', tbWhole).empty();\r\n            settings._rowOrder.length = 0;\r\n            settings._uniqueIndex = 0;\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Add empty row\r\n            this._showEmptyMessage(settings);\r\n        },        \r\n\r\n        _gridRowDragged : function (isMoveUp, uniqueIndex, tbRowIndex) {\r\n            var tbWhole = this._elm;\r\n\r\n            // Get setting\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Find the start sorting index\r\n            var startIndex = -1;\r\n            for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                if (settings._rowOrder[z] == uniqueIndex) {\r\n                    if (isMoveUp) {\r\n                        startIndex = tbRowIndex;\r\n                        settings._rowOrder.splice(z, 1);\r\n                        settings._rowOrder.splice(tbRowIndex, 0, uniqueIndex);\r\n                    } else {\r\n                        startIndex = z;\r\n                        settings._rowOrder.splice(tbRowIndex + 1, 0, uniqueIndex);\r\n                        settings._rowOrder.splice(z, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // Do re-order\r\n            this._sortSequence( startIndex);\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n\r\n            // Trigger event\r\n            if (langx.isFunction(settings.afterRowDragged)) {\r\n                settings.afterRowDragged(tbWhole, tbRowIndex, uniqueIndex);\r\n            }\r\n        },\r\n\r\n       _saveSetting : function (settings) {\r\n            var tbWhole = this._elm;\r\n\r\n            $(tbWhole).data('appendGrid', settings);\r\n            $('#' + settings.idPrefix + '_rowOrder', tbWhole).val(settings._rowOrder.join());\r\n        },\r\n\r\n\r\n        _checkGridAndGetSettings : function (noMsg) {\r\n            // Check the jQuery grid object is initialized and return its settings\r\n\r\n            var settings = null,\r\n                $grid = $(this._elm);\r\n\r\n            if ($grid.length == 1) {\r\n                settings = $grid.data('appendGrid');\r\n                if (!settings && !noMsg) {\r\n                    alert(_systemMessages.notInit);\r\n                }\r\n            } else if (!noMsg) {\r\n                alert(_systemMessages.getValueMultiGrid);\r\n            }\r\n            return settings;\r\n        },\r\n\r\n        _insertRow : function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            // Define variables\r\n            var self = this,\r\n                tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var addedRows = [], parentIndex = null, uniqueIndex, ctrl, hidden = [];\r\n            var tbHead = tbWhole.getElementsByTagName('thead')[0];\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            var tbRow, tbSubRow = null, tbCell, reachMaxRow = false, calColWidth = false;\r\n            var oldHeight = 0, oldScroll = 0;\r\n            if (settings.maxBodyHeight > 0) {\r\n                tbHead = $('#' + settings._wrapperId + ' table thead')[0];\r\n            }\r\n            // Check number of row to be inserted\r\n            var numOfRow = numOfRowOrRowArray, loadData = false;\r\n            if (langx.isArray(numOfRowOrRowArray)) {\r\n                numOfRow = numOfRowOrRowArray.length;\r\n                loadData = true;\r\n            }\r\n            // Check parent row\r\n            if (langx.isNumeric(callerUniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == callerUniqueIndex) {\r\n                        rowIndex = z;\r\n                        if (z != 0) parentIndex = z - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (langx.isNumeric(rowIndex)) {\r\n                if (rowIndex >= settings._rowOrder.length) {\r\n                    rowIndex = null;\r\n                } else {\r\n                    parentIndex = rowIndex - 1;\r\n                }\r\n            }\r\n            else if (settings._rowOrder.length != 0) {\r\n                rowIndex = null;\r\n                parentIndex = settings._rowOrder.length - 1;\r\n            }\r\n            // Store old grid height\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                oldHeight = $(tbWhole).height();\r\n                oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n            }\r\n            // Remove empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                $('tr.empty', tbWhole).remove();\r\n                calColWidth = true;\r\n            }\r\n            // Add total number of row\r\n            for (var z = 0; z < numOfRow; z++) {\r\n                // Check maximum number of rows\r\n                if (0 < settings.maxRowsAllowed && settings._rowOrder.length >= settings.maxRowsAllowed) {\r\n                    reachMaxRow = true;\r\n                    break;\r\n                }\r\n                // Update variables\r\n                settings._uniqueIndex++;\r\n                uniqueIndex = settings._uniqueIndex;\r\n                hidden.length = 0;\r\n                // Check row insert index\r\n                if (langx.isNumeric(rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 0, uniqueIndex);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(tbSubRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    addedRows.push(rowIndex);\r\n                }\r\n                else {\r\n                    settings._rowOrder.push(uniqueIndex);\r\n                    tbBody.appendChild(tbRow = document.createElement('tr'));\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.appendChild(tbSubRow = document.createElement('tr'));\r\n                    }\r\n                    addedRows.push(settings._rowOrder.length - 1);\r\n                }\r\n                tbRow.id = settings.idPrefix + '_Row_' + uniqueIndex;\r\n                if (settings._sectionClasses.body) {\r\n                    tbRow.className = settings._sectionClasses.body;\r\n                }\r\n                $(tbRow).data('appendGrid', uniqueIndex);\r\n                // Config on the sub panel row\r\n                if (tbSubRow != null) {\r\n                    tbSubRow.id = settings.idPrefix + '_SubRow_' + uniqueIndex;\r\n                    $(tbSubRow).data('appendGrid', uniqueIndex);\r\n                    if (settings._sectionClasses.subPanel) {\r\n                        tbSubRow.className = settings._sectionClasses.subPanel;\r\n                    }\r\n                }\r\n                // Add row number\r\n                if (!settings.hideRowNumColumn) {\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    $(tbCell).addClass('ui-widget-content first').text(settings._rowOrder.length);\r\n                    if (settings.useSubPanel) tbCell.rowSpan = 2;\r\n                }\r\n                // Process on each columns\r\n                for (var y = 0; y < settings.columns.length; y++) {\r\n                    // Skip hidden\r\n                    if (settings.columns[y].type == 'hidden') {\r\n                        hidden.push(y);\r\n                        continue;\r\n                    }\r\n                    // Check column invisble\r\n                    var className = 'ui-widget-content';\r\n                    if (settings.columns[y].invisible) className += ' invisible';\r\n                    // Insert cell\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.id = settings.idPrefix + '_' + settings.columns[y].name + '_td_' + uniqueIndex;\r\n                    tbCell.className = className;\r\n                    if (settings.columns[y].cellCss != null) $(tbCell).css(settings.columns[y].cellCss);\r\n                    // Prepare control id and name\r\n                    var ctrlId = settings.idPrefix + '_' + settings.columns[y].name + '_' + uniqueIndex, ctrlName;\r\n                    if (langx.isFunction(settings.nameFormatter)) {\r\n                        ctrlName = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                    } else {\r\n                        ctrlName = ctrlId;\r\n                    }\r\n                    // Check control type\r\n                    ctrl = null;\r\n                    if (settings.columns[y].type == 'custom') {\r\n                        if (langx.isFunction(settings.columns[y].customBuilder)) {\r\n                            ctrl = settings.columns[y].customBuilder(tbCell, settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        }\r\n                    } else if (settings.columns[y].type == 'select' || settings.columns[y].type == 'ui-selectmenu') {\r\n                        ctrl = document.createElement('select');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        // Build option list\r\n                        if (langx.isArray(settings.columns[y].ctrlOptions)) {\r\n                            // For array type option list\r\n                            if (settings.columns[y].ctrlOptions.length > 0) {\r\n                                if (langx.isPlainObject(settings.columns[y].ctrlOptions[0])) {\r\n                                    // Check to generate optGroup or not\r\n                                    var lastGroupName = null, lastGroupElem = null;\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].group)) {\r\n                                            if (lastGroupName != settings.columns[y].ctrlOptions[x].group) {\r\n                                                lastGroupName = settings.columns[y].ctrlOptions[x].group;\r\n                                                lastGroupElem = document.createElement('optgroup');\r\n                                                lastGroupElem.label = lastGroupName;\r\n                                                ctrl.appendChild(lastGroupElem);\r\n                                            }\r\n                                        } else {\r\n                                            lastGroupElem = null;\r\n                                        }\r\n                                        var option = $('<option/>').val(settings.columns[y].ctrlOptions[x].value).text(settings.columns[y].ctrlOptions[x].label);\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].title)) {\r\n                                            option.attr('title', settings.columns[y].ctrlOptions[x].title);\r\n                                        }\r\n                                        if (null == lastGroupElem) {\r\n                                            option.appendTo(ctrl);\r\n                                        }\r\n                                        else {\r\n                                            option.appendTo(lastGroupElem);\r\n                                        }\r\n                                        // ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x].label, settings.columns[y].ctrlOptions[x].value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], settings.columns[y].ctrlOptions[x]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (langx.isPlainObject(settings.columns[y].ctrlOptions)) {\r\n                            // For plain object type option list\r\n                            for (var x in settings.columns[y].ctrlOptions) {\r\n                                ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], x);\r\n                            }\r\n                        } else if (typeof (settings.columns[y].ctrlOptions) == 'string') {\r\n                            // For string type option list\r\n                            var arrayOpt = settings.columns[y].ctrlOptions.split(';');\r\n                            for (var x = 0; x < arrayOpt.length; x++) {\r\n                                var eqIndex = arrayOpt[x].indexOf(':');\r\n                                if (-1 == eqIndex) {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x], arrayOpt[x]);\r\n                                } else {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x].substring(eqIndex + 1, arrayOpt[x].length), arrayOpt[x].substring(0, eqIndex));\r\n                                }\r\n                            }\r\n                        } else if (langx.isFunction(settings.columns[y].ctrlOptions)) {\r\n                            settings.columns[y].ctrlOptions(ctrl);\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-selectmenu') {\r\n                            $(ctrl).selectmenu(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    else if (settings.columns[y].type == 'checkbox') {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'checkbox';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        ctrl.value = 1;\r\n                        tbCell.appendChild(ctrl);\r\n                        tbCell.style.textAlign = 'center';\r\n                    }\r\n                    else if (settings.columns[y].type == 'textarea') {\r\n                        ctrl = document.createElement('textarea');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else if (-1 != settings.columns[y].type.search(/^(color|date|datetime|datetime\\-local|email|month|number|range|search|tel|time|url|week)$/)) {\r\n                        ctrl = document.createElement('input');\r\n                        try {\r\n                            ctrl.type = settings.columns[y].type;\r\n                        }\r\n                        catch (err) { /* Not supported type */ }\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else {\r\n                        // Generate text input\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'text';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-datepicker') {\r\n                            $(ctrl).datepicker(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-spinner') {\r\n                            $(ctrl).spinner(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-autocomplete') {\r\n                            $(ctrl).autocomplete(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    // Add extra control properties\r\n                    if (settings.columns[y].type != 'custom') {\r\n                        // Add control attributes as needed\r\n                        if (settings.columns[y].ctrlAttr != null) $(ctrl).attr(settings.columns[y].ctrlAttr);\r\n                        // Add control properties as needed\r\n                        if (settings.columns[y].ctrlProp != null) $(ctrl).prop(settings.columns[y].ctrlProp);\r\n                        // Add control CSS as needed\r\n                        if (settings.columns[y].ctrlCss != null) $(ctrl).css(settings.columns[y].ctrlCss);\r\n                        // Add control class as needed\r\n                        if (settings.columns[y].ctrlClass != null) $(ctrl).addClass(settings.columns[y].ctrlClass);\r\n                        // Add jQuery UI tooltip as needed\r\n                        if (settings.columns[y].uiTooltip) $(ctrl).tooltip(settings.columns[y].uiTooltip);\r\n                        // Add control events as needed\r\n                        if (langx.isFunction(settings.columns[y].onClick)) {\r\n                            $(ctrl).click({ caller: tbWhole, callback: settings.columns[y].onClick, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).appendGrid('getRowIndex', evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                        if (langx.isFunction(settings.columns[y].onChange)) {\r\n                            $(ctrl).change({ caller: tbWhole, callback: settings.columns[y].onChange, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).plugin(\"lark.tabular\").getRowIndex(evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                    }\r\n                    if (loadData) {\r\n                        // Load data if needed\r\n                        setCtrlValue(settings, y, uniqueIndex, numOfRowOrRowArray[z][settings.columns[y].name]);\r\n                    } else if (!isEmpty(settings.columns[y].value)) {\r\n                        // Set default value\r\n                        setCtrlValue(settings, y, uniqueIndex, settings.columns[y].value);\r\n                    }\r\n                }\r\n                // Add button cell if needed\r\n                if (!settings._hideLastColumn || settings.columns.length > settings._visibleCount) {\r\n                    if (!settings.rowButtonsInFront) {\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    } else if (!settings.hideRowNumColumn) {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.childNodes[1]);\r\n                    } else {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.firstChild);\r\n                    }\r\n                    tbCell.className = 'ui-widget-content last';\r\n                    tbCell.id = settings.idPrefix + '_last_td_' + uniqueIndex;\r\n                    if (settings._hideLastColumn) tbCell.style.display = 'none';\r\n                    // Add standard buttons\r\n                    if (!settings.hideButtons.insert) {\r\n                        var button = this._createGridButton(settings.customGridButtons.insert, 'ui-icon-arrowreturnthick-1-w')\r\n                            .attr({ id: settings.idPrefix + '_Insert_' + uniqueIndex, title: settings._i18n.insert, tabindex: -1 })\r\n                            .addClass('insert').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").insertRow(1, null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault(settings._buttonClasses.insert);\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.insert)) button.addClass(settings._buttonClasses.insert);\r\n                    }\r\n                    if (!settings.hideButtons.remove) {\r\n                        var button = this._createGridButton(settings.customGridButtons.remove, 'ui-icon-trash')\r\n                            .attr({ id: settings.idPrefix + '_Delete_' + uniqueIndex, title: settings._i18n.remove, tabindex: -1 })\r\n                            .addClass('remove').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                self._removeRow( null, rowUniqueIndex, false);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.remove)) button.addClass(settings._buttonClasses.remove);\r\n                    }\r\n                    if (!settings.hideButtons.moveUp) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveUp, 'ui-icon-arrowthick-1-n')\r\n                            .attr({ id: settings.idPrefix + '_MoveUp_' + uniqueIndex, title: settings._i18n.moveUp, tabindex: -1 })\r\n                            .addClass('moveUp').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveUpRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveUp)) button.addClass(settings._buttonClasses.moveUp);\r\n                    }\r\n                    if (!settings.hideButtons.moveDown) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveDown, 'ui-icon-arrowthick-1-s')\r\n                            .attr({ id: settings.idPrefix + '_MoveDown_' + uniqueIndex, title: settings._i18n.moveDown, tabindex: -1 })\r\n                            .addClass('moveDown').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveDownRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveDown)) button.addClass(settings._buttonClasses.moveDown);\r\n                    }\r\n                    // Handle row dragging\r\n                    if (settings.rowDragging) {\r\n                        var button = $('<div/>').addClass('rowDrag ui-state-default ui-corner-all')\r\n                            .attr('title', settings._i18n.rowDrag).append($('<div/>').addClass('ui-icon ui-icon-caret-2-n-s').append($('<span/>').addClass('ui-button-text').text('Drag')))\r\n                            .appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.rowDrag)) button.addClass(settings._buttonClasses.rowDrag);\r\n                    }\r\n                    // Add hidden\r\n                    for (var y = 0; y < hidden.length; y++) {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.id = settings.idPrefix + '_' + settings.columns[hidden[y]].name + '_' + uniqueIndex;\r\n                        if (langx.isFunction(settings.nameFormatter)) {\r\n                            ctrl.name = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        } else {\r\n                            ctrl.name = ctrl.id;\r\n                        }\r\n                        ctrl.type = 'hidden';\r\n\r\n                        if (loadData) {\r\n                            // Load data if needed\r\n                            ctrl.value = numOfRowOrRowArray[z][settings.columns[hidden[y]].name];\r\n                        } else if (!isEmpty(settings.columns[hidden[y]].value)) {\r\n                            // Set default value\r\n                            ctrl.value = settings.columns[hidden[y]].value;\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    // Add extra buttons\r\n                    if (settings.customRowButtons && settings.customRowButtons.length) {\r\n                        // Add front buttons\r\n                        for (var y = settings.customRowButtons.length - 1; y >= 0; y--) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                                $(tbCell).prepend(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                        // Add end buttons\r\n                        for (var y = 0; y < settings.customRowButtons.length; y++) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                                $(tbCell).append(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // Create sub panel\r\n                if (settings.useSubPanel) {\r\n                    tbSubRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.className = 'ui-widget-content';\r\n                    tbCell.colSpan = settings._visibleCount + (settings._hideLastColumn ? 0 : 1);\r\n                    if (langx.isFunction(settings.subPanelBuilder)) {\r\n                        settings.subPanelBuilder(tbCell, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            // Check if re-calculate column width is required\r\n            if (0 < settings.maxBodyHeight && settings._calculateWidth && !calColWidth) {\r\n                var scroll = $('#' + settings._wrapperId + '>div.scroller')[0];\r\n                if (scroll.scrollHeight > scroll.offsetHeight) {\r\n                    calColWidth = true;\r\n                    settings._calculateWidth = false;\r\n                }\r\n            }\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Calculate column width\r\n            if (calColWidth && settings.autoColumnWidth && settings.maxBodyHeight > 0) {\r\n                this._calculateColumnWidth();\r\n            }\r\n            // Trigger events\r\n            if (langx.isNumeric(rowIndex)) {\r\n                if (langx.isFunction(settings.afterRowInserted)) {\r\n                    settings.afterRowInserted(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            else {\r\n                if (langx.isFunction(settings.afterRowAppended)) {\r\n                    settings.afterRowAppended(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            if (reachMaxRow && langx.isFunction(settings.maxNumRowsReached)) {\r\n                settings.maxNumRowsReached();\r\n            }\r\n            // Scroll the page when append row\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                // Try to maintain the height so that user no need to scroll every time when row added\r\n                var newHeight = $(tbWhole).height();\r\n                $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n            }\r\n            // Return added rows' uniqueIndex\r\n            return { addedRows: addedRows, parentIndex: parentIndex, rowIndex: rowIndex };\r\n        },\r\n\r\n        _removeRow : function (rowIndex, uniqueIndex, force) {\r\n            var tbWhole = this._elm;\r\n\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            if (langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        rowIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (langx.isNumeric(rowIndex)) {\r\n                // Remove middle row\r\n                if (force || typeof (settings.beforeRowRemove) != 'function' || settings.beforeRowRemove(tbWhole, rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 1);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Sort sequence\r\n                    this._sortSequence( rowIndex);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, rowIndex);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Store old window scroll value\r\n                var oldHeight = 0, oldScroll = 0;\r\n                if (settings.maintainScroll) {\r\n                    oldHeight = $(tbWhole).height();\r\n                    oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n                }\r\n                // Remove last row\r\n                if (force || !langx.isFunction(settings.beforeRowRemove) || settings.beforeRowRemove(tbWhole, settings._rowOrder.length - 1)) {\r\n                    uniqueIndex = settings._rowOrder.pop();\r\n                    tbBody.removeChild(tbBody.lastChild);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.lastChild);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, null);\r\n                    }\r\n                }\r\n                // Scroll the page when append row\r\n                if (settings.maintainScroll) {\r\n                    // Try to maintain the height so that user no need to scroll every time when row added\r\n                    var newHeight = $(tbWhole).height();\r\n                    $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n                }\r\n            }\r\n            // Add empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings);\r\n            }\r\n        },\r\n\r\n        _loadData : function (records, isInit) {\r\n            var tbWhole = this._elm;\r\n            var tbBody, tbRow, tbCell, uniqueIndex, insertResult;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (settings) {\r\n                // Clear existing content\r\n                tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                $(tbBody).empty();\r\n                settings._rowOrder.length = 0;\r\n                settings._uniqueIndex = 0;\r\n                // Check any records\r\n                if (records != null && records.length) {\r\n                    // Add rows\r\n                    insertResult = this._insertRow(records.length, null, null);\r\n                    // Set data\r\n                    for (var r = 0; r < insertResult.addedRows.length; r++) {\r\n                        for (var c = 0; c < settings.columns.length; c++) {\r\n                            setCtrlValue(settings, c, settings._rowOrder[r], records[r][settings.columns[c].name]);\r\n                        }\r\n                        if (langx.isFunction(settings.rowDataLoaded)) {\r\n                            settings.rowDataLoaded(tbWhole, records[r], r, settings._rowOrder[r]);\r\n                        }\r\n                    }\r\n                }\r\n                // Save setting\r\n                settings._isDataLoaded = true;\r\n                if (isInit) settings.initData = null;\r\n                $(tbWhole).data('appendGrid', settings);\r\n                // Trigger data loaded event\r\n                if (langx.isFunction(settings.dataLoaded)) {\r\n                    settings.dataLoaded(tbWhole, records);\r\n                }\r\n            }\r\n        },\r\n\r\n        _init: function () {\r\n            var options = this.options,\r\n                self = this;\r\n            // Check mandatory paramters included\r\n            if (!langx.isArray(options.columns) || options.columns.length == 0) {\r\n                alert(_systemMessages.noColumnInfo);\r\n            }\r\n            // Check target element is table or not\r\n            var tbWhole = this._elm, tbWrap, tbHead, tbBody, tbFoot, tbColGp, tbRow, tbCell;\r\n            if (isEmpty(tbWhole.tagName) || tbWhole.tagName != 'TABLE') {\r\n                alert(_systemMessages.elemNotTable);\r\n            }\r\n            // Generate settings\r\n            var settings = langx.extend({}, _defaultInitOptions, _defaultCallbackContainer, options);\r\n            // Add internal settings\r\n            langx.extend(settings, {\r\n                // The UniqueIndex accumulate counter\r\n                _uniqueIndex: 0,\r\n                // The row order array\r\n                _rowOrder: [],\r\n                // Indicate data is loaded or not\r\n                _isDataLoaded: false,\r\n                // Visible column count for internal calculation\r\n                _visibleCount: 0,\r\n                // Total colSpan count after excluding `hideRowNumColumn` and not generating last column\r\n                _finalColSpan: 0,\r\n                // Indicate to hide last column or not\r\n                _hideLastColumn: false,\r\n                // The element ID of the `appendGrid` wrapper\r\n                _wrapperId: null,\r\n                // \r\n                _calculateWidth: true\r\n            });\r\n            // Labels or messages used in grid\r\n            if (langx.isPlainObject(options.i18n))\r\n                settings._i18n = langx.extend({}, _defaultTextResources, options.i18n);\r\n            else\r\n                settings._i18n = langx.extend({}, _defaultTextResources);\r\n            // The extra class names for buttons\r\n            if (langx.isPlainObject(options.buttonClasses))\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses, options.buttonClasses);\r\n            else\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses);\r\n            // The extra class names for sections\r\n            if (langx.isPlainObject(options.sectionClasses))\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses, options.sectionClasses);\r\n            else\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses);\r\n            // Make sure the `hideButtons` setting defined\r\n            if (langx.isPlainObject(options.hideButtons))\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons, options.hideButtons);\r\n            else\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons);\r\n            // Check `idPrefix` is defined\r\n            if (isEmpty(settings.idPrefix)) {\r\n                // Check table ID defined\r\n                if (isEmpty(tbWhole.id) || tbWhole.id == '') {\r\n                    // Generate an ID using current time\r\n                    settings.idPrefix = 'ag' + new Date().getTime();\r\n                }\r\n                else {\r\n                    settings.idPrefix = tbWhole.id;\r\n                }\r\n            }\r\n            // Check custom grid button parameters\r\n            if (!langx.isPlainObject(settings.customGridButtons)) {\r\n                settings.customGridButtons = {};\r\n            }\r\n            // Check rowDragging and useSubPanel option\r\n            if (settings.useSubPanel && settings.rowDragging) {\r\n                settings.rowDragging = false;\r\n            }\r\n            // Create thead and tbody\r\n            tbHead = document.createElement('thead');\r\n            tbHead.className = 'ui-widget-header';\r\n            tbBody = document.createElement('tbody');\r\n            tbBody.className = 'ui-widget-content';\r\n            tbFoot = document.createElement('tfoot');\r\n            tbFoot.className = 'ui-widget-header';\r\n            tbColGp = document.createElement('colgroup');\r\n            // Prepare the table element\r\n            settings._wrapperId = settings.idPrefix + '-wrapper';\r\n            tbWrap = this._tbWrap = document.createElement('div');\r\n            $(tbWrap).attr('id', settings._wrapperId).addClass('appendGrid').insertAfter(tbWhole);\r\n            $(tbWhole).empty().addClass('ui-widget').appendTo(tbWrap);\r\n            // Check if content scrolling is enabled\r\n            if (settings.maxBodyHeight > 0) {\r\n                // Seperate the thead and tfoot from source table\r\n                $('<table></table>').addClass('ui-widget head').append(tbHead).prependTo(tbWrap);\r\n                $(tbWhole).addClass('body').wrap($('<div></div>').addClass('scroller').css('max-height', settings.maxBodyHeight)).append(tbColGp, tbBody);\r\n                $('<table></table>').addClass('ui-widget foot').append(tbFoot).appendTo(tbWrap);\r\n            } else {\r\n                // Add thead, tbody and tfoot to the same table\r\n                $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\r\n            }\r\n            // Handle header row\r\n            var tbHeadCellRowNum, tbHeadCellRowButton;\r\n            tbHead.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.header) {\r\n                tbRow.className = 'columnHead ' + settings._sectionClasses.header;\r\n            } else {\r\n                tbRow.className = 'columnHead';\r\n            }\r\n            if (!settings.hideRowNumColumn) {\r\n                tbRow.appendChild(tbHeadCellRowNum = document.createElement('td'));\r\n                tbHeadCellRowNum.className = 'ui-widget-header first';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Prepare column information and add column header\r\n            var pendingSkipCol = 0;\r\n            for (var z = 0; z < settings.columns.length; z++) {\r\n                // Assign default setting\r\n                var columnOpt = langx.extend({}, _defaultColumnOptions, settings.columns[z]);\r\n                settings.columns[z] = columnOpt;\r\n                // Skip hidden\r\n                if (settings.columns[z].type != 'hidden') {\r\n                    // Check column is invisible\r\n                    if (!settings.columns[z].invisible) {\r\n                        settings._visibleCount++;\r\n                    }\r\n                    // Check skip header colSpan\r\n                    if (pendingSkipCol == 0) {\r\n                        var className = 'ui-widget-header';\r\n                        if (settings.columns[z].invisible) className += ' invisible';\r\n                        if (settings.columns[z].resizable) className += ' resizable';\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                        tbCell.id = settings.idPrefix + '_' + settings.columns[z].name + '_td_head';\r\n                        tbCell.className = className;\r\n                        if (settings.columns[z].displayCss) $(tbCell).css(settings.columns[z].displayCss);\r\n                        if (settings.columns[z].headerSpan > 1) {\r\n                            $(tbCell).attr('colSpan', settings.columns[z].headerSpan);\r\n                            pendingSkipCol = settings.columns[z].headerSpan - 1;\r\n                        }\r\n                        // Add tooltip\r\n                        if (langx.isPlainObject(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).tooltip(settings.columns[z].displayTooltip);\r\n                        }\r\n                        else if (!isEmpty(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).attr('title', settings.columns[z].displayTooltip).tooltip();\r\n                        }\r\n                        // Check to set display text or generate by function\r\n                        if (langx.isFunction(settings.columns[z].display)) {\r\n                            settings.columns[z].display(tbCell);\r\n                        } else if (!isEmpty(settings.columns[z].display)) {\r\n                            $(tbCell).text(settings.columns[z].display);\r\n                        }\r\n                        // Add column group for scrolling\r\n                        tbColGp.appendChild(document.createElement('col'));\r\n                    } else {\r\n                        pendingSkipCol--;\r\n                    }\r\n                }\r\n            }\r\n            // Enable columns resizable\r\n            if ($.fn.resizable ) {\r\n                $('td.resizable', tbHead).resizable({ handles: 'e' });\r\n            }\r\n            // Check to hide last column or not\r\n            if (settings.hideButtons.insert && settings.hideButtons.remove\r\n                    && settings.hideButtons.moveUp && settings.hideButtons.moveDown\r\n                    && (!langx.isArray(settings.customRowButtons) || settings.customRowButtons.length == 0)) {\r\n                settings._hideLastColumn = true;\r\n            }\r\n            // Calculate the `_finalColSpan` value\r\n            settings._finalColSpan = settings._visibleCount;\r\n            if (!settings.hideRowNumColumn) settings._finalColSpan++;\r\n            if (!settings._hideLastColumn) settings._finalColSpan++;\r\n            // Generate last column header if needed\r\n            if (!settings._hideLastColumn) {\r\n                if (settings.rowButtonsInFront) {\r\n                    if (settings.hideRowNumColumn) {\r\n                        // Insert a cell at the front\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.firstChild);\r\n                    } else {\r\n                        // Span the first cell that across row number and row button cells\r\n                        // tbHeadCellRowNum.colSpan = 2;\r\n                        // tbHeadCellRowButton = tbHeadCellRowNum;\r\n\r\n                        // Insert a cell as the second column\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.childnodes[1]);\r\n                    }\r\n                } else {\r\n                    tbRow.appendChild(tbHeadCellRowButton = document.createElement('td'));\r\n                }\r\n                tbHeadCellRowButton.className = 'ui-widget-header last';\r\n                tbHeadCellRowButton.id = settings.idPrefix + '_last_td_head';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Add caption when defined\r\n            if (settings.caption) {\r\n                tbHead.insertBefore(tbRow = document.createElement('tr'), tbHead.firstChild);\r\n                if (settings._sectionClasses.caption) {\r\n                    tbRow.className = settings._sectionClasses.caption;\r\n                }\r\n                tbRow.appendChild(tbCell = document.createElement('td'));\r\n                tbCell.id = settings.idPrefix + '_caption_td';\r\n                tbCell.className = 'ui-state-active caption';\r\n                tbCell.colSpan = settings._finalColSpan;\r\n                // Add tooltip\r\n                if (langx.isPlainObject(settings.captionTooltip)) {\r\n                    $(tbCell).tooltip(settings.captionTooltip);\r\n                } else if (!isEmpty(settings.captionTooltip)) {\r\n                    $(tbCell).attr('title', settings.captionTooltip).tooltip();\r\n                }\r\n                // Check to set display text or generate by function\r\n                if (langx.isFunction(settings.caption)) {\r\n                    settings.caption(tbCell);\r\n                } else {\r\n                    $(tbCell).text(settings.caption);\r\n                }\r\n            }\r\n            // Handle footer row\r\n            tbFoot.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.footer) {\r\n                tbRow.className = settings._sectionClasses.footer;\r\n            }\r\n            tbRow.appendChild(tbCell = document.createElement('td'));\r\n            tbCell.id = settings.idPrefix + '_footer_td';\r\n            tbCell.colSpan = settings._finalColSpan;\r\n            $('<input/>').attr({\r\n                type: 'hidden',\r\n                id: settings.idPrefix + '_rowOrder',\r\n                name: settings.idPrefix + '_rowOrder'\r\n            }).appendTo(tbCell);\r\n            // Make row invisible if all buttons are hidden\r\n            if (settings.hideButtons.append && settings.hideButtons.removeLast\r\n                    && (!langx.isArray(settings.customFooterButtons) || settings.customFooterButtons.length == 0)) {\r\n                tbRow.style.display = 'none';\r\n            } else {\r\n                if (!settings.hideButtons.append) {\r\n                    var button = this._createGridButton(settings.customGridButtons.append, 'ui-icon-plusthick')\r\n                    .attr({ title: settings._i18n.append }).addClass('append')\r\n                    .click(function (evt) {\r\n                        self._insertRow(1, null, null);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.append)) button.addClass(settings._buttonClasses.append);\r\n                }\r\n                if (!settings.hideButtons.removeLast) {\r\n                    var button = this._createGridButton(settings.customGridButtons.removeLast, 'ui-icon-closethick')\r\n                    .attr({ title: settings._i18n.removeLast }).addClass('removeLast')\r\n                    .click(function (evt) {\r\n                        self._removeRow( null, this.value, false);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.removeLast)) button.addClass(settings._buttonClasses.removeLast);\r\n                }\r\n                if (settings.customFooterButtons && settings.customFooterButtons.length) {\r\n                    // Add front buttons\r\n                    for (var y = settings.customFooterButtons.length - 1; y >= 0; y--) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                            $(tbCell).prepend(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                    // Add end buttons\r\n                    for (var y = 0; y < settings.customFooterButtons.length; y++) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                            $(tbCell).append(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Enable dragging\r\n            if (settings.rowDragging) {\r\n                $(tbBody).sortable({\r\n                    axis: 'y',\r\n                    containment: tbWhole,\r\n                    handle: '.rowDrag',\r\n                    helper: function (e, tr) {\r\n                        var org = tr.children();\r\n                        var helper = tr.clone();\r\n                        // Fix the cell width of cloned table cell\r\n                        helper.children().each(function (index) {\r\n                            $(this).width(org.eq(index).width());\r\n                            // Set the value of drop down list when drag (Issue #18)\r\n                            var helperSelect = $('select', this);\r\n                            if (helperSelect.length > 0) {\r\n                                for (var y = 0; y < helperSelect.length; y++) {\r\n                                    var orgSelect = org.eq(index).find('select');\r\n                                    if (orgSelect.length > y) {\r\n                                        helperSelect[y].value = orgSelect[y].value;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        return helper;\r\n                    },\r\n                    update: function (event, ui) {\r\n                        var uniqueIndex = ui.item[0].id.substring(ui.item[0].id.lastIndexOf('_') + 1);\r\n                        var tbRowIndex = ui.item[0].rowIndex - $('tr', tbHead).length;\r\n                        self._gridRowDragged(ui.originalPosition.top > ui.position.top, uniqueIndex, tbRowIndex);\r\n                    }\r\n                });\r\n            }\r\n            // Save options\r\n            $(tbWhole).data('appendGrid', settings);\r\n            if (langx.isArray(options.initData)) {\r\n                // Load data if initData is array\r\n                this._loadData(options.initData, true);\r\n            } else {\r\n                // Add empty rows\r\n                //$(tbWhole).appendGrid('appendRow', settings.initRows);\r\n                this.appendRow(settings.initRows);\r\n            }\r\n            // Show no rows in grid\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings, true);\r\n            }\r\n            // Calculate column width\r\n            if (settings.maxBodyHeight > 0) {\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    $('table.foot', tbWrap).width($(tbWhole).width());\r\n                }\r\n            }\r\n        },\r\n\r\n        isReady: function () {\r\n            // Check the appendGrid is initialized or not\r\n            var settings = this._checkGridAndGetSettings( true);\r\n            if (settings) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isDataLoaded: function () {\r\n            // Check the grid data is loaded by `load` method or `initData` parameter or not\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._isDataLoaded;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        load: function (records) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if (records != null && records.length > 0) {\r\n                    this._loadData(records, false);\r\n                } else {\r\n                    this._emptyGrid();\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        appendRow: function (numOfRowOrRowArray) {\r\n            return this.insertRow(numOfRowOrRowArray);\r\n        },\r\n\r\n        insertRow: function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if ((langx.isArray(numOfRowOrRowArray) && numOfRowOrRowArray.length > 0) || (langx.isNumeric(numOfRowOrRowArray) && numOfRowOrRowArray > 0)) {\r\n                    // Define variables\r\n                    var tbWhole = this[0];\r\n                    insertResult = this._insertRow(numOfRowOrRowArray, rowIndex, callerUniqueIndex);\r\n                    // Reorder sequence as needed\r\n                    if (langx.isNumeric(rowIndex) || langx.isNumeric(callerUniqueIndex)) {\r\n                        // Sort sequence\r\n                        this._sortSequence( insertResult.rowIndex);\r\n                        // Move focus\r\n                        var insertUniqueIndex = settings._rowOrder[insertResult.addedRows[0]];\r\n                        $('#' + settings.idPrefix + '_Insert_' + insertUniqueIndex, tbWhole).focus();\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && settings._rowOrder.length > 0) {\r\n                this._removeRow(rowIndex, uniqueIndex, true);\r\n            }\r\n            return this;\r\n        },\r\n        emptyGrid: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                this._emptyGrid();\r\n            }\r\n            return target;\r\n        },\r\n        moveUpRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtTarget, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex > 0 && rowIndex < settings._rowOrder.length) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex > 0) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex - 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtTarget = document.getElementById(settings.idPrefix + '_SubRow_' + uniqueIndex, tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(trAdtTarget);\r\n                    }\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trTarget, trSwap);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtTarget, trSwap);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex - 1];\r\n                    settings._rowOrder[oldIndex - 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveUp', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveUp', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex - 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        moveDownRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtSwap, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length - 1) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex != settings._rowOrder.length - 1) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtSwap = document.getElementById(settings.idPrefix + '_SubRow_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trSwap);\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trSwap, trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtSwap, trTarget);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex + 1];\r\n                    settings._rowOrder[oldIndex + 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveDown', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveDown', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex + 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        showColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and show the column if it is invisible only\r\n                if (colIndex != -1 && settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount++;\r\n                    settings._finalColSpan++;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Remove invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').removeClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).removeClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = false;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        hideColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and hide the column if it is visible only\r\n                if (colIndex != -1 && !settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount--;\r\n                    settings._finalColSpan--;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Add invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').addClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).addClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = true;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        isColumnInvisible: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        return settings.columns[z].invisible;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowCount: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._rowOrder.length;\r\n            }\r\n            return null;\r\n        },\r\n        getUniqueIndex: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(rowIndex) && rowIndex < settings._rowOrder.length) {\r\n                return settings._rowOrder[rowIndex];\r\n            }\r\n            return null;\r\n        },\r\n        getRowIndex: function (uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        return z;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowValue: function (rowIndex, uniqueIndex, loopIndex) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                }\r\n                if (!isEmpty(uniqueIndex)) {\r\n                    result = getRowValue(settings, uniqueIndex, loopIndex);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getAllValue: function (objectMode) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                // Prepare result based on objectMode setting\r\n                result = objectMode ? {} : [];\r\n                // Process on each rows\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (objectMode) {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z], z);\r\n                        langx.extend(result, rowValue)\r\n                    } else {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z]);\r\n                        result.push(rowValue);\r\n                    }\r\n                }\r\n                if (objectMode) {\r\n                    result[settings.rowCountName] = settings._rowOrder.length;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getCtrlValue: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCtrlValue(settings, z, settings._rowOrder[rowIndex]);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        setCtrlValue: function (name, rowIndex, value) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        setCtrlValue(settings, z, settings._rowOrder[rowIndex], value);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        getCellCtrl: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                var uniqueIndex = settings._rowOrder[rowIndex];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getCellCtrlByUniqueIndex: function (name, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowOrder: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of `Row Order` array\r\n                return settings._rowOrder.slice();\r\n            }\r\n            return null;\r\n        },\r\n        getColumns: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of the columns array\r\n                return settings.columns.slice();\r\n            }\r\n            return null;\r\n        },\r\n        isRowEmpty: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return isRowEmpty(settings, rowIndex);\r\n            }\r\n            return null;\r\n        },\r\n        removeEmptyRows: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                var tbWhole = this[0];\r\n                for (var z = settings._rowOrder.length; z >= 0; z--) {\r\n                    if (isRowEmpty(settings, z)) {\r\n                        // Remove itself\r\n                        this._removeRow( null, settings._rowOrder[z], true);\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n    });\r\n    // The default initial options.\r\n    var _defaultInitOptions = {\r\n        // The text as table caption, set null to disable caption generation.\r\n        caption: null,\r\n        // Tooltip for caption.\r\n        captionTooltip: null,\r\n        // The total number of empty rows generated when init the grid. This will be ignored if `initData` is assigned.\r\n        initRows: 3,\r\n        // The maximum number of rows allowed in this grid.\r\n        maxRowsAllowed: 0,\r\n        // An array of data to be filled after initialized the grid.\r\n        initData: null,\r\n        // Array of column options.\r\n        columns: null,\r\n        // Labels or messages used in grid.\r\n        i18n: null,\r\n        // The ID prefix of controls generated inside the grid. Table ID will be used if not defined.\r\n        idPrefix: null,\r\n        // Enable row dragging by using jQuery UI sortable on grid rows.\r\n        rowDragging: false,\r\n        // Hide the buttons at the end of rows or bottom of grid.\r\n        hideButtons: null,\r\n        // Hide the row number column.\r\n        hideRowNumColumn: false,\r\n        // Generate row buttom column in the front of input columns.\r\n        rowButtonsInFront: false,\r\n        // The variable name of row count used for object mode of getAllValue\r\n        rowCountName: '_RowCount',\r\n        // The extra class names for buttons.\r\n        buttonClasses: null,\r\n        // The extra class names for table sections.\r\n        sectionClasses: null,\r\n        // Custom the standard grid buttons.\r\n        customGridButtons: null,\r\n        // Adding extra button(s) at the end of rows.\r\n        customRowButtons: null,\r\n        // Adding extra button(s) at the bottom of grid.\r\n        customFooterButtons: null,\r\n        // Use the sub panel or not\r\n        useSubPanel: false,\r\n        // Maintain the scroll position after appended or removed last row.\r\n        maintainScroll: false,\r\n        // The maximum height of grid content, scroll bar will be display when the height is greater than this value.\r\n        maxBodyHeight: 0,\r\n        // Auto calculate the column width when scroll bar on table body is in use.\r\n        autoColumnWidth: true\r\n    };\r\n    var _defaultCallbackContainer = {\r\n        // The callback function for format the HTML name of generated controls.\r\n        nameFormatter: null,\r\n        // The callback function to be triggered after all data loaded to grid.\r\n        dataLoaded: null,\r\n        // The callback function to be triggered after data loaded to a row.\r\n        rowDataLoaded: null,\r\n        // The callback function to be triggered after new row appended.\r\n        afterRowAppended: null,\r\n        // The callback function to be triggered after new row inserted.\r\n        afterRowInserted: null,\r\n        // The callback function to be triggered after grid row swapped.\r\n        afterRowSwapped: null,\r\n        // The callback function to be triggered before grid row remove.\r\n        beforeRowRemove: null,\r\n        // The callback function to be triggered after grid row removed.\r\n        afterRowRemoved: null,\r\n        // The callback function to be triggered after grid row dragged.\r\n        afterRowDragged: null,\r\n        // The callback function for generating sub panel content.\r\n        subPanelBuilder: null,\r\n        // The callback function for getting values from sub panel. Used for `getAllValue` method.\r\n        subPanelGetter: null,\r\n        // The callback function to be triggered when row(s) is/are adding to grid but the maximum number of rows allowed is reached.\r\n        maxNumRowsReached: null\r\n    };\r\n    // Default column options.\r\n    var _defaultColumnOptions = {\r\n        // Type of column control.\r\n        type: 'text',\r\n        // Name of column.\r\n        name: null,\r\n        // Default value.\r\n        value: null,\r\n        // Display text on the header section.\r\n        display: null,\r\n        // Extra CSS setting to be added to display text.\r\n        displayCss: null,\r\n        // Tooltip for column head.\r\n        displayTooltip: null,\r\n        // The `colspan` setting on the column header.\r\n        headerSpan: 1,\r\n        // Extra CSS setting to be added to the control container table cell.\r\n        cellCss: null,\r\n        // Extra attributes to be added to the control.\r\n        ctrlAttr: null,\r\n        // Extra properties to be added to the control.\r\n        ctrlProp: null,\r\n        // Extra CSS to be added to the control.\r\n        ctrlCss: null,\r\n        // Extra name of class to be added to the control.\r\n        ctrlClass: null,\r\n        // The available option for building `select` type control.\r\n        ctrlOptions: null,\r\n        // Options for initalize jQuery UI widget.\r\n        uiOption: null,\r\n        // Options for initalize jQuery UI tooltip.\r\n        uiTooltip: null,\r\n        // Let column resizable by using jQuery UI Resizable Interaction.\r\n        resizable: false,\r\n        // Show or hide column after initialized.\r\n        invisible: false,\r\n        // The value to compare for indentify this column value is empty.\r\n        emptyCriteria: null,\r\n        // Callback function to build custom type control.\r\n        customBuilder: null,\r\n        // Callback function to get control value.\r\n        customGetter: null,\r\n        // Callback function to set control value.\r\n        customSetter: null,\r\n        // The `OnClick` event callback of control.\r\n        onClick: null,\r\n        // The `OnChange` event callback of control.\r\n        onChange: null\r\n    };\r\n    var _systemMessages = {\r\n        noColumnInfo: 'Cannot initial grid without column information!',\r\n        elemNotTable: 'Cannot initial grid on element other than TABLE!',\r\n        notInit: '`appendGrid` does not initialized',\r\n        getValueMultiGrid: 'Cannot get values on multiple grid',\r\n        notSupportMethod: 'Method is not supported by `appendGrid`: '\r\n    };\r\n    var _defaultTextResources = {\r\n        append: 'Append Row',\r\n        removeLast: 'Remove Last Row',\r\n        insert: 'Insert Row Above',\r\n        remove: 'Remove Current Row',\r\n        moveUp: 'Move Up',\r\n        moveDown: 'Move Down',\r\n        rowDrag: 'Sort Row',\r\n        rowEmpty: 'This Grid Is Empty'\r\n    };\r\n    var _defaultButtonClasses = { append: null, removeLast: null, insert: null, remove: null, moveUp: null, moveDown: null, rowDrag: null };\r\n    var _defaultSectionClasses = { caption: null, header: null, body: null, subPanel: null, footer: null };\r\n    var _defaultHideButtons = { append: false, removeLast: false, insert: false, remove: false, moveUp: false, moveDown: false };\r\n\r\n\r\n    function makeCustomBottomButton(tbWhole, buttonCfg) {\r\n        var exButton = $('<button/>').attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole }, buttonCfg.click);\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n    function makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex) {\r\n        var exButton = $('<button/>').val(uniqueIndex).attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole, uniqueIndex: uniqueIndex }, function (evt) {\r\n            var rowData = $(evt.data.tbWhole).plugin(\"lark.tabular\").getRowValue(null, evt.data.uniqueIndex);\r\n            buttonCfg.click(evt, evt.data.uniqueIndex, rowData);\r\n        });\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n\r\n\r\n\r\n\r\n    function findRowIndex(uniqueIndex, settings) {\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function isEmpty(value) {\r\n        return typeof (value) == 'undefined' || value == null;\r\n    }\r\n    function getObjValue(obj, key) {\r\n        if (!isEmpty(obj) && langx.isPlainObject(obj) && !isEmpty(obj[key])) {\r\n            return obj[key];\r\n        }\r\n        return null;\r\n    }\r\n    function getRowIndex(settings, uniqueIndex) {\r\n        var rowIndex = null;\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return rowIndex;\r\n    }\r\n    function getRowValue(settings, uniqueIndex, loopIndex) {\r\n        var result = {}, keyName = null, suffix = (isEmpty(loopIndex) ? '' : '_' + loopIndex);\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            keyName = settings.columns[z].name + suffix;\r\n            result[keyName] = getCtrlValue(settings, z, uniqueIndex);\r\n        }\r\n        // Merge control values from sub panel if getter method defined\r\n        if (settings.useSubPanel && langx.isFunction(settings.subPanelGetter)) {\r\n            var adtData = settings.subPanelGetter(uniqueIndex);\r\n            if (langx.isPlainObject(adtData)) {\r\n                if (suffix == '') {\r\n                    // Extend to row data directly for array mode\r\n                    langx.extend(result, adtData);\r\n                } else {\r\n                    // For returning values in object mode, add suffix to all keys\r\n                    var newData = {};\r\n                    for (var key in adtData) {\r\n                        newData[key + suffix] = adtData[key];\r\n                    }\r\n                    langx.extend(result, newData);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function getCtrlValue(settings, colIndex, uniqueIndex) {\r\n        var type = settings.columns[colIndex].type, columnName = settings.columns[colIndex].name;\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customGetter)) {\r\n                return settings.columns[colIndex].customGetter(settings.idPrefix, columnName, uniqueIndex);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            var ctrl = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (ctrl == null) {\r\n                return null;\r\n            }\r\n            else if (type == 'checkbox') {\r\n                return ctrl.checked ? 1 : 0;\r\n            } else {\r\n                return $(ctrl).val();\r\n            }\r\n        }\r\n    }\r\n    function getCellCtrl(type, idPrefix, columnName, uniqueIndex) {\r\n        return document.getElementById(idPrefix + '_' + columnName + '_' + uniqueIndex);\r\n    }\r\n    function setCtrlValue(settings, colIndex, uniqueIndex, data) {\r\n        var type = settings.columns[colIndex].type;\r\n        var columnName = settings.columns[colIndex].name;\r\n        // Handle values by type\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customSetter)) {\r\n                settings.columns[colIndex].customSetter(settings.idPrefix, columnName, uniqueIndex, data);\r\n            } else {\r\n                // `customSetter` is not a function?? Skip handling...\r\n            }\r\n        } else {\r\n            var element = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (type == 'checkbox') {\r\n                element.checked = (data != null && data != 0);\r\n            } else if (type == 'ui-selectmenu') {\r\n                element.value = (data == null ? '' : data);\r\n                $(element).selectmenu('refresh');\r\n            }\r\n            else {\r\n                $(element).val(data == null ? '' : data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function isRowEmpty(settings, rowIndex) {\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            var uniqueIndex = settings._rowOrder[rowIndex];\r\n            var currentValue = getCtrlValue(settings, z, uniqueIndex);\r\n            // Check the empty criteria is function\r\n            if (langx.isFunction(settings.columns[z].emptyCriteria)) {\r\n                if (!settings.columns[z].emptyCriteria(currentValue)) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                // Find the default value\r\n                var defaultValue = null;\r\n                if (!isEmpty(settings.columns[z].emptyCriteria)) {\r\n                    defaultValue = settings.columns[z].emptyCriteria;\r\n                } else {\r\n                    // Check default value based on its type\r\n                    if (settings.columns[z].type == 'checkbox') {\r\n                        defaultValue = 0;\r\n                    } else if (settings.columns[z].type == 'select' || settings.columns[z].type == 'ui-selectmenu') {\r\n                        var options = getCellCtrl(settings.columns[z].type, settings.idPrefix, settings.columns[z].name, uniqueIndex).options;\r\n                        if (options.length > 0) {\r\n                            defaultValue = options[0].value;\r\n                        } else {\r\n                            defaultValue = '';\r\n                        }\r\n                    } else {\r\n                        defaultValue = '';\r\n                    }\r\n                }\r\n                // Compare with the default value\r\n                if (currentValue != defaultValue) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /*\r\n    /// <summary>\r\n    /// Initialize append grid or calling its methods.\r\n    /// </summary>\r\n    $.fn.appendGrid = function (params) {\r\n        if (_methods[params]) {\r\n            return _methods[params].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof (params) === 'object' || !params) {\r\n            return _methods.init.apply(this, arguments);\r\n        } else {\r\n            alert(_systemMessages.notSupportMethod + params);\r\n        }\r\n    };\r\n    */\r\n\r\n    return Tabular ;\r\n});\r\n\ndefine('skylark-bootstrap3/tab',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"skylark-utils-dom/plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab = bs3.Tab = plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"bs3.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  /*\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this,option)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n  return $.fn.tab;\n  */\n\n  plugins.register(Tab,\"tab\");\n\n  return Tab;\n});\n\ndefine('skylark-widgets-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    return swt.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-widgets-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Widget\"\r\n],function(langx,$,Widget){ \r\n\r\n\r\n\r\n  var Toolbar = Widget.inherit({\r\n    pluginName : \"lark.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"lark-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-widgets-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./CheckBox\",\r\n    \"./ComboBox\",\r\n    \"./TextBox\",\r\n    \"./Listing\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SearchBox\",\r\n    \"./SelectList\",\r\n    \"./Tabular\",\r\n    \"./TabStrip\",\r\n    \"./TextBox\",\r\n    \"./Toolbar\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-widgets-swt', ['skylark-widgets-swt/main'], function (main) { return main; });\n\n"]}