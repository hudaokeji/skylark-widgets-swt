{"version":3,"sources":["skylark-ui-swt.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","datax","elmx","plugins","Map","swt","Widget","Plugin","inherit","klassName","_elmx","_construct","elm","options","isHtmlNode","this","_parse","overrided","_velm","_elm","_create","Object","defineProperty","value","state","_init","optionsAttr","data","options1","JSON","parse","template","Error","self","widgetClass","addClass","on","args","_refresh","_startup","updates","mapping","events","attributs","properties","styles","render","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","aria","name","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","css","prop","throb","params","attach","target","position","before","after","append","detach","remove","meta","ctor","apply","arguments","addStatePropMethod","prototype","undefined","pluginName","register","widgetName","collapse","Panel","toggler","body","$toggle","find","$body","$this","collpasePlugin","toggle","expand","toogle","full","unfull","toogleFull","close","panel_dom","dom","id","minimize","promise","then","fadeOut","Accordion","panel","panels","forEach","panelEl","push","_panels","_post","addPanel","$newPanel","$template","clone","removeClass","hash","fadeIn","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","String","[object Object]","$el","hasClass","href","$fa_icon_left","length","$fa_icon_right","super","left","prepend","iconleft","iconright","Carousel","items","indicatorTemplate","slideTemplate","templates","container","indicators","item","slides","_bs_carousel","carousel","slideIndex","to","slideAction","prev","next","preventDefault","pos","pause","cycle","add","createIndicator","obj","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","cloneNode","title","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","getElementsByTagName","src","style","backgroundImage","addIndicator","index","indicatorContainer","list","appendChild","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","document","createElement","addSlide","resetSlides","empty","_Toggler","checked","isChecked","uncheck","check","Checkbox","selectors","chk","lbl","label","chkSelector","lblSelector","$chk","disabled","$lbl","evt","changed","$containerToggle","$label","$toggleContainer","setDisabledState","Combobox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","predicate","visible","$dropMenu","each","i","$li","trim","substr","$element","$input","$button","dropdown","$inputGroupBtn","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","val","_destroy","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","txt","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","selectBySelector","selectByIndex","removeData","removeAttr","parent","trigger","synthetic","IS_NAVIGATIONAL","which","selected","$selected","previousKeyPress","extra","getValue","InputBox","multiline","is","tagName","attrs","subtype","type","_dom","_sync","ListGroup","multiSelect","multiTier","classes","active","itemSelector","_$items","veItem","query","has","not","doubleTapToGo","stopPropagation","location","toggleClass","siblings","findItem","valueOrIdx","isNumber","eq","oldValue","selectOneItem","right_to_left","popup","Menu","init","_options","hide_onmouseleave","icons","stopImmediatePropagation","contains","relatedTarget","clearTimeout","end","parentsUntil","addBack","_show_submenu","setTimeout","_execute","o","currentTarget","last","closest","first","prevAll","nextAll","a","click","_trigger","event_name","reference","element","x","position_x","y","position_y","_disabled","isFunction","action","call","is_callback","tmp","str","sep","separator_before","_class","shortcut","icon","indexOf","shortcut_label","submenu","separator_after","replace","xl","offset","top","w","h","height","dw","window","scrollLeft","dh","scrollTop","outerHeight","appendTo","is_visible","m","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$next","$numeric","checkCanAction","$elm","numeric","pageNo","parseInt","totalPageNoBtns","Math","min","begin","count","size","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","max","_vbar","start","slideDown","increase","tick","finish","slideUp","Radio","$radio","domNode","$container","ignoreVisibilityCheck","match","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","resize","key","fromCharCode","idx","charAt","off","destroy","itemChanged","newWidth","sizer","Boolean","TabStrip","header","tab","content","tabpane","$header","$tabs","$content","$tabpanes","tabEl","Toolbar","autoredraw","buttons","context","createToolbarItems","group","class","role","createButtonGroup","button","createButton","dropdown_group","dropdown_button","dropdown_list","dropdown_option","dropdown_option_li","createDrop","input_group","input_element","input_prefix","prefix","input_sufix","sufix","inputType","createInput","fn","toolbar","uploader","FileItem","Stateful","isPending","submit","cancel","abort","progress","fail","error","done","result","getState","isRunning","isDone","isError","FileItemCollection","FileItemWidget","className","fileName","fileSize","clear","message","processUploadMsg","doneMsg","model","updateProgress","hasFailed","hasDone","update","bindEvents","percent","loaded","total","progressHTML","getHelpers","displaySize","el","when_pending","when_running","when_done","collection","computeData","extend","Uploader","uploadUrl","autoUpload","fileList","nodata","pickFiles","startUploads","cancelUploads","dataType","fileItem","files","filePicker","uploadProcess","url","formData","singleFileUploads","picker","uploadManagerFiles","file_data","file_id","file","processor","renderFile","errorThrown","bindProcessEvents","at","with_files_elements","without_files_elements","file_view","main"],"mappings":"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","file":"../skylark-ui-swt.js","sourcesContent":["define('skylark-ui-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-utils-collection/Map\",\r\n  \"./swt\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,swt){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new Map()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn swt.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-ui-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-ui-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-ui-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-ui-swt/Checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Checkbox =  _Toggler.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.Checkbox = Checkbox;\r\n});\r\n\ndefine('skylark-ui-swt/Combobox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Combobox = Widget.inherit({\r\n\t\tklassName: \"Combobox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.Combobox = Combobox;\r\n});\r\n\ndefine('skylark-ui-swt/InputBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar InputBox =  Widget.inherit({\r\n\t\tklassName: \"InputBox\",\r\n\r\n    pluginName: \"lark.inputbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn swt.InputBox = InputBox;\r\n});\r\n\r\n\n define('skylark-ui-swt/ListGroup',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var ListGroup = Widget.inherit({\r\n        klassName : \"ListGroup\",\r\n\r\n        pluginName : \"lark.listgroup\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n          \tmultiTier : false,\r\n          \ttoggle : false,\r\n          \tclasses : {\r\n            \tactive : \"active\"\r\n          \t},\r\n          \tselectors : {\r\n            \titem : \".list-group-item\"\r\n          \t},\r\n          \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                obj = this;\r\n\r\n            //if (this.isIE() <= 9) {\r\n            //    $this.find(\"li.active\").has(\"ul\").children(\"ul\").collapse(\"show\");\r\n            //    $this.find(\"li\").not(\".active\").has(\"ul\").children(\"ul\").collapse(\"hide\");\r\n            //} else {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"ul\").addClass(\"collapse in\");\r\n                $this.query(\"li\").not(\".active\").has(\"ul\").children(\"ul\").addClass(\"collapse\");\r\n            //}\r\n\r\n            //add the \"doubleTapToGo\" class to active items if needed\r\n            if (obj.options.doubleTapToGo) {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"a\").addClass(\"doubleTapToGo\");\r\n            }\r\n\r\n            $this.query(\"li\").has(\"ul\").children(\"a\").on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                e.preventDefault();\r\n\r\n                //Do we need to enable the double tap\r\n                if (obj.options.doubleTapToGo) {\r\n\r\n                    //if we hit a second time on the link and the href is valid, navigate to that url\r\n                    if (obj.doubleTapToGo($(this)) && $(this).attr(\"href\") !== \"#\" && $(this).attr(\"href\") !== \"\") {\r\n                        e.stopPropagation();\r\n                        document.location = $(this).attr(\"href\");\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                $(this).parent(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                if ($toggle) {\r\n                    $(this).parent(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                }\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return ListGroup;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\t\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = swt.Menu = Widget.inherit({\r\n        klassName: \"Menu\",\r\n\r\n\t    pluginName : \"lark.menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-ui-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-ui-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-ui-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    return TabStrip;\r\n\r\n});\ndefine('skylark-ui-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\tvar Toolbar = swt.Toolbar = Widget.inherit({\r\n        klassName: \"Toolbar\",\r\n\r\n\t    pluginName : \"lark.toolbar\",\r\n\r\n        init : function(elm,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\tautoredraw: true,\r\n\t\t\t\t\tbuttons: {},\r\n\t\t\t\t\tcontext: {},\r\n\t\t\t\t\tlist: [],\r\n\t\t\t\t\tshow: true,\r\n\t\t\t},options);\r\n\r\n\r\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\r\n\t\t\tthis.$el = $(elm).append(this.$container);\r\n\r\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n\r\n\t\trender : function () {\r\n\t\t\tfunction createToolbarItems(items,container) {\r\n\t\t\t\tlangx.each(items,function(i,item)  {\r\n\t\t\t\t\tvar type = item.type;\r\n\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\ttype = \"button\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase \"buttongroup\":\r\n\t\t\t\t\t\t\t// Create an element with the HTML\r\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\tcreateButton(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dropdown\":\r\n\t\t\t\t\t\tcase \"dropup\":\r\n\t\t\t\t\t\t\tcreateDrop(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\tcreateInput(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButtonGroup(item,container) {\r\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\r\n\t\t\t\tcontainer.append(group);\r\n\t\t\t\tcreateToolbarItems(item.items,group);\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButton(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\r\n\t\t\t\t\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in attrs) {\r\n\t\t\t\t\tbutton.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.attr(attrs);\r\n\r\n\t\t\t\t// Add button to the group\r\n\t\t\t\tcontainer.append(button);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createDrop(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\r\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\r\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\r\n\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\tif(item.type === \"dropup\") {\r\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in item) {\r\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\t\t\t\t// Add caret\r\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\r\n\r\n\t\t\t\t// Add list of options\r\n\t\t\t\tfor(var i in item.list) {\r\n\t\t\t\t\tvar dropdown_option = item.list[i];\r\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\r\n\r\n\t\t\t\t\t// If has icon\r\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If has text\r\n\t\t\t\t\tif (\"text\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Set attributes\r\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\r\n\r\n\t\t\t\t\t// Add to dropdown list\r\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tdropdown_group.attr(attrs);\r\n\r\n\t\t\t\tdropdown_group.append(dropdown_button);\r\n\t\t\t\tdropdown_group.append(dropdown_list);\r\n\t\t\t\tcontainer.append(dropdown_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createInput(item,container) {\r\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\r\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\r\n\t\t\t\t\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// Add prefix addon\r\n\t\t\t\tif(\"prefix\" in item) {\r\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_prefix.html(item.prefix);\r\n\t\t\t\t\tinput_group.append(input_prefix);\r\n\r\n\t\t\t\t\tdelete attrs.prefix;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add input\r\n\t\t\t\tinput_group.append(input_element);\r\n\r\n\t\t\t\t// Add sufix addon\r\n\t\t\t\tif(\"sufix\" in item) {\r\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_sufix.html(item.sufix);\r\n\t\t\t\t\tinput_group.append(input_sufix);\r\n\r\n\t\t\t\t\tdelete attrs.sufix;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrs.type = attrs.inputType;\r\n\r\n\t\t\t\tdelete attrs.inputType;\r\n\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tinput_element.attr(attrs);\r\n\r\n\t\t\t\tcontainer.append(input_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this._options.items;\r\n\t\t\tif (items) {\r\n\t\t\t\tcreateToolbarItems(items,this.$container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t$.fn.toolbar = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.each(function () {\r\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\r\n\t\t});\r\n\t};\r\n\r\n\treturn Toolbar;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Uploader',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-collection/ArrayList\",\r\n  \"skylark-utils-filer/uploader\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ArrayList,uploader,swt,Widget){\r\n\r\n    /**\r\n     * This model represents a file.\r\n     *\r\n     */\r\n    var FileItem = langx.Stateful.inherit({\r\n        state: \"pending\",\r\n\r\n        /**\r\n         * Start upload.\r\n         *\r\n         */\r\n        start: function ()  {\r\n            if (this.isPending()) {\r\n                this.get('processor').submit();\r\n                this.state = \"running\";\r\n\r\n                // Dispatch event\r\n                this.trigger('filestarted', this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancel a file upload.\r\n         *\r\n         */\r\n        cancel: function () {\r\n            this.get('processor').abort();\r\n            this.destroy();\r\n\r\n            // Dispatch event\r\n            this.state = \"canceled\";\r\n            this.trigger('filecanceled', this);\r\n        },\r\n\r\n        /**\r\n         * Notify file that progress updated.\r\n         *\r\n         */\r\n        progress: function (data)  {\r\n            // Dispatch event\r\n            this.trigger('fileprogress', this.get('processor').progress());\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload failed.\r\n         *\r\n         */\r\n        fail: function (error)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filefailed', error);\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload is done.\r\n         *\r\n         */\r\n        done: function (result)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filedone', result);\r\n        },\r\n\r\n        /**\r\n         * Is this file pending to be uploaded ?\r\n         *\r\n         */\r\n        isPending: function ()  {\r\n            return this.getState() == \"pending\";\r\n        },\r\n\r\n        /**\r\n         * Is this file currently uploading ?\r\n         *\r\n         */\r\n        isRunning: function () {\r\n            return this.getState() == \"running\";\r\n        },\r\n\r\n        /**\r\n         * Is this file uploaded ?\r\n         *\r\n         */\r\n        isDone: function () {\r\n            return this.getState() == \"done\";\r\n        },\r\n\r\n        /**\r\n         * Is this upload in error ?\r\n         *\r\n         */\r\n        isError: function () {\r\n            return this.getState() == \"error\" || this.getState == \"canceled\";\r\n        },\r\n\r\n        /**\r\n         * Get the file state.\r\n         *\r\n         */\r\n        getState: function () {\r\n            return this.state;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This is a file collection, used to manage the selected\r\n     * and processing files.\r\n     *\r\n     */\r\n    var FileItemCollection = ArrayList.inherit({\r\n        item: FileItem\r\n    });\r\n\r\n    /**\r\n     * A file view, which is the view that manage a single file\r\n     * process in the upload manager.\r\n     *\r\n     */\r\n    var FileItemWidget = Widget.inherit({\r\n        className: 'upload-manager-file row',\r\n\r\n        options : {\r\n          selectors : {\r\n            fileName : \".name\",\r\n            fileSize : \".size\",\r\n            cancel : \".cancel\",\r\n            clear : \".clear\",\r\n            progress : \".progress\",\r\n            message : \".message\"\r\n          }\r\n        },\r\n\r\n        state : {\r\n          fileName : String,\r\n          fileSize : Number\r\n        },\r\n\r\n        _init: function () {\r\n            this.processUploadMsg = this.options.processUploadMsg;\r\n            this.doneMsg = this.options.doneMsg;\r\n\r\n            this.fileName(this.options.fileName);\r\n            this.fileSize(this.options.fileSize);\r\n\r\n            // Bind model events\r\n            this.model.on('destroy', this.close, this);\r\n            this.model.on('fileprogress', this.updateProgress, this);\r\n            this.model.on('filefailed', this.hasFailed, this);\r\n            this.model.on('filedone', this.hasDone, this);\r\n\r\n            // In each case, update view\r\n            this.model.on('all', this.update, this);\r\n\r\n            // Bind events\r\n            this.bindEvents();\r\n\r\n            // Update elements\r\n            this.update();            \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n\r\n        },\r\n\r\n        /**\r\n         * Update upload progress.\r\n         *\r\n         */\r\n        updateProgress: function (progress) {\r\n            var percent = parseInt(progress.loaded / progress.total * 100, 10);\r\n            var progressHTML = this.getHelpers().displaySize(progress.loaded)+' of '+this.getHelpers().displaySize(progress.total);\r\n            if (percent >= 100 && this.processUploadMsg) { progressHTML = this.processUploadMsg; }\r\n\r\n            $('.progress', this.el)\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n        },\r\n\r\n        /**\r\n         * File upload has failed.\r\n         *\r\n         */\r\n        hasFailed: function (error){\r\n            $('.message', this.el).html('<i class=\"icon-error\"></i> '+error);\r\n        },\r\n\r\n        /**\r\n         * File upload is done.\r\n         *\r\n         */\r\n        hasDone: function (result){\r\n            $('.message', this.el).html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n        },\r\n\r\n        /**\r\n         * Update view without complete rendering.\r\n         *\r\n         */\r\n        update: function () {\r\n            var selectors = this.options.selectors,\r\n                when_pending = this._velm.$(selectors.size + \",\" + selectors.cancel),\r\n                when_running = this._velm.$(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = this._velm.$(selectors.message + \",\" + selectors.clear);\r\n\r\n            if (this.model.isPending()) {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (this.model.isRunning()) {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (this.model.isDone() || this.model.isError()) {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Startup widget with binding events\r\n         * @override\r\n         *\r\n         */\r\n        _startup: function () {\r\n            var self = this;\r\n\r\n            // DOM events\r\n            this._velm.$(this.options.selectors.cancel).click(function(){\r\n                self.model.cancel();\r\n                self.collection.remove(self.model);\r\n            });\r\n            this._velm.$(this.options.selectors.clear).click(function(){\r\n                self.model.destroy();\r\n                self.collection.remove(self.model);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Compute data to be passed to the view.\r\n         *\r\n         */\r\n        computeData: function () {\r\n            return $.extend(this.getHelpers(), this.model.get('data'));\r\n        }\r\n    });\r\n\r\n\r\n    var Uploader =  Widget.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.uploader\",\r\n\r\n        options: {\r\n\r\n            uploadUrl: '/upload',\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : '.file-list',\r\n              nodata : \".file-list .no-data\",\r\n              pickFiles: '.file-picker',\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n\r\n            \t},\r\n\r\n            \ttemplate : null\r\n            }\r\n        },\r\n\r\n        state : {\r\n          files : FileItemCollection\r\n        },\r\n\r\n        /**\r\n         * Render the main part of upload manager.\r\n         *\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n\r\n\r\n            // Create the file list\r\n            var files = this.files(new FileItemCollection());\r\n\r\n            // Add add files handler\r\n            var filePicker = this._velm.$(this.options.selectors.pickFiles), self = this;\r\n\r\n            this.uploadProcess =  uploader(this._elm,{  //$.$(this.el).fileupload({\r\n                dataType: this.options.dataType,\r\n                url: this.options.uploadUrl,\r\n                formData: this.options.formData,\r\n                autoUpload: this.options.autoUpload,\r\n                singleFileUploads: true,\r\n                picker : filePicker,\r\n\r\n                'add' : function (e, data) {\r\n                    // Create an array in which the file objects\r\n                    // will be stored.\r\n                    data.uploadManagerFiles = [];\r\n\r\n                    // A file is added, process for each file.\r\n                    // Note: every times, the data.files array length is 1 because\r\n                    //       of \"singleFileUploads\" option.\r\n                    langx.each(data.files, function (index, file_data) {\r\n                        // Create the file object\r\n                        file_data.id = self.file_id++;\r\n                        var file = new FileItem({\r\n                            data: file_data,\r\n                            processor: data\r\n                        });\r\n\r\n                        // Add file in data\r\n                        data.uploadManagerFiles.push(file);\r\n\r\n                        // Trigger event\r\n                        //self.trigger('fileadd', file);\r\n                        // Add it to current list\r\n                        self.files.add(file);\r\n\r\n                        // Create the view\r\n                        self.renderFile(file);\r\n\r\n\r\n                    });\r\n                },\r\n                'progress' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('fileprogress', file, data);\r\n\r\n                        file.progress(progress);\r\n                    });\r\n                },\r\n\r\n                'fail' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        var error = \"Unknown error\";\r\n                        if (typeof data.errorThrown == \"string\") {\r\n                            error = data.errorThrown;\r\n                        } else if (typeof data.errorThrown == \"object\") {\r\n                            error = data.errorThrown.message;\r\n                        } else if (data.result) {\r\n                            if (data.result.error) {\r\n                                error = data.result.error;\r\n                            } else if (data.result.files && data.result.files[index] && data.result.files[index].error) {\r\n                                error = data.result.files[index].error;\r\n                            } else {\r\n                                error = \"Unknown remote error\";\r\n                            }\r\n                        }\r\n\r\n                        //self.trigger('filefail', file, error);\r\n                        file.fail(error);\r\n                    });\r\n                },\r\n\r\n                'done' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('filedone', file, data);\r\n                        file.done(data.result);\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            // Add upload process events handlers\r\n            this.bindProcessEvents();\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(this.options.selectors.cancelUploads).click(function(){\r\n                while (self.files.length) {\r\n                    self.files.at(0).cancel();\r\n                }\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(this.options.selectors.startUploads).click(function(){\r\n                self.files.forEach(function(file){\r\n                    file.start();\r\n                });\r\n            });\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            this._refresh({files:true});\r\n        \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n            var self = this;\r\n            function updateFileList()  {\r\n                var selectors = self.options.selectors,\r\n                    files = self.files();\r\n                var with_files_elements = self._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n                var without_files_elements = self._velm.$(selectors.nodata);\r\n                if (files.length > 0) {\r\n                    with_files_elements.removeClass('hidden');\r\n                    without_files_elements.addClass('hidden');\r\n                } else {\r\n                    with_files_elements.addClass('hidden');\r\n                    without_files_elements.removeClass('hidden');\r\n                }\r\n            }\r\n\r\n            if (updates[\"files\"]) {\r\n              updateFileList();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Render a file.\r\n         *\r\n         */\r\n        renderFile: function (file) {\r\n            var file_view = new FileItemWidget(langx.mixin({},this.options, {\r\n              model: file,\r\n              template : this.options.fileItem.template\r\n            }));\r\n            //this._velm.$(this.options.selectors.fileList).append(file_view.render());\r\n            file_view.attach(this._velm.$(this.options.selectors.fileList));\r\n        },\r\n\r\n        /**\r\n         * Bind events on the upload processor.\r\n         *\r\n         */\r\n        bindProcessEvents: function () {\r\n        }\r\n    });\r\n\r\n    return swt.Uploader = Uploader;\r\n});\r\n\ndefine('skylark-ui-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./Checkbox\",\r\n    \"./Combobox\",\r\n    \"./InputBox\",\r\n    \"./ListGroup\",\r\n    \"./Menu\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SelectList\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\",\r\n    \"./Uploader\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-ui-swt', ['skylark-ui-swt/main'], function (main) { return main; });\n\n"]}