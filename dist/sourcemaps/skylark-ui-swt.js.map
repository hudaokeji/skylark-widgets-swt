{"version":3,"sources":["skylark-ui-swt.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","datax","elmx","plugins","Map","swt","Widget","Plugin","inherit","klassName","_elmx","_construct","elm","options","isHtmlNode","this","_parse","overrided","_velm","_elm","_create","Object","defineProperty","value","state","_init","optionsAttr","data","options1","JSON","parse","template","Error","self","widgetClass","addClass","on","args","_refresh","_startup","updates","mapping","events","attributs","properties","styles","addon","categoryName","addonName","setting","_addons","addons","category","undefined","settings","clone","render","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","aria","name","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","css","prop","throb","params","attach","target","position","before","after","append","detach","remove","meta","ctor","apply","arguments","addStatePropMethod","prototype","pluginName","register","widgetName","collapse","Panel","toggler","body","$toggle","find","$body","$this","collpasePlugin","toggle","expand","toogle","full","unfull","toogleFull","close","panel_dom","dom","id","minimize","promise","then","fadeOut","Accordion","panel","panels","forEach","panelEl","push","_panels","_post","addPanel","$newPanel","$template","removeClass","hash","fadeIn","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","String","[object Object]","$el","hasClass","href","$fa_icon_left","length","$fa_icon_right","super","left","prepend","iconleft","iconright","Carousel","items","indicatorTemplate","slideTemplate","templates","container","indicators","item","slides","_bs_carousel","carousel","slideIndex","to","slideAction","prev","next","preventDefault","pos","pause","cycle","add","createIndicator","obj","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","cloneNode","title","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","getElementsByTagName","src","style","backgroundImage","addIndicator","index","indicatorContainer","list","appendChild","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","document","createElement","addSlide","resetSlides","empty","_Toggler","checked","isChecked","uncheck","check","CheckBox","selectors","chk","lbl","label","chkSelector","lblSelector","$chk","disabled","$lbl","evt","changed","$containerToggle","$label","$toggleContainer","setDisabledState","ComboBox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","predicate","visible","$dropMenu","each","i","$li","trim","substr","$element","$input","$button","dropdown","$inputGroupBtn","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","val","_destroy","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","txt","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","selectBySelector","selectByIndex","removeData","removeAttr","parent","trigger","synthetic","IS_NAVIGATIONAL","which","selected","$selected","previousKeyPress","extra","getValue","InputBox","multiline","is","tagName","attrs","subtype","type","_dom","_sync","ListGroup","multiSelect","multiTier","classes","active","itemSelector","_$items","veItem","query","has","not","doubleTapToGo","stopPropagation","location","toggleClass","siblings","findItem","valueOrIdx","isNumber","eq","oldValue","selectOneItem","right_to_left","popup","Menu","init","_options","hide_onmouseleave","icons","stopImmediatePropagation","contains","relatedTarget","clearTimeout","end","parentsUntil","addBack","_show_submenu","setTimeout","_execute","o","currentTarget","last","closest","first","prevAll","nextAll","a","click","_trigger","event_name","reference","element","x","position_x","y","position_y","_disabled","isFunction","action","call","is_callback","tmp","str","sep","separator_before","_class","shortcut","icon","indexOf","shortcut_label","submenu","separator_after","replace","xl","offset","top","w","h","height","dw","window","scrollLeft","dh","scrollTop","outerHeight","appendTo","is_visible","m","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$next","$numeric","checkCanAction","$elm","numeric","pageNo","parseInt","totalPageNoBtns","Math","min","begin","count","size","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","max","_vbar","start","slideDown","increase","tick","finish","slideUp","Radio","$radio","domNode","$container","ignoreVisibilityCheck","match","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","$repeater","$icon","buttonclicked","clearPending","activeSearch","destroy","search","searchText","clear","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","resize","key","fromCharCode","idx","charAt","off","itemChanged","newWidth","sizer","Boolean","TabStrip","header","tab","content","tabpane","$header","$tabs","$content","$tabpanes","tabEl","Toolbar","autoredraw","buttons","context","createToolbarItems","group","class","role","createButtonGroup","button","createButton","dropdown_group","dropdown_button","dropdown_list","dropdown_option","dropdown_option_li","createDrop","input_group","input_element","input_prefix","prefix","input_sufix","sufix","inputType","createInput","fn","toolbar","uploader","FileItem","Stateful","isPending","submit","cancel","abort","progress","fail","error","done","result","getState","isRunning","isDone","isError","FileItemCollection","FileItemWidget","className","fileName","fileSize","message","processUploadMsg","doneMsg","model","updateProgress","hasFailed","hasDone","update","bindEvents","percent","loaded","total","progressHTML","getHelpers","displaySize","el","when_pending","when_running","when_done","collection","computeData","extend","Uploader","uploadUrl","autoUpload","fileList","nodata","pickFiles","startUploads","cancelUploads","dataType","fileItem","files","filePicker","uploadProcess","url","formData","singleFileUploads","picker","uploadManagerFiles","file_data","file_id","file","processor","renderFile","errorThrown","bindProcessEvents","at","with_files_elements","without_files_elements","file_view","main"],"mappings":"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","file":"../skylark-ui-swt.js","sourcesContent":["define('skylark-ui-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-data-collection/Map\",\r\n  \"./swt\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,swt){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new Map()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(categoryName,addonName,setting) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      if (setting === undefined) {\r\n        return category[addonName] || null;      \r\n      } else {\r\n        category[addonName] = setting;\r\n        return this;\r\n      }\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn swt.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-ui-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-ui-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-ui-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-ui-swt/CheckBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var CheckBox =  _Toggler.inherit({\r\n    klassName: \"CheckBox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.CheckBox = CheckBox;\r\n});\r\n\ndefine('skylark-ui-swt/ComboBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-ui-swt/InputBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar InputBox =  Widget.inherit({\r\n\t\tklassName: \"InputBox\",\r\n\r\n    pluginName: \"lark.inputbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn swt.InputBox = InputBox;\r\n});\r\n\r\n\n define('skylark-ui-swt/ListGroup',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var ListGroup = Widget.inherit({\r\n        klassName : \"ListGroup\",\r\n\r\n        pluginName : \"lark.listgroup\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n          \tmultiTier : false,\r\n          \ttoggle : false,\r\n          \tclasses : {\r\n            \tactive : \"active\"\r\n          \t},\r\n          \tselectors : {\r\n            \titem : \".list-group-item\"\r\n          \t},\r\n          \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                obj = this;\r\n\r\n            //if (this.isIE() <= 9) {\r\n            //    $this.find(\"li.active\").has(\"ul\").children(\"ul\").collapse(\"show\");\r\n            //    $this.find(\"li\").not(\".active\").has(\"ul\").children(\"ul\").collapse(\"hide\");\r\n            //} else {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"ul\").addClass(\"collapse in\");\r\n                $this.query(\"li\").not(\".active\").has(\"ul\").children(\"ul\").addClass(\"collapse\");\r\n            //}\r\n\r\n            //add the \"doubleTapToGo\" class to active items if needed\r\n            if (obj.options.doubleTapToGo) {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"a\").addClass(\"doubleTapToGo\");\r\n            }\r\n\r\n            $this.query(\"li\").has(\"ul\").children(\"a\").on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                e.preventDefault();\r\n\r\n                //Do we need to enable the double tap\r\n                if (obj.options.doubleTapToGo) {\r\n\r\n                    //if we hit a second time on the link and the href is valid, navigate to that url\r\n                    if (obj.doubleTapToGo($(this)) && $(this).attr(\"href\") !== \"#\" && $(this).attr(\"href\") !== \"\") {\r\n                        e.stopPropagation();\r\n                        document.location = $(this).attr(\"href\");\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                $(this).parent(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                if ($toggle) {\r\n                    $(this).parent(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                }\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return ListGroup;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\t\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = swt.Menu = Widget.inherit({\r\n        klassName: \"Menu\",\r\n\r\n\t    pluginName : \"lark.menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-ui-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-ui-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = Widget.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n\treturn \tswt.SearchBox = SearchBox;\n});\n\ndefine('skylark-ui-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-ui-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    return TabStrip;\r\n\r\n});\ndefine('skylark-ui-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\tvar Toolbar = swt.Toolbar = Widget.inherit({\r\n        klassName: \"Toolbar\",\r\n\r\n\t    pluginName : \"lark.toolbar\",\r\n\r\n        init : function(elm,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\tautoredraw: true,\r\n\t\t\t\t\tbuttons: {},\r\n\t\t\t\t\tcontext: {},\r\n\t\t\t\t\tlist: [],\r\n\t\t\t\t\tshow: true,\r\n\t\t\t},options);\r\n\r\n\r\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\r\n\t\t\tthis.$el = $(elm).append(this.$container);\r\n\r\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n\r\n\t\trender : function () {\r\n\t\t\tfunction createToolbarItems(items,container) {\r\n\t\t\t\tlangx.each(items,function(i,item)  {\r\n\t\t\t\t\tvar type = item.type;\r\n\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\ttype = \"button\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase \"buttongroup\":\r\n\t\t\t\t\t\t\t// Create an element with the HTML\r\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\tcreateButton(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dropdown\":\r\n\t\t\t\t\t\tcase \"dropup\":\r\n\t\t\t\t\t\t\tcreateDrop(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\tcreateInput(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButtonGroup(item,container) {\r\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\r\n\t\t\t\tcontainer.append(group);\r\n\t\t\t\tcreateToolbarItems(item.items,group);\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButton(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\r\n\t\t\t\t\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in attrs) {\r\n\t\t\t\t\tbutton.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.attr(attrs);\r\n\r\n\t\t\t\t// Add button to the group\r\n\t\t\t\tcontainer.append(button);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createDrop(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\r\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\r\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\r\n\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\tif(item.type === \"dropup\") {\r\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in item) {\r\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\t\t\t\t// Add caret\r\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\r\n\r\n\t\t\t\t// Add list of options\r\n\t\t\t\tfor(var i in item.list) {\r\n\t\t\t\t\tvar dropdown_option = item.list[i];\r\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\r\n\r\n\t\t\t\t\t// If has icon\r\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If has text\r\n\t\t\t\t\tif (\"text\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Set attributes\r\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\r\n\r\n\t\t\t\t\t// Add to dropdown list\r\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tdropdown_group.attr(attrs);\r\n\r\n\t\t\t\tdropdown_group.append(dropdown_button);\r\n\t\t\t\tdropdown_group.append(dropdown_list);\r\n\t\t\t\tcontainer.append(dropdown_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createInput(item,container) {\r\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\r\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\r\n\t\t\t\t\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// Add prefix addon\r\n\t\t\t\tif(\"prefix\" in item) {\r\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_prefix.html(item.prefix);\r\n\t\t\t\t\tinput_group.append(input_prefix);\r\n\r\n\t\t\t\t\tdelete attrs.prefix;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add input\r\n\t\t\t\tinput_group.append(input_element);\r\n\r\n\t\t\t\t// Add sufix addon\r\n\t\t\t\tif(\"sufix\" in item) {\r\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_sufix.html(item.sufix);\r\n\t\t\t\t\tinput_group.append(input_sufix);\r\n\r\n\t\t\t\t\tdelete attrs.sufix;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrs.type = attrs.inputType;\r\n\r\n\t\t\t\tdelete attrs.inputType;\r\n\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tinput_element.attr(attrs);\r\n\r\n\t\t\t\tcontainer.append(input_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this._options.items;\r\n\t\t\tif (items) {\r\n\t\t\t\tcreateToolbarItems(items,this.$container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t$.fn.toolbar = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.each(function () {\r\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\r\n\t\t});\r\n\t};\r\n\r\n\treturn Toolbar;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Uploader',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-data-collection/ArrayList\",\r\n  \"skylark-storages-diskfs/uploader\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ArrayList,uploader,swt,Widget){\r\n\r\n    /**\r\n     * This model represents a file.\r\n     *\r\n     */\r\n    var FileItem = langx.Stateful.inherit({\r\n        state: \"pending\",\r\n\r\n        /**\r\n         * Start upload.\r\n         *\r\n         */\r\n        start: function ()  {\r\n            if (this.isPending()) {\r\n                this.get('processor').submit();\r\n                this.state = \"running\";\r\n\r\n                // Dispatch event\r\n                this.trigger('filestarted', this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancel a file upload.\r\n         *\r\n         */\r\n        cancel: function () {\r\n            this.get('processor').abort();\r\n            this.destroy();\r\n\r\n            // Dispatch event\r\n            this.state = \"canceled\";\r\n            this.trigger('filecanceled', this);\r\n        },\r\n\r\n        /**\r\n         * Notify file that progress updated.\r\n         *\r\n         */\r\n        progress: function (data)  {\r\n            // Dispatch event\r\n            this.trigger('fileprogress', this.get('processor').progress());\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload failed.\r\n         *\r\n         */\r\n        fail: function (error)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filefailed', error);\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload is done.\r\n         *\r\n         */\r\n        done: function (result)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filedone', result);\r\n        },\r\n\r\n        /**\r\n         * Is this file pending to be uploaded ?\r\n         *\r\n         */\r\n        isPending: function ()  {\r\n            return this.getState() == \"pending\";\r\n        },\r\n\r\n        /**\r\n         * Is this file currently uploading ?\r\n         *\r\n         */\r\n        isRunning: function () {\r\n            return this.getState() == \"running\";\r\n        },\r\n\r\n        /**\r\n         * Is this file uploaded ?\r\n         *\r\n         */\r\n        isDone: function () {\r\n            return this.getState() == \"done\";\r\n        },\r\n\r\n        /**\r\n         * Is this upload in error ?\r\n         *\r\n         */\r\n        isError: function () {\r\n            return this.getState() == \"error\" || this.getState == \"canceled\";\r\n        },\r\n\r\n        /**\r\n         * Get the file state.\r\n         *\r\n         */\r\n        getState: function () {\r\n            return this.state;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This is a file collection, used to manage the selected\r\n     * and processing files.\r\n     *\r\n     */\r\n    var FileItemCollection = ArrayList.inherit({\r\n        item: FileItem\r\n    });\r\n\r\n    /**\r\n     * A file view, which is the view that manage a single file\r\n     * process in the upload manager.\r\n     *\r\n     */\r\n    var FileItemWidget = Widget.inherit({\r\n        className: 'upload-manager-file row',\r\n\r\n        options : {\r\n          selectors : {\r\n            fileName : \".name\",\r\n            fileSize : \".size\",\r\n            cancel : \".cancel\",\r\n            clear : \".clear\",\r\n            progress : \".progress\",\r\n            message : \".message\"\r\n          }\r\n        },\r\n\r\n        state : {\r\n          fileName : String,\r\n          fileSize : Number\r\n        },\r\n\r\n        _init: function () {\r\n            this.processUploadMsg = this.options.processUploadMsg;\r\n            this.doneMsg = this.options.doneMsg;\r\n\r\n            this.fileName(this.options.fileName);\r\n            this.fileSize(this.options.fileSize);\r\n\r\n            // Bind model events\r\n            this.model.on('destroy', this.close, this);\r\n            this.model.on('fileprogress', this.updateProgress, this);\r\n            this.model.on('filefailed', this.hasFailed, this);\r\n            this.model.on('filedone', this.hasDone, this);\r\n\r\n            // In each case, update view\r\n            this.model.on('all', this.update, this);\r\n\r\n            // Bind events\r\n            this.bindEvents();\r\n\r\n            // Update elements\r\n            this.update();            \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n\r\n        },\r\n\r\n        /**\r\n         * Update upload progress.\r\n         *\r\n         */\r\n        updateProgress: function (progress) {\r\n            var percent = parseInt(progress.loaded / progress.total * 100, 10);\r\n            var progressHTML = this.getHelpers().displaySize(progress.loaded)+' of '+this.getHelpers().displaySize(progress.total);\r\n            if (percent >= 100 && this.processUploadMsg) { progressHTML = this.processUploadMsg; }\r\n\r\n            $('.progress', this.el)\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n        },\r\n\r\n        /**\r\n         * File upload has failed.\r\n         *\r\n         */\r\n        hasFailed: function (error){\r\n            $('.message', this.el).html('<i class=\"icon-error\"></i> '+error);\r\n        },\r\n\r\n        /**\r\n         * File upload is done.\r\n         *\r\n         */\r\n        hasDone: function (result){\r\n            $('.message', this.el).html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n        },\r\n\r\n        /**\r\n         * Update view without complete rendering.\r\n         *\r\n         */\r\n        update: function () {\r\n            var selectors = this.options.selectors,\r\n                when_pending = this._velm.$(selectors.size + \",\" + selectors.cancel),\r\n                when_running = this._velm.$(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = this._velm.$(selectors.message + \",\" + selectors.clear);\r\n\r\n            if (this.model.isPending()) {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (this.model.isRunning()) {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (this.model.isDone() || this.model.isError()) {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Startup widget with binding events\r\n         * @override\r\n         *\r\n         */\r\n        _startup: function () {\r\n            var self = this;\r\n\r\n            // DOM events\r\n            this._velm.$(this.options.selectors.cancel).click(function(){\r\n                self.model.cancel();\r\n                self.collection.remove(self.model);\r\n            });\r\n            this._velm.$(this.options.selectors.clear).click(function(){\r\n                self.model.destroy();\r\n                self.collection.remove(self.model);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Compute data to be passed to the view.\r\n         *\r\n         */\r\n        computeData: function () {\r\n            return $.extend(this.getHelpers(), this.model.get('data'));\r\n        }\r\n    });\r\n\r\n\r\n    var Uploader =  Widget.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.uploader\",\r\n\r\n        options: {\r\n\r\n            uploadUrl: '/upload',\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : '.file-list',\r\n              nodata : \".file-list .no-data\",\r\n              pickFiles: '.file-picker',\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n\r\n            \t},\r\n\r\n            \ttemplate : null\r\n            }\r\n        },\r\n\r\n        state : {\r\n          files : FileItemCollection\r\n        },\r\n\r\n        /**\r\n         * Render the main part of upload manager.\r\n         *\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n\r\n\r\n            // Create the file list\r\n            var files = this.files(new FileItemCollection());\r\n\r\n            // Add add files handler\r\n            var filePicker = this._velm.$(this.options.selectors.pickFiles), self = this;\r\n\r\n            this.uploadProcess =  uploader(this._elm,{  //$.$(this.el).fileupload({\r\n                dataType: this.options.dataType,\r\n                url: this.options.uploadUrl,\r\n                formData: this.options.formData,\r\n                autoUpload: this.options.autoUpload,\r\n                singleFileUploads: true,\r\n                picker : filePicker,\r\n\r\n                'add' : function (e, data) {\r\n                    // Create an array in which the file objects\r\n                    // will be stored.\r\n                    data.uploadManagerFiles = [];\r\n\r\n                    // A file is added, process for each file.\r\n                    // Note: every times, the data.files array length is 1 because\r\n                    //       of \"singleFileUploads\" option.\r\n                    langx.each(data.files, function (index, file_data) {\r\n                        // Create the file object\r\n                        file_data.id = self.file_id++;\r\n                        var file = new FileItem({\r\n                            data: file_data,\r\n                            processor: data\r\n                        });\r\n\r\n                        // Add file in data\r\n                        data.uploadManagerFiles.push(file);\r\n\r\n                        // Trigger event\r\n                        //self.trigger('fileadd', file);\r\n                        // Add it to current list\r\n                        self.files.add(file);\r\n\r\n                        // Create the view\r\n                        self.renderFile(file);\r\n\r\n\r\n                    });\r\n                },\r\n                'progress' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('fileprogress', file, data);\r\n\r\n                        file.progress(progress);\r\n                    });\r\n                },\r\n\r\n                'fail' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        var error = \"Unknown error\";\r\n                        if (typeof data.errorThrown == \"string\") {\r\n                            error = data.errorThrown;\r\n                        } else if (typeof data.errorThrown == \"object\") {\r\n                            error = data.errorThrown.message;\r\n                        } else if (data.result) {\r\n                            if (data.result.error) {\r\n                                error = data.result.error;\r\n                            } else if (data.result.files && data.result.files[index] && data.result.files[index].error) {\r\n                                error = data.result.files[index].error;\r\n                            } else {\r\n                                error = \"Unknown remote error\";\r\n                            }\r\n                        }\r\n\r\n                        //self.trigger('filefail', file, error);\r\n                        file.fail(error);\r\n                    });\r\n                },\r\n\r\n                'done' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('filedone', file, data);\r\n                        file.done(data.result);\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            // Add upload process events handlers\r\n            this.bindProcessEvents();\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(this.options.selectors.cancelUploads).click(function(){\r\n                while (self.files.length) {\r\n                    self.files.at(0).cancel();\r\n                }\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(this.options.selectors.startUploads).click(function(){\r\n                self.files.forEach(function(file){\r\n                    file.start();\r\n                });\r\n            });\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            this._refresh({files:true});\r\n        \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n            var self = this;\r\n            function updateFileList()  {\r\n                var selectors = self.options.selectors,\r\n                    files = self.files();\r\n                var with_files_elements = self._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n                var without_files_elements = self._velm.$(selectors.nodata);\r\n                if (files.length > 0) {\r\n                    with_files_elements.removeClass('hidden');\r\n                    without_files_elements.addClass('hidden');\r\n                } else {\r\n                    with_files_elements.addClass('hidden');\r\n                    without_files_elements.removeClass('hidden');\r\n                }\r\n            }\r\n\r\n            if (updates[\"files\"]) {\r\n              updateFileList();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Render a file.\r\n         *\r\n         */\r\n        renderFile: function (file) {\r\n            var file_view = new FileItemWidget(langx.mixin({},this.options, {\r\n              model: file,\r\n              template : this.options.fileItem.template\r\n            }));\r\n            //this._velm.$(this.options.selectors.fileList).append(file_view.render());\r\n            file_view.attach(this._velm.$(this.options.selectors.fileList));\r\n        },\r\n\r\n        /**\r\n         * Bind events on the upload processor.\r\n         *\r\n         */\r\n        bindProcessEvents: function () {\r\n        }\r\n    });\r\n\r\n    return swt.Uploader = Uploader;\r\n});\r\n\ndefine('skylark-ui-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./CheckBox\",\r\n    \"./ComboBox\",\r\n    \"./InputBox\",\r\n    \"./ListGroup\",\r\n    \"./Menu\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SearchBox\",\r\n    \"./SelectList\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\",\r\n    \"./Uploader\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-ui-swt', ['skylark-ui-swt/main'], function (main) { return main; });\n\n"]}