{"version":3,"sources":["skylark-ui-swt.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","skylarkjs","skylark","langx","browser","eventer","noder","geom","$","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","e","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","test","html","text","mixin","datax","elmx","plugins","Map","Widget","Plugin","inherit","klassName","_elmx","_construct","elm","options","isHtmlNode","this","_parse","overrided","_elm","_create","_velm","state","_init","optionsAttr","data","options1","JSON","parse","self","widgetClass","addClass","on","_refresh","_post","updates","mapping","events","attributs","properties","styles","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","aria","name","value","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","css","prop","detach","remove","meta","addStatePropMethod","ctor","prototype","undefined","arguments","pluginName","register","collapse","Panel","toggler","body","$toggle","find","$body","$this","collpasePlugin","toggle","expand","toogle","full","unfull","toogleFull","close","panel_dom","dom","minimize","promise","then","fadeOut","Accordion","panel","template","panels","panelEl","_panels","addPanel","$newPanel","$template","clone","removeClass","hash","append","fadeIn","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","String","$el","hasClass","href","target","$fa_icon_left","$fa_icon_right","left","prepend","iconleft","iconright","Carousel","_bs_carousel","carousel","slideIndex","to","slideAction","prev","next","preventDefault","pos","pause","cycle","add","_Toggler","checked","isChecked","uncheck","check","Checkbox","selectors","chk","lbl","label","chkSelector","lblSelector","$chk","disabled","$lbl","_attach","evt","setCheckedState","$label","$containerToggle","$toggleContainer","setDisabledState","changed","Combobox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","visible","$dropMenu","each","$li","trim","substr","$element","$input","$button","dropdown","$inputGroupBtn","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","val","_destroy","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","txt","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","selectBySelector","selectByIndex","index","removeData","removeAttr","parent","trigger","synthetic","ENTER","ESC","LEFT","UP","RIGHT","DOWN","IS_NAVIGATIONAL","which","selected","$selected","previousKeyPress","extra","getValue","right_to_left","popup","Menu","init","_options","hide_onmouseleave","icons","stopImmediatePropagation","contains","relatedTarget","clearTimeout","end","siblings","parentsUntil","addBack","_show_submenu","setTimeout","t","_execute","o","type","currentTarget","last","closest","first","prevAll","nextAll","a","not","click","render","_trigger","event_name","document","reference","element","position","x","position_x","y","position_y","_disabled","isFunction","action","call","is_callback","tmp","str","sep","separator_before","_class","shortcut","title","icon","indexOf","shortcut_label","submenu","separator_after","replace","xl","offset","top","w","h","height","dw","window","scrollLeft","dh","scrollTop","cond","outerHeight","appendTo","is_visible","m","Pagination","tagName","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","checkCanAction","$elm","is","$first","$prev","$last","$next","$numeric","numeric","pageNo","parseInt","changePageNoBtns","totalPageNoBtns","Math","min","begin","count","size","visibles","$btn","eq","changeLabeldBtns","Progress","bar","max","_vbar","start","slideDown","increase","tick","finish","slideUp","Radio","$radio","domNode","logError","$container","ignoreVisibilityCheck","match","containerSelector","setInitialState","_sync","resetGroup","$radios","groupName","TabStrip","header","tab","content","tabpane","$header","$tabs","$content","$tabpanes","idx","tabEl","Textbox","multiline","attrs","subtype","_dom","createElement","Toolbar","autoredraw","buttons","context","createToolbarItems","container","createButtonGroup","createButton","createDrop","createInput","group","class","role","button","dropdown_group","dropdown_button","dropdown_list","dropdown_option","dropdown_option_li","input_group","input_element","input_prefix","prefix","input_sufix","sufix","inputType","fn","toolbar","main"],"mappings":"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","file":"../skylark-ui-swt.js","sourcesContent":["define('skylark-ui-swt/ui',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-utils-collection/Map\",\r\n  \"./ui\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,ui){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._elm = this._create();\r\n        }\r\n        this._velm = elmx(this._elm);\r\n        this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        //TODO:     \r\n    },\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      //TODO:\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Post widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _post : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    html: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn ui.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,ui,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-ui-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./ui\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,ui,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this._velm.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this._velm.collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return ui.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-ui-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,$,ui,Widget){\r\n\r\n\tvar Button = Widget.inherit({\r\n\t\tklassName : \"Button\",\r\n\r\n    pluginName : \"lark.button\",\r\n\r\n\t\toptions : {\r\n\t\t\tbtnSize : \"lg\",\r\n      btnType : \"default\",\r\n      leftIcon : null,\r\n      rightIcon : null,\r\n      topIcon : null, // TODO\r\n      bottomIcon : null //TODO\r\n\t\t},\r\n\r\n    state : {\r\n      \"text\" : String\r\n    },\r\n\r\n    _parse: function (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    },\r\n\r\n    _refresh: function (updates) {\r\n      this.overrided(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  });\r\n\r\n  return ui.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./ui\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, ui, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        }\r\n    });\r\n\r\n    return ui.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-ui-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n  var _Toggler = ui._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-ui-swt/Checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,_Toggler){\r\n\r\n  var Checkbox =  _Toggler.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n    _attach : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn ui.Checkbox = Checkbox;\r\n});\r\n\ndefine('skylark-ui-swt/Combobox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Combobox = Widget.inherit({\r\n\t\tklassName: \"Combobox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn ui.Combobox = Combobox;\r\n});\r\n\ndefine('skylark-ui-swt/Menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\t\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = ui.Menu = Widget.inherit({\r\n        klassName: \"Menu\",\r\n\r\n\t    pluginName : \"lark.menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = ui.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-ui-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = ui.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-ui-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,_Toggler){\r\n\r\n  var Radio = ui.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./ui\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, ui, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    return TabStrip;\r\n\r\n});\ndefine('skylark-ui-swt/Textbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar Textbox = ui.Textbox = Widget.inherit({\r\n\t\tklassName: \"Textbox\",\r\n\r\n    pluginName: \"lark.textbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn Textbox;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\tvar Toolbar = ui.Toolbar = Widget.inherit({\r\n        klassName: \"Toolbar\",\r\n\r\n\t    pluginName : \"lark.toolbar\",\r\n\r\n        init : function(elm,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\tautoredraw: true,\r\n\t\t\t\t\tbuttons: {},\r\n\t\t\t\t\tcontext: {},\r\n\t\t\t\t\tlist: [],\r\n\t\t\t\t\tshow: true,\r\n\t\t\t},options);\r\n\r\n\r\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\r\n\t\t\tthis.$el = $(elm).append(this.$container);\r\n\r\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n\r\n\t\trender : function () {\r\n\t\t\tfunction createToolbarItems(items,container) {\r\n\t\t\t\tlangx.each(items,function(i,item)  {\r\n\t\t\t\t\tvar type = item.type;\r\n\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\ttype = \"button\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase \"buttongroup\":\r\n\t\t\t\t\t\t\t// Create an element with the HTML\r\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\tcreateButton(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dropdown\":\r\n\t\t\t\t\t\tcase \"dropup\":\r\n\t\t\t\t\t\t\tcreateDrop(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\tcreateInput(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButtonGroup(item,container) {\r\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\r\n\t\t\t\tcontainer.append(group);\r\n\t\t\t\tcreateToolbarItems(item.items,group);\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButton(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\r\n\t\t\t\t\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in attrs) {\r\n\t\t\t\t\tbutton.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.attr(attrs);\r\n\r\n\t\t\t\t// Add button to the group\r\n\t\t\t\tcontainer.append(button);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createDrop(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\r\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\r\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\r\n\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\tif(item.type === \"dropup\") {\r\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in item) {\r\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\t\t\t\t// Add caret\r\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\r\n\r\n\t\t\t\t// Add list of options\r\n\t\t\t\tfor(var i in item.list) {\r\n\t\t\t\t\tvar dropdown_option = item.list[i];\r\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\r\n\r\n\t\t\t\t\t// If has icon\r\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If has text\r\n\t\t\t\t\tif (\"text\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Set attributes\r\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\r\n\r\n\t\t\t\t\t// Add to dropdown list\r\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tdropdown_group.attr(attrs);\r\n\r\n\t\t\t\tdropdown_group.append(dropdown_button);\r\n\t\t\t\tdropdown_group.append(dropdown_list);\r\n\t\t\t\tcontainer.append(dropdown_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createInput(item,container) {\r\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\r\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\r\n\t\t\t\t\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// Add prefix addon\r\n\t\t\t\tif(\"prefix\" in item) {\r\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_prefix.html(item.prefix);\r\n\t\t\t\t\tinput_group.append(input_prefix);\r\n\r\n\t\t\t\t\tdelete attrs.prefix;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add input\r\n\t\t\t\tinput_group.append(input_element);\r\n\r\n\t\t\t\t// Add sufix addon\r\n\t\t\t\tif(\"sufix\" in item) {\r\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_sufix.html(item.sufix);\r\n\t\t\t\t\tinput_group.append(input_sufix);\r\n\r\n\t\t\t\t\tdelete attrs.sufix;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrs.type = attrs.inputType;\r\n\r\n\t\t\t\tdelete attrs.inputType;\r\n\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tinput_element.attr(attrs);\r\n\r\n\t\t\t\tcontainer.append(input_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this._options.items;\r\n\t\t\tif (items) {\r\n\t\t\t\tcreateToolbarItems(items,this.$container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t$.fn.toolbar = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.each(function () {\r\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\r\n\t\t});\r\n\t};\r\n\r\n\treturn Toolbar;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/main',[\r\n    \"./ui\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./Checkbox\",\r\n    \"./Combobox\",\r\n    \"./Menu\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./TabStrip\",\r\n    \"./Textbox\",\r\n    \"./Toolbar\"\r\n/*    \r\n    \"./checkbox\",\r\n    \"./combobox\",\r\n    \"./datepicker\",\r\n    \"./dropdown-autoflip\",\r\n    \"./infinite-scroll\",\r\n    \"./loader\",\r\n    \"./menu\",\r\n    \"./picker\",\r\n    \"./pillbox\",\r\n    \"./placard\",\r\n    \"./radio\",\r\n    \"./scheduler\",\r\n    \"./search\",\r\n    \"./selectlist\",\r\n    \"./spinbox\",\r\n    \"./toolbar\",\r\n    \"./wizard\"\r\n*/\r\n], function(ui) {\r\n    return ui;\r\n});\ndefine('skylark-ui-swt', ['skylark-ui-swt/main'], function (main) { return main; });\n\n"]}