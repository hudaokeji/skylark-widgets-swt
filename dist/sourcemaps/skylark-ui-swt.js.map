{"version":3,"sources":["skylark-ui-swt.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","datax","elmx","plugins","Map","swt","Widget","Plugin","inherit","klassName","_elmx","_construct","elm","options","isHtmlNode","this","_parse","overrided","_velm","_elm","_create","Object","defineProperty","value","state","_init","optionsAttr","data","options1","JSON","parse","template","Error","self","widgetClass","addClass","on","args","_refresh","_startup","updates","mapping","events","attributs","properties","styles","render","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","aria","name","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","css","prop","attach","target","position","before","after","append","detach","remove","meta","ctor","apply","arguments","addStatePropMethod","prototype","undefined","pluginName","register","widgetName","collapse","Panel","toggler","body","$toggle","find","$body","$this","collpasePlugin","toggle","expand","toogle","full","unfull","toogleFull","close","panel_dom","dom","id","minimize","promise","then","fadeOut","Accordion","panel","panels","forEach","panelEl","push","_panels","_post","addPanel","$newPanel","$template","clone","removeClass","hash","fadeIn","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","String","[object Object]","$el","hasClass","href","$fa_icon_left","length","$fa_icon_right","super","left","prepend","iconleft","iconright","Carousel","items","indicatorTemplate","slideTemplate","templates","container","indicators","item","slides","_bs_carousel","carousel","slideIndex","to","slideAction","prev","next","preventDefault","pos","pause","cycle","add","createIndicator","obj","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","cloneNode","title","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","getElementsByTagName","src","style","backgroundImage","addIndicator","index","indicatorContainer","list","appendChild","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","document","createElement","addSlide","resetSlides","empty","_Toggler","checked","isChecked","uncheck","check","Checkbox","selectors","chk","lbl","label","chkSelector","lblSelector","$chk","disabled","$lbl","evt","changed","$containerToggle","$label","$toggleContainer","setDisabledState","Combobox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","predicate","visible","$dropMenu","each","i","$li","trim","substr","$element","$input","$button","dropdown","$inputGroupBtn","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","val","_destroy","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","txt","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","selectBySelector","selectByIndex","removeData","removeAttr","parent","trigger","synthetic","IS_NAVIGATIONAL","which","selected","$selected","previousKeyPress","extra","getValue","InputBox","multiline","is","tagName","attrs","subtype","type","_dom","_sync","ListGroup","multiSelect","multiTier","classes","active","itemSelector","_$items","veItem","query","has","not","doubleTapToGo","stopPropagation","location","toggleClass","siblings","findItem","valueOrIdx","isNumber","eq","oldValue","selectOneItem","right_to_left","popup","Menu","init","_options","hide_onmouseleave","icons","stopImmediatePropagation","contains","relatedTarget","clearTimeout","end","parentsUntil","addBack","_show_submenu","setTimeout","_execute","o","currentTarget","last","closest","first","prevAll","nextAll","a","click","_trigger","event_name","reference","element","x","position_x","y","position_y","_disabled","isFunction","action","call","is_callback","tmp","str","sep","separator_before","_class","shortcut","icon","indexOf","shortcut_label","submenu","separator_after","replace","xl","offset","top","w","h","height","dw","window","scrollLeft","dh","scrollTop","outerHeight","appendTo","is_visible","m","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$next","$numeric","checkCanAction","$elm","numeric","pageNo","parseInt","totalPageNoBtns","Math","min","begin","count","size","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","max","_vbar","start","slideDown","increase","tick","finish","slideUp","Radio","$radio","domNode","$container","ignoreVisibilityCheck","match","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","resize","key","fromCharCode","idx","charAt","off","destroy","itemChanged","newWidth","sizer","Boolean","TabStrip","header","tab","content","tabpane","$header","$tabs","$content","$tabpanes","tabEl","Toolbar","autoredraw","buttons","context","createToolbarItems","group","class","role","createButtonGroup","button","createButton","dropdown_group","dropdown_button","dropdown_list","dropdown_option","dropdown_option_li","createDrop","input_group","input_element","input_prefix","prefix","input_sufix","sufix","inputType","createInput","fn","toolbar","uploader","FileItem","Stateful","isPending","submit","cancel","abort","progress","fail","error","done","result","getState","isRunning","isDone","isError","FileItemCollection","FileItemWidget","className","fileName","fileSize","clear","message","processUploadMsg","doneMsg","model","updateProgress","hasFailed","hasDone","update","bindEvents","percent","loaded","total","progressHTML","getHelpers","displaySize","el","when_pending","when_running","when_done","collection","computeData","extend","Uploader","uploadUrl","autoUpload","fileList","nodata","pickFiles","startUploads","cancelUploads","dataType","fileItem","files","filePicker","uploadProcess","url","formData","singleFileUploads","picker","uploadManagerFiles","file_data","file_id","file","processor","renderFile","errorThrown","bindProcessEvents","at","with_files_elements","without_files_elements","file_view","main"],"mappings":"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","file":"../skylark-ui-swt.js","sourcesContent":["define('skylark-ui-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-utils-collection/Map\",\r\n  \"./swt\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,swt){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new Map()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn swt.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-ui-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-ui-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-ui-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-ui-swt/Checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Checkbox =  _Toggler.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.Checkbox = Checkbox;\r\n});\r\n\ndefine('skylark-ui-swt/Combobox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Combobox = Widget.inherit({\r\n\t\tklassName: \"Combobox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.Combobox = Combobox;\r\n});\r\n\ndefine('skylark-ui-swt/InputBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar InputBox =  Widget.inherit({\r\n\t\tklassName: \"InputBox\",\r\n\r\n    pluginName: \"lark.inputbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn swt.InputBox = InputBox;\r\n});\r\n\r\n\n define('skylark-ui-swt/ListGroup',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var ListGroup = Widget.inherit({\r\n        klassName : \"ListGroup\",\r\n\r\n        pluginName : \"lark.listgroup\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n          \tmultiTier : false,\r\n          \ttoggle : false,\r\n          \tclasses : {\r\n            \tactive : \"active\"\r\n          \t},\r\n          \tselectors : {\r\n            \titem : \".list-group-item\"\r\n          \t},\r\n          \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                obj = this;\r\n\r\n            //if (this.isIE() <= 9) {\r\n            //    $this.find(\"li.active\").has(\"ul\").children(\"ul\").collapse(\"show\");\r\n            //    $this.find(\"li\").not(\".active\").has(\"ul\").children(\"ul\").collapse(\"hide\");\r\n            //} else {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"ul\").addClass(\"collapse in\");\r\n                $this.query(\"li\").not(\".active\").has(\"ul\").children(\"ul\").addClass(\"collapse\");\r\n            //}\r\n\r\n            //add the \"doubleTapToGo\" class to active items if needed\r\n            if (obj.options.doubleTapToGo) {\r\n                $this.query(\"li.active\").has(\"ul\").children(\"a\").addClass(\"doubleTapToGo\");\r\n            }\r\n\r\n            $this.query(\"li\").has(\"ul\").children(\"a\").on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                e.preventDefault();\r\n\r\n                //Do we need to enable the double tap\r\n                if (obj.options.doubleTapToGo) {\r\n\r\n                    //if we hit a second time on the link and the href is valid, navigate to that url\r\n                    if (obj.doubleTapToGo($(this)) && $(this).attr(\"href\") !== \"#\" && $(this).attr(\"href\") !== \"\") {\r\n                        e.stopPropagation();\r\n                        document.location = $(this).attr(\"href\");\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                $(this).parent(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                if ($toggle) {\r\n                    $(this).parent(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                }\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return ListGroup;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\t\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = swt.Menu = Widget.inherit({\r\n        klassName: \"Menu\",\r\n\r\n\t    pluginName : \"lark.menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-ui-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-ui-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-ui-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    return TabStrip;\r\n\r\n});\ndefine('skylark-ui-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\tvar Toolbar = swt.Toolbar = Widget.inherit({\r\n        klassName: \"Toolbar\",\r\n\r\n\t    pluginName : \"lark.toolbar\",\r\n\r\n        init : function(elm,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\tautoredraw: true,\r\n\t\t\t\t\tbuttons: {},\r\n\t\t\t\t\tcontext: {},\r\n\t\t\t\t\tlist: [],\r\n\t\t\t\t\tshow: true,\r\n\t\t\t},options);\r\n\r\n\r\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\r\n\t\t\tthis.$el = $(elm).append(this.$container);\r\n\r\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n\r\n\t\trender : function () {\r\n\t\t\tfunction createToolbarItems(items,container) {\r\n\t\t\t\tlangx.each(items,function(i,item)  {\r\n\t\t\t\t\tvar type = item.type;\r\n\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\ttype = \"button\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase \"buttongroup\":\r\n\t\t\t\t\t\t\t// Create an element with the HTML\r\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\tcreateButton(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dropdown\":\r\n\t\t\t\t\t\tcase \"dropup\":\r\n\t\t\t\t\t\t\tcreateDrop(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\tcreateInput(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButtonGroup(item,container) {\r\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\r\n\t\t\t\tcontainer.append(group);\r\n\t\t\t\tcreateToolbarItems(item.items,group);\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButton(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\r\n\t\t\t\t\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in attrs) {\r\n\t\t\t\t\tbutton.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.attr(attrs);\r\n\r\n\t\t\t\t// Add button to the group\r\n\t\t\t\tcontainer.append(button);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createDrop(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\r\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\r\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\r\n\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\tif(item.type === \"dropup\") {\r\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in item) {\r\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\t\t\t\t// Add caret\r\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\r\n\r\n\t\t\t\t// Add list of options\r\n\t\t\t\tfor(var i in item.list) {\r\n\t\t\t\t\tvar dropdown_option = item.list[i];\r\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\r\n\r\n\t\t\t\t\t// If has icon\r\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If has text\r\n\t\t\t\t\tif (\"text\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Set attributes\r\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\r\n\r\n\t\t\t\t\t// Add to dropdown list\r\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tdropdown_group.attr(attrs);\r\n\r\n\t\t\t\tdropdown_group.append(dropdown_button);\r\n\t\t\t\tdropdown_group.append(dropdown_list);\r\n\t\t\t\tcontainer.append(dropdown_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createInput(item,container) {\r\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\r\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\r\n\t\t\t\t\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// Add prefix addon\r\n\t\t\t\tif(\"prefix\" in item) {\r\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_prefix.html(item.prefix);\r\n\t\t\t\t\tinput_group.append(input_prefix);\r\n\r\n\t\t\t\t\tdelete attrs.prefix;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add input\r\n\t\t\t\tinput_group.append(input_element);\r\n\r\n\t\t\t\t// Add sufix addon\r\n\t\t\t\tif(\"sufix\" in item) {\r\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_sufix.html(item.sufix);\r\n\t\t\t\t\tinput_group.append(input_sufix);\r\n\r\n\t\t\t\t\tdelete attrs.sufix;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrs.type = attrs.inputType;\r\n\r\n\t\t\t\tdelete attrs.inputType;\r\n\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tinput_element.attr(attrs);\r\n\r\n\t\t\t\tcontainer.append(input_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this._options.items;\r\n\t\t\tif (items) {\r\n\t\t\t\tcreateToolbarItems(items,this.$container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t$.fn.toolbar = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.each(function () {\r\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\r\n\t\t});\r\n\t};\r\n\r\n\treturn Toolbar;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Uploader',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-collection/ArrayList\",\r\n  \"skylark-utils-filer/uploader\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ArrayList,uploader,swt,Widget){\r\n\r\n    /**\r\n     * This model represents a file.\r\n     *\r\n     */\r\n    var FileItem = langx.Stateful.inherit({\r\n        state: \"pending\",\r\n\r\n        /**\r\n         * Start upload.\r\n         *\r\n         */\r\n        start: function ()  {\r\n            if (this.isPending()) {\r\n                this.get('processor').submit();\r\n                this.state = \"running\";\r\n\r\n                // Dispatch event\r\n                this.trigger('filestarted', this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancel a file upload.\r\n         *\r\n         */\r\n        cancel: function () {\r\n            this.get('processor').abort();\r\n            this.destroy();\r\n\r\n            // Dispatch event\r\n            this.state = \"canceled\";\r\n            this.trigger('filecanceled', this);\r\n        },\r\n\r\n        /**\r\n         * Notify file that progress updated.\r\n         *\r\n         */\r\n        progress: function (data)  {\r\n            // Dispatch event\r\n            this.trigger('fileprogress', this.get('processor').progress());\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload failed.\r\n         *\r\n         */\r\n        fail: function (error)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filefailed', error);\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload is done.\r\n         *\r\n         */\r\n        done: function (result)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filedone', result);\r\n        },\r\n\r\n        /**\r\n         * Is this file pending to be uploaded ?\r\n         *\r\n         */\r\n        isPending: function ()  {\r\n            return this.getState() == \"pending\";\r\n        },\r\n\r\n        /**\r\n         * Is this file currently uploading ?\r\n         *\r\n         */\r\n        isRunning: function () {\r\n            return this.getState() == \"running\";\r\n        },\r\n\r\n        /**\r\n         * Is this file uploaded ?\r\n         *\r\n         */\r\n        isDone: function () {\r\n            return this.getState() == \"done\";\r\n        },\r\n\r\n        /**\r\n         * Is this upload in error ?\r\n         *\r\n         */\r\n        isError: function () {\r\n            return this.getState() == \"error\" || this.getState == \"canceled\";\r\n        },\r\n\r\n        /**\r\n         * Get the file state.\r\n         *\r\n         */\r\n        getState: function () {\r\n            return this.state;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This is a file collection, used to manage the selected\r\n     * and processing files.\r\n     *\r\n     */\r\n    var FileItemCollection = ArrayList.inherit({\r\n        item: FileItem\r\n    });\r\n\r\n    /**\r\n     * A file view, which is the view that manage a single file\r\n     * process in the upload manager.\r\n     *\r\n     */\r\n    var FileItemWidget = Widget.inherit({\r\n        className: 'upload-manager-file row',\r\n\r\n        options : {\r\n          selectors : {\r\n            fileName : \".name\",\r\n            fileSize : \".size\",\r\n            cancel : \".cancel\",\r\n            clear : \".clear\",\r\n            progress : \".progress\",\r\n            message : \".message\"\r\n          }\r\n        },\r\n\r\n        state : {\r\n          fileName : String,\r\n          fileSize : Number\r\n        },\r\n\r\n        _init: function () {\r\n            this.processUploadMsg = this.options.processUploadMsg;\r\n            this.doneMsg = this.options.doneMsg;\r\n\r\n            this.fileName(this.options.fileName);\r\n            this.fileSize(this.options.fileSize);\r\n\r\n            // Bind model events\r\n            this.model.on('destroy', this.close, this);\r\n            this.model.on('fileprogress', this.updateProgress, this);\r\n            this.model.on('filefailed', this.hasFailed, this);\r\n            this.model.on('filedone', this.hasDone, this);\r\n\r\n            // In each case, update view\r\n            this.model.on('all', this.update, this);\r\n\r\n            // Bind events\r\n            this.bindEvents();\r\n\r\n            // Update elements\r\n            this.update();            \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n\r\n        },\r\n\r\n        /**\r\n         * Update upload progress.\r\n         *\r\n         */\r\n        updateProgress: function (progress) {\r\n            var percent = parseInt(progress.loaded / progress.total * 100, 10);\r\n            var progressHTML = this.getHelpers().displaySize(progress.loaded)+' of '+this.getHelpers().displaySize(progress.total);\r\n            if (percent >= 100 && this.processUploadMsg) { progressHTML = this.processUploadMsg; }\r\n\r\n            $('.progress', this.el)\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n        },\r\n\r\n        /**\r\n         * File upload has failed.\r\n         *\r\n         */\r\n        hasFailed: function (error){\r\n            $('.message', this.el).html('<i class=\"icon-error\"></i> '+error);\r\n        },\r\n\r\n        /**\r\n         * File upload is done.\r\n         *\r\n         */\r\n        hasDone: function (result){\r\n            $('.message', this.el).html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n        },\r\n\r\n        /**\r\n         * Update view without complete rendering.\r\n         *\r\n         */\r\n        update: function () {\r\n            var selectors = this.options.selectors,\r\n                when_pending = this._velm.$(selectors.size + \",\" + selectors.cancel),\r\n                when_running = this._velm.$(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = this._velm.$(selectors.message + \",\" + selectors.clear);\r\n\r\n            if (this.model.isPending()) {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (this.model.isRunning()) {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (this.model.isDone() || this.model.isError()) {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Startup widget with binding events\r\n         * @override\r\n         *\r\n         */\r\n        _startup: function () {\r\n            var self = this;\r\n\r\n            // DOM events\r\n            this._velm.$(this.options.selectors.cancel).click(function(){\r\n                self.model.cancel();\r\n                self.collection.remove(self.model);\r\n            });\r\n            this._velm.$(this.options.selectors.clear).click(function(){\r\n                self.model.destroy();\r\n                self.collection.remove(self.model);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Compute data to be passed to the view.\r\n         *\r\n         */\r\n        computeData: function () {\r\n            return $.extend(this.getHelpers(), this.model.get('data'));\r\n        }\r\n    });\r\n\r\n\r\n    var Uploader =  Widget.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.uploader\",\r\n\r\n        options: {\r\n\r\n            uploadUrl: '/upload',\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : '.file-list',\r\n              nodata : \".file-list .no-data\",\r\n              pickFiles: '.file-picker',\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n\r\n            \t},\r\n\r\n            \ttemplate : null\r\n            }\r\n        },\r\n\r\n        state : {\r\n          files : FileItemCollection\r\n        },\r\n\r\n        /**\r\n         * Render the main part of upload manager.\r\n         *\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n\r\n\r\n            // Create the file list\r\n            var files = this.files(new FileItemCollection());\r\n\r\n            // Add add files handler\r\n            var filePicker = this._velm.$(this.options.selectors.pickFiles), self = this;\r\n\r\n            this.uploadProcess =  uploader(this._elm,{  //$.$(this.el).fileupload({\r\n                dataType: this.options.dataType,\r\n                url: this.options.uploadUrl,\r\n                formData: this.options.formData,\r\n                autoUpload: this.options.autoUpload,\r\n                singleFileUploads: true,\r\n                picker : filePicker,\r\n\r\n                'add' : function (e, data) {\r\n                    // Create an array in which the file objects\r\n                    // will be stored.\r\n                    data.uploadManagerFiles = [];\r\n\r\n                    // A file is added, process for each file.\r\n                    // Note: every times, the data.files array length is 1 because\r\n                    //       of \"singleFileUploads\" option.\r\n                    langx.each(data.files, function (index, file_data) {\r\n                        // Create the file object\r\n                        file_data.id = self.file_id++;\r\n                        var file = new FileItem({\r\n                            data: file_data,\r\n                            processor: data\r\n                        });\r\n\r\n                        // Add file in data\r\n                        data.uploadManagerFiles.push(file);\r\n\r\n                        // Trigger event\r\n                        //self.trigger('fileadd', file);\r\n                        // Add it to current list\r\n                        self.files.add(file);\r\n\r\n                        // Create the view\r\n                        self.renderFile(file);\r\n\r\n\r\n                    });\r\n                },\r\n                'progress' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('fileprogress', file, data);\r\n\r\n                        file.progress(progress);\r\n                    });\r\n                },\r\n\r\n                'fail' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        var error = \"Unknown error\";\r\n                        if (typeof data.errorThrown == \"string\") {\r\n                            error = data.errorThrown;\r\n                        } else if (typeof data.errorThrown == \"object\") {\r\n                            error = data.errorThrown.message;\r\n                        } else if (data.result) {\r\n                            if (data.result.error) {\r\n                                error = data.result.error;\r\n                            } else if (data.result.files && data.result.files[index] && data.result.files[index].error) {\r\n                                error = data.result.files[index].error;\r\n                            } else {\r\n                                error = \"Unknown remote error\";\r\n                            }\r\n                        }\r\n\r\n                        //self.trigger('filefail', file, error);\r\n                        file.fail(error);\r\n                    });\r\n                },\r\n\r\n                'done' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('filedone', file, data);\r\n                        file.done(data.result);\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            // Add upload process events handlers\r\n            this.bindProcessEvents();\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(this.options.selectors.cancelUploads).click(function(){\r\n                while (self.files.length) {\r\n                    self.files.at(0).cancel();\r\n                }\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(this.options.selectors.startUploads).click(function(){\r\n                self.files.forEach(function(file){\r\n                    file.start();\r\n                });\r\n            });\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            this._refresh({files:true});\r\n        \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n            var self = this;\r\n            function updateFileList()  {\r\n                var selectors = self.options.selectors,\r\n                    files = self.files();\r\n                var with_files_elements = self._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n                var without_files_elements = self._velm.$(selectors.nodata);\r\n                if (files.length > 0) {\r\n                    with_files_elements.removeClass('hidden');\r\n                    without_files_elements.addClass('hidden');\r\n                } else {\r\n                    with_files_elements.addClass('hidden');\r\n                    without_files_elements.removeClass('hidden');\r\n                }\r\n            }\r\n\r\n            if (updates[\"files\"]) {\r\n              updateFileList();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Render a file.\r\n         *\r\n         */\r\n        renderFile: function (file) {\r\n            var file_view = new FileItemWidget(langx.mixin({},this.options, {\r\n              model: file,\r\n              template : this.options.fileItem.template\r\n            }));\r\n            //this._velm.$(this.options.selectors.fileList).append(file_view.render());\r\n            file_view.attach(this._velm.$(this.options.selectors.fileList));\r\n        },\r\n\r\n        /**\r\n         * Bind events on the upload processor.\r\n         *\r\n         */\r\n        bindProcessEvents: function () {\r\n        }\r\n    });\r\n\r\n    return swt.Uploader = Uploader;\r\n});\r\n\ndefine('skylark-ui-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./Checkbox\",\r\n    \"./Combobox\",\r\n    \"./InputBox\",\r\n    \"./ListGroup\",\r\n    \"./Menu\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SelectList\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\",\r\n    \"./Uploader\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-ui-swt', ['skylark-ui-swt/main'], function (main) { return main; });\n\n"]}