{"version":3,"sources":["skylark-ui-swt.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","skylarkjs","skylark","langx","browser","eventer","noder","geom","$","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","e","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","test","html","text","mixin","datax","elmx","plugins","Map","Widget","Plugin","inherit","klassName","_elmx","_construct","elm","options","isHtmlNode","this","_parse","overrided","_elm","_create","_velm","state","_init","self","on","_refresh","data","_post","updates","mapping","events","attributs","properties","styles","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","aria","name","value","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","css","prop","detach","remove","meta","ctor","arguments","prototype","undefined","pluginName","register","collapse","Panel","toggler","body","$toggle","find","$body","$this","collpasePlugin","toggle","expand","toogle","full","unfull","toogleFull","close","panel_dom","dom","minimize","promise","then","fadeOut","Accordion","panel","template","panels","panelEl","_panels","addPanel","$newPanel","$template","clone","removeClass","hash","addClass","append","fadeIn","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","String","$el","hasClass","href","target","$fa_icon_left","$fa_icon_right","left","prepend","iconleft","iconright","Carousel","_bs_carousel","carousel","slideIndex","to","slideAction","prev","next","preventDefault","pos","pause","cycle","add","_Toggler","checked","isChecked","uncheck","check","Checkbox","$chk","disabled","element","domNode","$element","tagName","toLowerCase","logError","$label","$container","parent","ignoreVisibilityCheck","match","containerSelector","$toggleContainer","setInitialState","_sync","evt","setCheckedState","$lbl","$containerToggle","setDisabledState","changed","right_to_left","popup","Menu","init","_options","hide_onmouseleave","icons","stopImmediatePropagation","contains","relatedTarget","clearTimeout","end","siblings","parentsUntil","addBack","_show_submenu","setTimeout","t","_execute","o","which","type","currentTarget","trigger","last","closest","first","prevAll","nextAll","a","not","click","render","items","width","_trigger","event_name","document","reference","position","x","position_x","y","position_y","_disabled","isFunction","item","action","call","is_callback","tmp","str","sep","each","val","separator_before","_class","shortcut","title","icon","indexOf","label","shortcut_label","submenu","separator_after","replace","xl","offset","outerWidth","top","w","h","height","dw","window","scrollLeft","dh","scrollTop","cond","outerHeight","appendTo","is_visible","m","Pagination","totalPages","startPage","visiblePages","initiateStartPageClick","hideOnlyOnePage","pageVariable","totalPagesVariable","page","loop","beforePageClick","onPageClick","paginationClass","nextClass","prevClass","lastClass","firstClass","pageClass","activeClass","disabledClass","anchorClass","extend","fn","twbsPagination","defaults","parseInt","isNaN","Function","getPageFromQueryString","$listContainer","elements","$newListContainer","index","$newElem","currentPage","getPages","setupEvents","_destroy","empty","removeData","off","pages","_this","_build","listItems","buildItem","numeric","_buildItem","$itemContainer","$itemContent","itemText","makeText","makeHref","half","Math","floor","start","itPage","buildListItems","key","pageType","toggleClass","changeTotalPages","generateQueryString","searchStr","search","getSearchString","regex","RegExp","exec","decodeURIComponent","pageNumber","location","substr","getCurrentPage","getTotalPages","option","methodReturn","Array","slice","TwbsPagination","Progressbar","transition_delay","refresh_speed","display_text","use_percentage","percent_format","percent","amount_format","amount_part","amount_max","amount_min","update","noop","done","fail","_construt","transition","$parent","$back_text","$front_text","data_transitiongoal","aria_valuemin","aria_valuemax","is_vertical","percentage","round","prependTo","parent_size","line-height","resize","current_percentage","current_value","this_size","progress","setInterval","clearInterval","Radio","$radio","resetGroup","$radios","groupName","Textbox","multiline","is","attrs","subtype","_dom","createElement","Toolbar","autoredraw","buttons","context","list","dropdown","createToolbarItems","container","createButtonGroup","createButton","createDrop","createInput","group","class","role","button","dropdown_group","dropdown_button","dropdown_list","dropdown_option","dropdown_option_li","input_group","input_element","input_prefix","prefix","input_sufix","sufix","inputType","toolbar","main"],"mappings":"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","file":"../skylark-ui-swt.js","sourcesContent":["define('skylark-ui-swt/ui',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-utils-collection/Map\",\r\n  \"./ui\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,ui){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._elm = this._create();\r\n        }\r\n        this._velm = elmx(this._elm);\r\n        this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = options || {};\r\n      // TODO : parse options from element\r\n      return options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n     \r\n    },\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      //TODO:\r\n      var self = this;\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Post widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _post : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    html: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn ui.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,ui,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-ui-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./ui\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,ui,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n      var $newPanel = $template.clone();\r\n      $newPanel.find(\".collapse\").removeClass(\"in\");\r\n      $newPanel.find(\".accordion-toggle\").attr(\"href\",  \"#\" + (++hash))\r\n               .text(\"Dynamic panel #\" + hash);\r\n      $newPanel.find(\".panel-collapse\").attr(\"id\", hash).addClass(\"collapse\").removeClass(\"in\");\r\n      $(\"#accordion\").append($newPanel.fadeIn());\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this._velm.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this._velm.collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return Accordion;\r\n});\r\n\ndefine('skylark-ui-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,$,ui,Widget){\r\n\r\n\tvar Button = Widget.inherit({\r\n\t\tklassName : \"Button\",\r\n\r\n    pluginName : \"lark.button\",\r\n\r\n\t\toptions : {\r\n\t\t\tbtnSize : \"lg\",\r\n      btnType : \"default\",\r\n      leftIcon : null,\r\n      rightIcon : null,\r\n      topIcon : null, // TODO\r\n      bottomIcon : null //TODO\r\n\t\t},\r\n\r\n    state : {\r\n      \"text\" : String\r\n    },\r\n\r\n    _parse: function (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    },\r\n\r\n    _refresh: function (updates) {\r\n      this.overrided(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  });\r\n\r\n  return Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-ui-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./ui\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, ui, Widget) {\r\n\r\n    var Carousel = Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        }\r\n    });\r\n\r\n    return Carousel;\r\n\r\n});\ndefine('skylark-ui-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n  var _Toggler = ui._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-ui-swt/Checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,_Toggler){\r\n\r\n  var Checkbox = ui.Checkbox = _Toggler.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    _parse : function() {\r\n      var $chk = this.$chk;\r\n\r\n      // get current state of input\r\n      var checked = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$chk = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$chk.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$chk.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn Checkbox;\r\n});\r\n\ndefine('skylark-ui-swt/Menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\t\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = ui.Menu = Widget.inherit({\r\n        klassName: \"Menu\",\r\n\r\n\t    pluginName : \"lark.menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\r\n    /* This module used the following source code\r\n     * !\r\n     * jQuery pagination plugin v1.4.2\r\n     * http://josecebe.github.io/twbs-pagination/\r\n     *\r\n     * Copyright 2014-2018, Eugene Simakin\r\n     * Released under Apache 2.0 license\r\n     * http://apache.org/licenses/LICENSE-2.0.html\r\n     */\r\n\r\n    'use strict';\r\n\r\n    var Pagination = ui.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n\r\n        options : {\r\n            totalPages: 1,\r\n            startPage: 1,\r\n            visiblePages: 5,\r\n            initiateStartPageClick: true,\r\n            hideOnlyOnePage: false,\r\n            href: false,\r\n            pageVariable: '{{page}}',\r\n            totalPagesVariable: '{{total_pages}}',\r\n            page: null,\r\n            first: 'First',\r\n            prev: 'Previous',\r\n            next: 'Next',\r\n            last: 'Last',\r\n            loop: false,\r\n            beforePageClick: null,\r\n            onPageClick: null,\r\n            paginationClass: 'pagination',\r\n            nextClass: 'page-item next',\r\n            prevClass: 'page-item prev',\r\n            lastClass: 'page-item last',\r\n            firstClass: 'page-item first',\r\n            pageClass: 'page-item',\r\n            activeClass: 'active',\r\n            disabledClass: 'disabled',\r\n            anchorClass: 'page-link'         \r\n        },\r\n\r\n\r\n        _create : function(element, options) {\r\n            this.$element = $(element);\r\n            this.options = $.extend({}, $.fn.twbsPagination.defaults, options);\r\n\r\n            if (this.options.startPage < 1 || this.options.startPage > this.options.totalPages) {\r\n                throw new Error('Start page option is incorrect');\r\n            }\r\n\r\n            this.options.totalPages = parseInt(this.options.totalPages);\r\n            if (isNaN(this.options.totalPages)) {\r\n                throw new Error('Total pages option is not correct!');\r\n            }\r\n\r\n            this.options.visiblePages = parseInt(this.options.visiblePages);\r\n            if (isNaN(this.options.visiblePages)) {\r\n                throw new Error('Visible pages option is not correct!');\r\n            }\r\n\r\n            if (this.options.beforePageClick instanceof Function) {\r\n                this.$element.first().on('beforePage', this.options.beforePageClick);\r\n            }\r\n\r\n            if (this.options.onPageClick instanceof Function) {\r\n                this.$element.first().on('page', this.options.onPageClick);\r\n            }\r\n\r\n            // hide if only one page exists\r\n            if (this.options.hideOnlyOnePage && this.options.totalPages == 1) {\r\n                if (this.options.initiateStartPageClick) {\r\n                    this.$element.trigger('page', 1);\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (this.options.href) {\r\n                this.options.startPage = this.getPageFromQueryString();\r\n                if (!this.options.startPage) {\r\n                    this.options.startPage = 1;\r\n                }\r\n            }\r\n\r\n            var tagName = (typeof this.$element.prop === 'function') ?\r\n                this.$element.prop('tagName') : this.$element.attr('tagName');\r\n\r\n            if (tagName === 'UL') {\r\n                this.$listContainer = this.$element;\r\n            } else {\r\n                var elements = this.$element;\r\n                var $newListContainer = $([]);\r\n                elements.each(function(index) {\r\n                    var $newElem = $(\"<ul></ul>\");\r\n                    $(this).append($newElem);\r\n                    $newListContainer.push($newElem[0]);\r\n                });\r\n                this.$listContainer = $newListContainer;\r\n                this.$element = $newListContainer;\r\n            }\r\n\r\n            this.$listContainer.addClass(this.options.paginationClass);\r\n\r\n            if (this.options.initiateStartPageClick) {\r\n                this.show(this.options.startPage);\r\n            } else {\r\n                this.currentPage = this.options.startPage;\r\n                this.render(this.getPages(this.options.startPage));\r\n                this.setupEvents();\r\n            }\r\n\r\n            return this;\r\n\r\n        },\r\n\r\n        _destroy: function () {\r\n            this.$element.empty();\r\n            this.$element.removeData('twbs-pagination');\r\n            this.$element.off('page');\r\n\r\n            return this;\r\n        },\r\n\r\n        show: function (page) {\r\n            if (page < 1 || page > this.options.totalPages) {\r\n                throw new Error('Page is incorrect.');\r\n            }\r\n            this.currentPage = page;\r\n\r\n            this.$element.trigger('beforePage', page);\r\n\r\n            var pages = this.getPages(page);\r\n            this.render(pages);\r\n            this.setupEvents();\r\n\r\n            this.$element.trigger('page', page);\r\n\r\n            return pages;\r\n        },\r\n\r\n        enable: function () {\r\n            this.show(this.currentPage);\r\n        },\r\n\r\n        disable: function () {\r\n            var _this = this;\r\n            this.$listContainer.off('click').on('click', 'li', function (evt) {\r\n                evt.preventDefault();\r\n            });\r\n            this.$listContainer.children().each(function () {\r\n                var $this = $(this);\r\n                if (!$this.hasClass(_this.options.activeClass)) {\r\n                    $(this).addClass(_this.options.disabledClass);\r\n                }\r\n            });\r\n        },\r\n\r\n        _build: function (pages) {\r\n            var listItems = [];\r\n\r\n            if (this.options.first) {\r\n                listItems.push(this.buildItem('first', 1));\r\n            }\r\n\r\n            if (this.options.prev) {\r\n                var prev = pages.currentPage > 1 ? pages.currentPage - 1 : this.options.loop ? this.options.totalPages  : 1;\r\n                listItems.push(this.buildItem('prev', prev));\r\n            }\r\n\r\n            for (var i = 0; i < pages.numeric.length; i++) {\r\n                listItems.push(this.buildItem('page', pages.numeric[i]));\r\n            }\r\n\r\n            if (this.options.next) {\r\n                var next = pages.currentPage < this.options.totalPages ? pages.currentPage + 1 : this.options.loop ? 1 : this.options.totalPages;\r\n                listItems.push(this.buildItem('next', next));\r\n            }\r\n\r\n            if (this.options.last) {\r\n                listItems.push(this.buildItem('last', this.options.totalPages));\r\n            }\r\n\r\n            return listItems;\r\n        },\r\n\r\n        _buildItem: function (type, page) {\r\n            var $itemContainer = $('<li></li>'),\r\n                $itemContent = $('<a></a>'),\r\n                itemText = this.options[type] ? this.makeText(this.options[type], page) : page;\r\n\r\n            $itemContainer.addClass(this.options[type + 'Class']);\r\n            $itemContainer.data('page', page);\r\n            $itemContainer.data('page-type', type);\r\n            $itemContainer.append($itemContent.attr('href', this.makeHref(page)).addClass(this.options.anchorClass).html(itemText));\r\n\r\n            return $itemContainer;\r\n        },\r\n\r\n        getPages: function (currentPage) {\r\n            var pages = [];\r\n\r\n            var half = Math.floor(this.options.visiblePages / 2);\r\n            var start = currentPage - half + 1 - this.options.visiblePages % 2;\r\n            var end = currentPage + half;\r\n\r\n            var visiblePages = this.options.visiblePages;\r\n            if (visiblePages > this.options.totalPages) {\r\n                visiblePages = this.options.totalPages;\r\n            }\r\n\r\n            // handle boundary case\r\n            if (start <= 0) {\r\n                start = 1;\r\n                end = visiblePages;\r\n            }\r\n            if (end > this.options.totalPages) {\r\n                start = this.options.totalPages - visiblePages + 1;\r\n                end = this.options.totalPages;\r\n            }\r\n\r\n            var itPage = start;\r\n            while (itPage <= end) {\r\n                pages.push(itPage);\r\n                itPage++;\r\n            }\r\n\r\n            return {\"currentPage\": currentPage, \"numeric\": pages};\r\n        },\r\n\r\n        render: function (pages) {\r\n            var _this = this;\r\n            this.$listContainer.children().remove();\r\n            var items = this.buildListItems(pages);\r\n            $.each(items, function(key, item){\r\n                _this.$listContainer.append(item);\r\n            });\r\n\r\n            this.$listContainer.children().each(function () {\r\n                var $this = $(this),\r\n                    pageType = $this.data('page-type');\r\n\r\n                switch (pageType) {\r\n                    case 'page':\r\n                        if ($this.data('page') === pages.currentPage) {\r\n                            $this.addClass(_this.options.activeClass);\r\n                        }\r\n                        break;\r\n                    case 'first':\r\n                            $this.toggleClass(_this.options.disabledClass, pages.currentPage === 1);\r\n                        break;\r\n                    case 'last':\r\n                            $this.toggleClass(_this.options.disabledClass, pages.currentPage === _this.options.totalPages);\r\n                        break;\r\n                    case 'prev':\r\n                            $this.toggleClass(_this.options.disabledClass, !_this.options.loop && pages.currentPage === 1);\r\n                        break;\r\n                    case 'next':\r\n                            $this.toggleClass(_this.options.disabledClass,\r\n                                !_this.options.loop && pages.currentPage === _this.options.totalPages);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        setupEvents: function () {\r\n            var _this = this;\r\n            this.$listContainer.off('click').on('click', 'li', function (evt) {\r\n                var $this = $(this);\r\n                if ($this.hasClass(_this.options.disabledClass) || $this.hasClass(_this.options.activeClass)) {\r\n                    return false;\r\n                }\r\n                // Prevent click event if href is not set.\r\n                !_this.options.href && evt.preventDefault();\r\n                _this.show(parseInt($this.data('page')));\r\n            });\r\n        },\r\n\r\n        changeTotalPages: function(totalPages, currentPage) {\r\n            this.options.totalPages = totalPages;\r\n            return this.show(currentPage);\r\n        },\r\n\r\n        makeHref: function (page) {\r\n            return this.options.href ? this.generateQueryString(page) : \"#\";\r\n        },\r\n\r\n        makeText: function (text, page) {\r\n            return text.replace(this.options.pageVariable, page)\r\n                .replace(this.options.totalPagesVariable, this.options.totalPages)\r\n        },\r\n\r\n        getPageFromQueryString: function (searchStr) {\r\n            var search = this.getSearchString(searchStr),\r\n                regex = new RegExp(this.options.pageVariable + '(=([^&#]*)|&|#|$)'),\r\n                page = regex.exec(search);\r\n            if (!page || !page[2]) {\r\n                return null;\r\n            }\r\n            page = decodeURIComponent(page[2]);\r\n            page = parseInt(page);\r\n            if (isNaN(page)) {\r\n                return null;\r\n            }\r\n            return page;\r\n        },\r\n\r\n        generateQueryString: function (pageNumber, searchStr) {\r\n            var search = this.getSearchString(searchStr),\r\n                regex = new RegExp(this.options.pageVariable + '=*[^&#]*');\r\n            if (!search) return '';\r\n            return '?' + search.replace(regex, this.options.pageVariable + '=' + pageNumber);\r\n        },\r\n\r\n        getSearchString: function (searchStr) {\r\n            var search = searchStr || window.location.search;\r\n            if (search === '') {\r\n                return null;\r\n            }\r\n            if (search.indexOf('?') === 0) search = search.substr(1);\r\n            return search;\r\n        },\r\n\r\n        getCurrentPage: function () {\r\n            return this.currentPage;\r\n        },\r\n\r\n        getTotalPages: function () {\r\n            return this.options.totalPages;\r\n        }\r\n\r\n    });\r\n\r\n    // PLUGIN DEFINITION\r\n\r\n    $.fn.twbsPagination = function (option) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var methodReturn;\r\n\r\n        var $this = $(this);\r\n        var data = $this.data('twbs-pagination');\r\n        var options = typeof option === 'object' ? option : {};\r\n\r\n        if (!data) $this.data('twbs-pagination', (data = new TwbsPagination(this, options) ));\r\n        if (typeof option === 'string') methodReturn = data[ option ].apply(data, args);\r\n\r\n        return ( methodReturn === undefined ) ? $this : methodReturn;\r\n    };\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-ui-swt/Progressbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n    'use strict';\r\n\r\n    /* This module used the following source code\r\n     * !\r\n\t * bootstrap-progressbar v0.9.0 by @minddust\r\n\t * Copyright (c) 2012-2015 Stephan Groß\r\n\t *\r\n\t * http://www.minddust.com/project/bootstrap-progressbar/\r\n\t *\r\n\t * Licensed under the MIT license:\r\n\t * http://www.opensource.org/licenses/MIT\r\n     */    \r\n\r\n     var Progressbar = ui.Progressbar = Widget.inherit({\r\n     \tklassName : \"Progressbar\",\r\n\r\n     \tpluginName : \"lark.progressbar\",\r\n\r\n\t    options : {\r\n\t        transition_delay: 300,\r\n\t        refresh_speed: 50,\r\n\t        display_text: 'none',\r\n\t        use_percentage: true,\r\n\t        percent_format: function(percent) { return percent + '%'; },\r\n\t        amount_format: function(amount_part, amount_max, amount_min) { return amount_part + ' / ' + amount_max; },\r\n\t        update: $.noop,\r\n\t        done: $.noop,\r\n\t        fail: $.noop\r\n\t    },\r\n\r\n     \t_construt : function(element, options) {\r\n\t        this.$element = $(element);\r\n\t        this.options = $.extend({}, Progressbar.defaults, options);\r\n     \t},\r\n\r\n\r\n\t    transition : function() {\r\n\t        var $this = this.$element;\r\n\t        var $parent = $this.parent();\r\n\t        var $back_text = this.$back_text;\r\n\t        var $front_text = this.$front_text;\r\n\t        var options = this.options;\r\n\t        var data_transitiongoal = parseInt($this.attr('data-transitiongoal'));\r\n\t        var aria_valuemin = parseInt($this.attr('aria-valuemin')) || 0;\r\n\t        var aria_valuemax = parseInt($this.attr('aria-valuemax')) || 100;\r\n\t        var is_vertical = $parent.hasClass('vertical');\r\n\t        var update = options.update && typeof options.update === 'function' ? options.update : Progressbar.defaults.update;\r\n\t        var done = options.done && typeof options.done === 'function' ? options.done : Progressbar.defaults.done;\r\n\t        var fail = options.fail && typeof options.fail === 'function' ? options.fail : Progressbar.defaults.fail;\r\n\r\n\t        if (isNaN(data_transitiongoal)) {\r\n\t            fail('data-transitiongoal not set');\r\n\t            return;\r\n\t        }\r\n\t        var percentage = Math.round(100 * (data_transitiongoal - aria_valuemin) / (aria_valuemax - aria_valuemin));\r\n\r\n\t        if (options.display_text === 'center' && !$back_text && !$front_text) {\r\n\t            this.$back_text = $back_text = $('<span>').addClass('progressbar-back-text').prependTo($parent);\r\n\t            this.$front_text = $front_text = $('<span>').addClass('progressbar-front-text').prependTo($this);\r\n\r\n\t            var parent_size;\r\n\r\n\t            if (is_vertical) {\r\n\t                parent_size = $parent.css('height');\r\n\t                $back_text.css({height: parent_size, 'line-height': parent_size});\r\n\t                $front_text.css({height: parent_size, 'line-height': parent_size});\r\n\r\n\t                $(window).resize(function() {\r\n\t                    parent_size = $parent.css('height');\r\n\t                    $back_text.css({height: parent_size, 'line-height': parent_size});\r\n\t                    $front_text.css({height: parent_size, 'line-height': parent_size});\r\n\t                }); // normal resizing would brick the structure because width is in px\r\n\t            }\r\n\t            else {\r\n\t                parent_size = $parent.css('width');\r\n\t                $front_text.css({width: parent_size});\r\n\r\n\t                $(window).resize(function() {\r\n\t                    parent_size = $parent.css('width');\r\n\t                    $front_text.css({width: parent_size});\r\n\t                }); // normal resizing would brick the structure because width is in px\r\n\t            }\r\n\t        }\r\n\r\n\t        setTimeout(function() {\r\n\t            var current_percentage;\r\n\t            var current_value;\r\n\t            var this_size;\r\n\t            var parent_size;\r\n\t            var text;\r\n\r\n\t            if (is_vertical) {\r\n\t                $this.css('height', percentage + '%');\r\n\t            }\r\n\t            else {\r\n\t                $this.css('width', percentage + '%');\r\n\t            }\r\n\r\n\t            var progress = setInterval(function() {\r\n\t                if (is_vertical) {\r\n\t                    this_size = $this.height();\r\n\t                    parent_size = $parent.height();\r\n\t                }\r\n\t                else {\r\n\t                    this_size = $this.width();\r\n\t                    parent_size = $parent.width();\r\n\t                }\r\n\r\n\t                current_percentage = Math.round(100 * this_size / parent_size);\r\n\t                current_value = Math.round(aria_valuemin + this_size / parent_size * (aria_valuemax - aria_valuemin));\r\n\r\n\t                if (current_percentage >= percentage) {\r\n\t                    current_percentage = percentage;\r\n\t                    current_value = data_transitiongoal;\r\n\t                    done($this);\r\n\t                    clearInterval(progress);\r\n\t                }\r\n\r\n\t                if (options.display_text !== 'none') {\r\n\t                    text = options.use_percentage ? options.percent_format(current_percentage) : options.amount_format(current_value, aria_valuemax, aria_valuemin);\r\n\r\n\t                    if (options.display_text === 'fill') {\r\n\t                        $this.text(text);\r\n\t                    }\r\n\t                    else if (options.display_text === 'center') {\r\n\t                        $back_text.text(text);\r\n\t                        $front_text.text(text);\r\n\t                    }\r\n\t                }\r\n\t                $this.attr('aria-valuenow', current_value);\r\n\r\n\t                update(current_percentage, $this);\r\n\t            }, options.refresh_speed);\r\n\t        }, options.transition_delay);\r\n\t    }\r\n\r\n     });\r\n\r\n\treturn Progressbar;\r\n\t\r\n });\ndefine('skylark-ui-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,_Toggler){\r\n\r\n  var Radio = ui.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/Textbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar Textbox = ui.Textbox = Widget.inherit({\r\n\t\tklassName: \"Textbox\",\r\n\r\n    pluginName: \"lark.textbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn Textbox;\r\n});\r\n\r\n\ndefine('skylark-ui-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\tvar Toolbar = ui.Toolbar = Widget.inherit({\r\n        klassName: \"Toolbar\",\r\n\r\n\t    pluginName : \"lark.toolbar\",\r\n\r\n        init : function(elm,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\tautoredraw: true,\r\n\t\t\t\t\tbuttons: {},\r\n\t\t\t\t\tcontext: {},\r\n\t\t\t\t\tlist: [],\r\n\t\t\t\t\tshow: true,\r\n\t\t\t},options);\r\n\r\n\r\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\r\n\t\t\tthis.$el = $(elm).append(this.$container);\r\n\r\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n\r\n\t\trender : function () {\r\n\t\t\tfunction createToolbarItems(items,container) {\r\n\t\t\t\tlangx.each(items,function(i,item)  {\r\n\t\t\t\t\tvar type = item.type;\r\n\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\ttype = \"button\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase \"buttongroup\":\r\n\t\t\t\t\t\t\t// Create an element with the HTML\r\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\tcreateButton(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dropdown\":\r\n\t\t\t\t\t\tcase \"dropup\":\r\n\t\t\t\t\t\t\tcreateDrop(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\tcreateInput(item,container)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButtonGroup(item,container) {\r\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\r\n\t\t\t\tcontainer.append(group);\r\n\t\t\t\tcreateToolbarItems(item.items,group);\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\r\n\t\t\tfunction createButton(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\r\n\t\t\t\t\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in attrs) {\r\n\t\t\t\t\tbutton.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.attr(attrs);\r\n\r\n\t\t\t\t// Add button to the group\r\n\t\t\t\tcontainer.append(button);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createDrop(item,container) {\r\n\t\t\t\t// Create button\r\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\r\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\r\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\r\n\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\tif(item.type === \"dropup\") {\r\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If has icon\r\n\t\t\t\tif (\"icon\" in item) {\r\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\r\n\t\t\t\t\tdelete attrs.icon;\r\n\t\t\t\t}\r\n\t\t\t\t// If has text\r\n\t\t\t\tif (\"text\" in item) {\r\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\r\n\t\t\t\t\tdelete attrs.text;\r\n\t\t\t\t}\r\n\t\t\t\t// Add caret\r\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\r\n\r\n\t\t\t\t// Add list of options\r\n\t\t\t\tfor(var i in item.list) {\r\n\t\t\t\t\tvar dropdown_option = item.list[i];\r\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\r\n\r\n\t\t\t\t\t// If has icon\r\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If has text\r\n\t\t\t\t\tif (\"text\" in dropdown_option) {\r\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Set attributes\r\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\r\n\r\n\t\t\t\t\t// Add to dropdown list\r\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tdropdown_group.attr(attrs);\r\n\r\n\t\t\t\tdropdown_group.append(dropdown_button);\r\n\t\t\t\tdropdown_group.append(dropdown_list);\r\n\t\t\t\tcontainer.append(dropdown_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction createInput(item,container) {\r\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\r\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\r\n\t\t\t\t\r\n\t\t\t\tvar\tattrs = langx.mixin({},item);\r\n\r\n\t\t\t\t// Add prefix addon\r\n\t\t\t\tif(\"prefix\" in item) {\r\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_prefix.html(item.prefix);\r\n\t\t\t\t\tinput_group.append(input_prefix);\r\n\r\n\t\t\t\t\tdelete attrs.prefix;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add input\r\n\t\t\t\tinput_group.append(input_element);\r\n\r\n\t\t\t\t// Add sufix addon\r\n\t\t\t\tif(\"sufix\" in item) {\r\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\r\n\t\t\t\t\tinput_sufix.html(item.sufix);\r\n\t\t\t\t\tinput_group.append(input_sufix);\r\n\r\n\t\t\t\t\tdelete attrs.sufix;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrs.type = attrs.inputType;\r\n\r\n\t\t\t\tdelete attrs.inputType;\r\n\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tinput_element.attr(attrs);\r\n\r\n\t\t\t\tcontainer.append(input_group);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar items = this._options.items;\r\n\t\t\tif (items) {\r\n\t\t\t\tcreateToolbarItems(items,this.$container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t$.fn.toolbar = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.each(function () {\r\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\r\n\t\t});\r\n\t};\r\n\r\n\treturn Toolbar;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/main',[\r\n    \"./ui\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./Checkbox\",\r\n    \"./Menu\",\r\n    \"./Pagination\",\r\n    \"./Progressbar\",\r\n    \"./Radio\",\r\n    \"./Textbox\",\r\n    \"./Toolbar\"\r\n/*    \r\n    \"./checkbox\",\r\n    \"./combobox\",\r\n    \"./datepicker\",\r\n    \"./dropdown-autoflip\",\r\n    \"./infinite-scroll\",\r\n    \"./loader\",\r\n    \"./menu\",\r\n    \"./picker\",\r\n    \"./pillbox\",\r\n    \"./placard\",\r\n    \"./radio\",\r\n    \"./scheduler\",\r\n    \"./search\",\r\n    \"./selectlist\",\r\n    \"./spinbox\",\r\n    \"./toolbar\",\r\n    \"./wizard\"\r\n*/\r\n], function(ui) {\r\n    return ui;\r\n});\ndefine('skylark-ui-swt', ['skylark-ui-swt/main'], function (main) { return main; });\n\n"]}