{"version":3,"sources":["ListGroup.js"],"names":["define","langx","$","ui","Widget","ListGroup","inherit","klassName","pluginName","options","state","text","String","_parse","elm","$el","mixin","btnType","hasClass","btnSize","href","attr","target","find","leftIcon","$fa_icon_left","length","removeClass","addClass","rightIcon","$fa_icon_right","_refresh","updates","this","overrided","velm","_velm","value","left","remove","prepend","iconleft","iconright","append","element","$element","init","prototype","me","toggle","on","$item","data","toggleClass","unselect","select","click","apply","blur","item","Array","isArray","i","val","selector","filter"],"mappings":"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","file":"../ListGroup.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,$,ui,Widget){\r\n\r\n    var ListGroup = Widget.inherit({\r\n        klassName : \"ListGroup\",\r\n\r\n        pluginName : \"lark.ListGroup\",\r\n\r\n    options : {\r\n    },\r\n\r\n    state : {\r\n      \"text\" : String\r\n    },\r\n\r\n    _parse: function (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    },\r\n\r\n    _refresh: function (updates) {\r\n      this.overrided(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  });\r\n\r\n  return ListGroup;\r\n\r\n});\r\n\r\n\r\n\r\n   // LISTGROUP PUBLIC CLASS DEFINITION\r\n    // =======================\r\n    var ListGroup = function (element, options) {\r\n        this.$element = $(element);\r\n        this.options = options || {};\r\n        this.init();\r\n    };\r\n\r\n    ListGroup.prototype.init = function() {\r\n        var me = this;\r\n        var $element = this.$element;\r\n        var options = this.options;\r\n\r\n        if (options.toggle)\r\n            $element.attr('data-toggle', options.toggle);\r\n\r\n        $element.on('click', '.list-group-item', function () {\r\n            var $item = $(this);\r\n\r\n            if (!$item.hasClass('disabled')) {\r\n\r\n                if ($element.data('toggle') == 'items')\r\n                    $item.toggleClass('active');\r\n                else\r\n                    me.unselect('*')\r\n                      .select($item);\r\n\r\n                if (options.click)\r\n                    options.click.apply(this);\r\n            }\r\n\r\n            $item.blur();\r\n            return false;\r\n        });\r\n    };\r\n\r\n    ListGroup.prototype.select = function (item) {\r\n        if (item instanceof $)\r\n            item.addClass('active');\r\n\r\n        if (typeof item === 'string')\r\n            item = [item];\r\n\r\n        if (Array.isArray(item)) {\r\n            for (var i in item) {\r\n                var val = item[i];\r\n                this.$element\r\n                    .find('.list-group-item[data-value=\\'' + val + '\\']')\r\n                    .addClass('active');\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    ListGroup.prototype.unselect = function (selector) {\r\n        this.$element\r\n                .find('.list-group-item')\r\n                .filter(selector || '*')\r\n                    .removeClass('active');\r\n        return this;\r\n    };\r\n\r\n"]}