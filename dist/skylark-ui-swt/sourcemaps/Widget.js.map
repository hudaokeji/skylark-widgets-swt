{"version":3,"sources":["Widget.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","plugins","Map","ui","Widget","Plugin","inherit","klassName","_construct","elm","options","isHtmlNode","this","_setting","overrided","_elm","_create","_velm","state","_init","_render","on","self","_sync","_refresh","updates","_","dom","model","props","attrName","v","value","toCss","processed","css","aria","classes","toggle","_build","el","mapping","events","attributs","properties","styles","html","getEnclosing","selector","getEnclosed","children","ArrayList","show","hide","focus","ex","blur","enable","set","disable","name","getEl","ariaTarget","_aria","get","setAttribute","attr","velm","ret","data","prop","remove","meta","ctor","apply","arguments","pluginName","register"],"mappings":"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","file":"../Widget.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-utils-collection/Map\",\r\n  \"./ui\"\r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,plugins,Map,ui){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._setting(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._elm = this._create();\r\n        }\r\n        this._velm = elmx(this._elm);\r\n        this.state = this.options.state || new Map();\r\n        this._init();\r\n      },\r\n\r\n    _setting : function(elm,options) {\r\n      options = options || {};\r\n      // TODO : parse options from element\r\n      return options;\r\n    },\r\n\r\n\r\n    _create : function() {\r\n     \r\n    },\r\n\r\n    _init : function() {\r\n\r\n    },\r\n\r\n    _render : function() {\r\n      state.on(\"changed\",function() {\r\n        self._sync();\r\n      });\r\n\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n    },                \r\n\r\n\r\n    _build : function(el,options) {\r\n\r\n    },\r\n\r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    html: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Focuses the current control.\r\n     *\r\n     * @method focus\r\n     * @return {tinymce.ui.Control} Current control instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current control.\r\n     *\r\n     * @method blur\r\n     * @return {tinymce.ui.Control} Current control instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {tinymce.ui.Control} Current control instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    remove : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn ui.Widget = Widget;\r\n});\r\n"]}