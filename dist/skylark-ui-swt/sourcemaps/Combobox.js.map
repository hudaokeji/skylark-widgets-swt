{"version":3,"sources":["Combobox.js"],"names":["define","langx","browser","eventer","noder","geom","$","ui","Widget","Combobox","inherit","klassName","pluginName","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_init","element","$element","mixin","fn","combobox","defaults","$input","$button","dropdown","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","data","txt","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","ENTER","ESC","LEFT","UP","RIGHT","DOWN","IS_NAVIGATIONAL","which","hasClass","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue"],"mappings":"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","file":"../Combobox.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-utils-dom/browser\",\n  \"skylark-utils-dom/eventer\",\n  \"skylark-utils-dom/noder\",\n  \"skylark-utils-dom/geom\",\n  \"skylark-utils-dom/query\",\n  \"./ui\",\n  \"./Widget\"\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\n\n\n\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\n\n\tvar Combobox = ui.Combobox = Widget.inherit({\n\t\tklassName: \"Combobox\",\n\n\t\tpluginName : \"lark.combobox\",\n\n\t\toptions : {\n\n\t\t\tautoResizeMenu: true,\n\t\t\tfilterOnKeypress: false,\n\t\t\tshowOptionsOnKeypress: false,\n\t\t\tfilter: function filter (list, predicate, self) {\n\t\t\t\tvar visible = 0;\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\n\n\t\t\t\tlist.each(function (i) {\n\t\t\t\t\tvar $li = $(this);\n\t\t\t\t\tvar text = $(this).text().trim();\n\n\t\t\t\t\t$li.removeClass();\n\n\t\t\t\t\tif (text === predicate) {\n\t\t\t\t\t\t$li.addClass('text-success');\n\t\t\t\t\t\tvisible++;\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\n\t\t\t\t\t\t$li.addClass('text-info');\n\t\t\t\t\t\tvisible++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$li.addClass('hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (visible === 0) {\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_init : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.options = langx.mixin({}, $.fn.combobox.defaults, options);\n\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$button = this.$element.find('.btn');\n\t\t\tthis.$button.dropdown();\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\n\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\n\n\t\t\t// set default selection\n\t\t\tthis.setDefaultSelection();\n\n\t\t\t// if dropdown is empty, disable it\n\t\t\tvar items = this.$dropMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\n\t\t\tif (this.options.filterOnKeypress) {\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\n\t\t\t}\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// remove any external bindings\n\t\t\t// [none]\n\n\t\t\t// set input value attrbute in markup\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\n\t\t\tif (typeof $item[0] !== 'undefined') {\n\t\t\t\t// remove selection from old item, may result in remove and\n\t\t\t\t// re-addition of class if item is the same\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\n\n\t\t\t\t// add selection to new item\n\t\t\t\tthis.$selectedItem = $item;\n\t\t\t\tthis.$selectedItem.addClass('selected');\n\n\t\t\t\t// update input\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\n\t\t\t} else {\n\t\t\t\t// this is a custom input, not in the menu\n\t\t\t\tthis.$selectedItem = null;\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\n\t\t\t}\n\t\t},\n\n\t\tclearSelection: function () {\n\t\t\tthis.$selectedItem = null;\n\t\t\tthis.$input.val('');\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\n\t\t},\n\n\t\tmenuShown: function () {\n\t\t\tif (this.options.autoResizeMenu) {\n\t\t\t\tthis.resizeMenu();\n\t\t\t}\n\t\t},\n\n\t\tresizeMenu: function () {\n\t\t\tvar width = this.$element.outerWidth();\n\t\t\tthis.$dropMenu.outerWidth(width);\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar item = this.$selectedItem;\n\t\t\tvar data = {};\n\n\t\t\tif (item) {\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\n\t\t\t\tdata = langx.mixin({\n\t\t\t\t\ttext: txt\n\t\t\t\t}, this.$selectedItem.data());\n\t\t\t} else {\n\t\t\t\tdata = {\n\t\t\t\t\ttext: this.$input.val().trim(),\n\t\t\t\t\tnotFound: true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar selector = 'li[data-selected=true]:first';\n\t\t\tvar item = this.$element.find(selector);\n\n\t\t\tif (item.length > 0) {\n\t\t\t\t// select by data-attribute\n\t\t\t\tthis.selectBySelector(selector);\n\t\t\t\titem.removeData('selected');\n\t\t\t\titem.removeAttr('data-selected');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', true);\n\t\t\tthis.$button.addClass('disabled');\n\t\t},\n\n\t\titemclicked: function (e) {\n\t\t\tthis.$selectedItem = $(e.target).parent();\n\n\t\t\t// set input text and trigger input change event marked as synthetic\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\n\t\t\t\tsynthetic: true\n\t\t\t});\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.lark', data);\n\n\t\t\te.preventDefault();\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER = 13;\n\t\t\t//var TAB = 9;\n\t\t\tvar ESC = 27;\n\t\t\tvar LEFT = 37;\n\t\t\tvar UP = 38;\n\t\t\tvar RIGHT = 39;\n\t\t\tvar DOWN = 40;\n\n\t\t\tvar IS_NAVIGATIONAL = (\n\t\t\t\te.which === UP ||\n\t\t\t\te.which === DOWN ||\n\t\t\t\te.which === LEFT ||\n\t\t\t\te.which === RIGHT\n\t\t\t);\n\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\n\t\t\t\tthis.$button.dropdown('toggle');\n\t\t\t\tthis.$input.focus();\n\t\t\t}\n\n\t\t\tif (e.which === ENTER) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\n\t\t\t\tif(selected.length > 0){\n\t\t\t\t\tthis.selectByText(selected);\n\t\t\t\t}else{\n\t\t\t\t\tthis.selectByText(this.$input.val());\n\t\t\t\t}\n\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\n\t\t\t} else if (e.which === ESC) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clearSelection();\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\n\t\t\t\t\tif ($selected.length > 0) {\n\t\t\t\t\t\tif (e.which === DOWN) {\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($selected.length === 0){\n\t\t\t\t\t\tif (e.which === DOWN) {\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.doSelect($selected);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Avoid filtering on navigation key presses\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\n\t\t\t}\n\n\t\t\tthis.previousKeyPress = e.which;\n\t\t},\n\n\t\tinputchanged: function (e, extra) {\n\t\t\tvar val = $(e.target).val();\n\t\t\t// skip processing for internally-generated synthetic event\n\t\t\t// to avoid double processing\n\t\t\tif (extra && extra.synthetic) {\n\t\t\t\tthis.selectByText(val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.selectByText(val);\n\n\t\t\t// find match based on input\n\t\t\t// if no match, pass the input value\n\t\t\tvar data = this.selectedItem();\n\t\t\tif (data.text.length === 0) {\n\t\t\t\tdata = {\n\t\t\t\t\ttext: val\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.lark', data);\n\t\t}\n\n\t});\n\n\n\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\n\n\n\n\treturn Combobox;\n});\n"]}