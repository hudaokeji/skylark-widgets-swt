{"version":3,"sources":["Combobox.js"],"names":["define","langx","browser","eventer","noder","geom","$","ui","Widget","Combobox","inherit","klassName","pluginName","widgetClass","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_init","$element","_elm","$input","$button","dropdown","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","data","txt","mixin","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","ENTER","ESC","LEFT","UP","RIGHT","DOWN","IS_NAVIGATIONAL","which","hasClass","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue"],"mappings":"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","file":"../Combobox.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Combobox = Widget.inherit({\r\n\t\tklassName: \"Combobox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn ui.Combobox = Combobox;\r\n});\r\n"]}