{"version":3,"sources":["Pagination.js"],"names":["define","langx","browser","eventer","noder","geom","$","ui","Widget","Pagination","inherit","klassName","pluginName","options","tagName","css","selectors","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","_parse","elm","_create","self","_init","checkCanAction","$elm","is","this","$first","_velm","$prev","$last","$next","$numeric","click","ret","numeric","find","text","pageNo","parseInt","set","overrided","_refresh","updates","changePageNoBtns","totalPageNoBtns","Math","min","begin","end","count","size","visibles","i","filter","removeClass","$btn","eq","show","addClass","hide","changeLabeldBtns"],"mappings":";;;;;;;AAAAA,QACE,sBACA,4BACA,4BACA,0BACA,yBACA,0BACA,OACA,YACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAAGC,GAE7C,YAEA,IAAIC,GAAaF,EAAGE,WAAaD,EAAOE,SACpCC,UAAY,aAEZC,WAAa,kBAEbC,SACIC,QAAU,KACVC,IAAM,GACNC,WACIC,UAAY,yBACZC,SAAW,wBACXC,SAAW,wBACXC,SAAW,wBACXC,YAAc,uBACdC,WAAc,KAElBC,WAAY,EACZC,kBAAmB,EACnBC,YAAa,GAGjBC,OACIH,WAAaI,OACbF,YAAcE,QAGlBC,OAAS,SAASC,EAAIhB,KAItBiB,QAAU,SAASC,KAGnBC,MAAQ,WASN,QAASC,GAAeJ,GACtB,GAAIK,GAAO5B,EAAEuB,EACb,QAAIK,EAAKC,GAAG,sBAGHD,EAbXE,KAAKC,OAASD,KAAKE,MAAMhC,EAAE8B,KAAKvB,QAAQG,UAAUC,WAClDmB,KAAKG,MAAQH,KAAKE,MAAMhC,EAAE8B,KAAKvB,QAAQG,UAAUE,UACjDkB,KAAKI,MAAQJ,KAAKE,MAAMhC,EAAE8B,KAAKvB,QAAQG,UAAUI,UACjDgB,KAAKK,MAAQL,KAAKE,MAAMhC,EAAE8B,KAAKvB,QAAQG,UAAUG,UACjDiB,KAAKM,SAAWN,KAAKE,MAAMhC,EAAE8B,KAAKvB,QAAQG,UAAUK,YAEpD,IAAIU,GAAOK,IAWXA,MAAKC,OAAOM,MAAM,WACXV,EAAeG,OAGpBL,EAAKN,YAAY,KAGnBW,KAAKG,MAAMI,MAAM,WACVV,EAAeG,OAGpBL,EAAKN,YAAYM,EAAKN,cAAc,KAGtCW,KAAKI,MAAMG,MAAM,WACVV,EAAeG,OAGpBL,EAAKN,YAAYM,EAAKR,gBAGxBa,KAAKK,MAAME,MAAM,WACVV,EAAeG,OAGpBL,EAAKN,YAAYM,EAAKN,cAAc,KAGtCW,KAAKM,SAASC,MAAM,WAClB,GAAIC,GAAMX,EAAeG,KACzB,IAAKQ,EAAL,CAGA,GAAIC,GAAUD,EAAIE,KAAKf,EAAKlB,QAAQG,UAAUM,YAAYyB,OACtDC,EAASC,SAASJ,EACtBd,GAAKN,YAAYuB,MAInBZ,KAAKV,MAAMwB,IAAI,cAAcd,KAAKvB,QAAQY,aAC1CW,KAAKV,MAAMwB,IAAI,aAAad,KAAKvB,QAAQU,YAEzCa,KAAKe,aAGPC,SAAU,SAAUC,GAIlB,QAASC,GAAiB7B,EAAYF,GAapC,IATA,GAAIgC,GAAkBC,KAAKC,IAAIlC,EAAYQ,EAAKlB,QAAQW,mBACpDkC,EAAQ,EACRC,EAAMD,EAAQH,EAAkB,EAO5B9B,EAAciC,GAAWjC,EAAckC,GACzClC,EAAckC,GACfD,GAASH,EACTI,GAAOJ,EAEHI,EAAMpC,IACRmC,GAAiBC,EAAMpC,EACvBoC,EAAMpC,KAGRmC,GAASH,EACTI,GAAOJ,EAEHG,EAAQ,IACVC,GAAaD,EAAQH,EACrBG,EAAQ,GAQVjC,KAAgBkC,GAAuB,GAAdpC,IAC5BmC,EAAQjC,EAAc,EACtBkC,EAAMD,EAAQH,EAAkB,EAE5BI,GAAOpC,IACTmC,GAAiBC,EAAM,EACvBA,EAAMpC,IAQJmC,IAAUjC,GAA+B,GAAdF,GACX,GAAfE,IACFkC,EAAMlC,EAAc,EACpBiC,EAAQC,GAAOJ,EAAkB,GAIrC,IAAIK,GAAQ7B,EAAKW,SAASmB,OACtBC,EAAWH,EAAID,EAAQ,EACvBK,EAAI,CAGR,KADAhC,EAAKW,SAASsB,OAAO,WAAWC,YAAY,UACrCF,EAAED,GAAU,CACjB,GAAId,GAASe,EAAIL,EACbQ,EAAOnC,EAAKW,SAASyB,GAAGJ,EAC5BG,GAAKpB,KAAKf,EAAKlB,QAAQG,UAAUM,YAAYyB,KAAKgB,EAAEL,GAAOU,OACvDpB,GAAUvB,GACbyC,EAAKG,SAAS,UAEfN,IAEF,KAAOA,EAAEH,GACP7B,EAAKW,SAASyB,GAAGJ,GAAGjB,KAAKf,EAAKlB,QAAQG,UAAUM,YAAYyB,KAAKgB,EAAEL,GAAOY,OAC1EP,IAML,QAASQ,GAAiB9C,EAAYF,GACpC,GAAIE,EAAc,EAChB,KAAK,2BACA,IAAIA,EAAcF,EACvB,KAAK,iCAGP,IAAIA,EAAa,EACf,KAAK,kCAGY,IAAfE,GACFM,EAAKM,OAAOgC,SAAS,YACrBtC,EAAKQ,MAAM8B,SAAS,cAEpBtC,EAAKM,OAAO4B,YAAY,YACxBlC,EAAKQ,MAAM0B,YAAY,aAGrBxC,GAAeF,GACjBQ,EAAKS,MAAM6B,SAAS,YACpBtC,EAAKU,MAAM4B,SAAS,cAEpBtC,EAAKS,MAAMyB,YAAY,YACvBlC,EAAKU,MAAMwB,YAAY,aA1G3B7B,KAAKe,UAAUE,EACf,IAAItB,GAAOK,IA6GX,IAAIiB,EAAQ5B,aAAe4B,EAAQ9B,WAAY,CAC7C,GAAIE,GAAcM,EAAKN,cACnBF,EAAaQ,EAAKR,YAEtB+B,GAAiB7B,EAAYF,GAC7BgD,EAAiB9C,EAAYF,MAOrC,OAAOd","file":"../Pagination.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./ui\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,ui,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = ui.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});"]}