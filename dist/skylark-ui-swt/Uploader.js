/**
 * skylark-ui-swt - The skylark widget framework and standard widgets
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylarkui/skylark-ui-swt/
 * @license MIT
 */
define(["skylark-langx/langx","skylark-utils-dom/browser","skylark-utils-dom/eventer","skylark-utils-dom/noder","skylark-utils-dom/geom","skylark-utils-dom/query","skylark-data-collection/ArrayList","skylark-storages-diskfs/uploader","./swt","./Widget"],function(e,s,t,i,o,r,l,n,a,d){var h=e.Stateful.inherit({state:"pending",start:function(){this.isPending()&&(this.get("processor").submit(),this.state="running",this.trigger("filestarted",this))},cancel:function(){this.get("processor").abort(),this.destroy(),this.state="canceled",this.trigger("filecanceled",this)},progress:function(e){this.trigger("fileprogress",this.get("processor").progress())},fail:function(e){this.state="error",this.trigger("filefailed",e)},done:function(e){this.state="error",this.trigger("filedone",e)},isPending:function(){return"pending"==this.getState()},isRunning:function(){return"running"==this.getState()},isDone:function(){return"done"==this.getState()},isError:function(){return"error"==this.getState()||"canceled"==this.getState},getState:function(){return this.state}}),c=l.inherit({item:h}),p=d.inherit({className:"upload-manager-file row",options:{selectors:{fileName:".name",fileSize:".size",cancel:".cancel",clear:".clear",progress:".progress",message:".message"}},state:{fileName:String,fileSize:Number},_init:function(){this.processUploadMsg=this.options.processUploadMsg,this.doneMsg=this.options.doneMsg,this.fileName(this.options.fileName),this.fileSize(this.options.fileSize),this.model.on("destroy",this.close,this),this.model.on("fileprogress",this.updateProgress,this),this.model.on("filefailed",this.hasFailed,this),this.model.on("filedone",this.hasDone,this),this.model.on("all",this.update,this),this.bindEvents(),this.update()},_refresh:function(e){},updateProgress:function(e){var s=parseInt(e.loaded/e.total*100,10),t=this.getHelpers().displaySize(e.loaded)+" of "+this.getHelpers().displaySize(e.total);s>=100&&this.processUploadMsg&&(t=this.processUploadMsg),r(".progress",this.el).find(".bar").css("width",s+"%").parent().find(".progress-label").html(t)},hasFailed:function(e){r(".message",this.el).html('<i class="icon-error"></i> '+e)},hasDone:function(e){r(".message",this.el).html('<i class="icon-success"></i> '+(this.doneMsg||"Uploaded"))},update:function(){var e=this.options.selectors,s=this._velm.$(e.size+","+e.cancel),t=this._velm.$(e.progress+","+e.cancel),i=this._velm.$(e.message+","+e.clear);this.model.isPending()?(t.add(i).addClass("hidden"),s.removeClass("hidden")):this.model.isRunning()?(s.add(i).addClass("hidden"),t.removeClass("hidden")):(this.model.isDone()||this.model.isError())&&(s.add(t).addClass("hidden"),i.removeClass("hidden"))},_startup:function(){var e=this;this._velm.$(this.options.selectors.cancel).click(function(){e.model.cancel(),e.collection.remove(e.model)}),this._velm.$(this.options.selectors.clear).click(function(){e.model.destroy(),e.collection.remove(e.model)})},computeData:function(){return r.extend(this.getHelpers(),this.model.get("data"))}}),f=d.inherit({klassName:"Uploader",pluginName:"lark.uploader",options:{uploadUrl:"/upload",autoUpload:!1,selectors:{fileList:".file-list",nodata:".file-list .no-data",pickFiles:".file-picker",startUploads:".start-uploads",cancelUploads:".cancel-uploads"},dataType:"json",fileItem:{selectors:{},template:null}},state:{files:c},_init:function(){this.files(new c);var s=this._velm.$(this.options.selectors.pickFiles),t=this;this.uploadProcess=n(this._elm,{dataType:this.options.dataType,url:this.options.uploadUrl,formData:this.options.formData,autoUpload:this.options.autoUpload,singleFileUploads:!0,picker:s,add:function(s,i){i.uploadManagerFiles=[],e.each(i.files,function(e,s){s.id=t.file_id++;var o=new h({data:s,processor:i});i.uploadManagerFiles.push(o),t.files.add(o),t.renderFile(o)})},progress:function(s,t){e.each(t.uploadManagerFiles,function(e,s){s.progress(progress)})},fail:function(s,t){e.each(t.uploadManagerFiles,function(e,s){var i="Unknown error";"string"==typeof t.errorThrown?i=t.errorThrown:"object"==typeof t.errorThrown?i=t.errorThrown.message:t.result&&(i=t.result.error?t.result.error:t.result.files&&t.result.files[e]&&t.result.files[e].error?t.result.files[e].error:"Unknown remote error"),s.fail(i)})},done:function(s,t){e.each(t.uploadManagerFiles,function(e,s){s.done(t.result)})}}),this.bindProcessEvents(),this._velm.$(this.options.selectors.cancelUploads).click(function(){for(;t.files.length;)t.files.at(0).cancel()}),this._velm.$(this.options.selectors.startUploads).click(function(){t.files.forEach(function(e){e.start()})}),this._refresh({files:!0})},_refresh:function(e){var s,t,i,o,r=this;e.files&&(s=r.options.selectors,t=r.files(),i=r._velm.$(s.cancelUploads+","+s.startUploads),o=r._velm.$(s.nodata),t.length>0?(i.removeClass("hidden"),o.addClass("hidden")):(i.addClass("hidden"),o.removeClass("hidden")))},renderFile:function(s){new p(e.mixin({},this.options,{model:s,template:this.options.fileItem.template})).attach(this._velm.$(this.options.selectors.fileList))},bindProcessEvents:function(){}});return a.Uploader=f});
//# sourceMappingURL=sourcemaps/Uploader.js.map
